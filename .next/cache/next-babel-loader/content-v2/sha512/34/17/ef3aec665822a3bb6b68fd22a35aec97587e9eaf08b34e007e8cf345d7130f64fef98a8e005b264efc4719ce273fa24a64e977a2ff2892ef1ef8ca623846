{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterGeneral.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterGeneral.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport Head from 'next/head';\nimport RingLoader from \"react-spinners/RingLoader\";\n\nclass FormRegisterGeneral extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      typeOfIP: '',\n      changeForm: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"continueRegistration\", e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      var radioButtons = document.getElementsByName('ip_type');\n\n      if (!radioButtons[0].checked && !radioButtons[1].checked && !radioButtons[2].checked) {\n        this.setState({\n          loading: false\n        });\n        document.getElementById(\"typeOfIP\").style.border = \"2px solid red\";\n        alert(\"ERROR! You haven't selected the type of intellectual property you want to register!\");\n      } else {\n        if (document.getElementById(\"file_upload\").value == \"\") {\n          this.setState({\n            loading: false\n          });\n          document.getElementById(\"file_upload\").style.border = \"2px solid red\";\n          alert(\"ERROR! You haven't selected the file you want to register!\");\n        } else {\n          this.setState({\n            loading: false\n          });\n\n          if (radioButtons[0].checked == true) {\n            this.props.changeForm('typeOfIP', 'Trademark');\n            this.props.nextStep(1);\n          } else if (radioButtons[1].checked == true) {\n            this.props.changeForm('typeOfIP', 'Patent');\n            this.props.nextStep(4);\n          } else if (radioButtons[2].checked == true) {\n            this.props.changeForm('typeOfIP', 'Design');\n            this.props.nextStep(7);\n          }\n        }\n      }\n    });\n\n    _defineProperty(this, \"previousRegistration\", e => {\n      e.preventDefault();\n      this.props.previousStep(1);\n    });\n\n    _defineProperty(this, \"file_upload\", event => {\n      this.setState({\n        loading: true\n      });\n      const file = document.getElementById(\"file_upload\");\n      console.log(file.files);\n\n      if (file.files[0].size > 104857600) {\n        alert(`${file.files[0].name} is too big! Max size is 100MB`);\n        this.setState({\n          loading: false\n        });\n        file.value = \"\";\n      } else {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n          var hash = CryptoJS.MD5(CryptoJS.enc.Latin1.parse(reader.result));\n          var md5 = hash.toString(CryptoJS.enc.Hex);\n          this.state.changeForm('fileHash', md5);\n        };\n\n        reader.readAsBinaryString(file.files[0]);\n        this.setState({\n          loading: false\n        });\n      }\n    });\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const {\n      changeForm\n    } = this.props;\n    this.setState({\n      changeForm\n    });\n    const address = await web3.eth.getAccounts();\n\n    if (address == \"\") {\n      this.setState({\n        loading: false\n      });\n      alert(\"Metamask has disconnected, please connect Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n\n    this.setState({\n      loading: false\n    });\n  }\n\n  // add timeout for form\n  render() {\n    const {\n      values\n    } = this.props;\n    const {\n      nextStep\n    } = this.props;\n    const {\n      changeForm\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"script\", {\n          src: \"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/core.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n          src: \"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/md5.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: style.form,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Intellectual Property Registration Form 1/2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.dateLabel,\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.date,\n          type: \"text\",\n          value: values.currentDate,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.typeOfIPLabel,\n          children: \"Type of IP: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.typeOfIP,\n          id: \"typeOfIP\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"trademark\",\n            name: \"ip_type\",\n            value: \"trademark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"trademark\",\n            children: \"Trademark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 57\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"patent\",\n            name: \"ip_type\",\n            value: \"patent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"patent\",\n            children: \"Patent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"design\",\n            name: \"ip_type\",\n            value: \"design\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"design\",\n            children: \"Design\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.fileLabel,\n          children: \"File: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file_upload\",\n          className: style.file,\n          onChange: this.file_upload,\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.back,\n          type: \"button\",\n          onClick: this.previousRegistration,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.next,\n          type: \"button\",\n          onClick: this.continueRegistration,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FormRegisterGeneral;","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterGeneral.js"],"names":["React","Component","Layout","style","Link","Router","web3","Head","RingLoader","FormRegisterGeneral","typeOfIP","changeForm","loading","e","preventDefault","setState","radioButtons","document","getElementsByName","checked","getElementById","border","alert","value","props","nextStep","previousStep","event","file","console","log","files","size","name","reader","FileReader","onload","hash","CryptoJS","MD5","enc","Latin1","parse","result","md5","toString","Hex","state","readAsBinaryString","componentDidMount","address","eth","getAccounts","pushRoute","render","values","form","dateLabel","date","currentDate","typeOfIPLabel","fileLabel","file_upload","back","previousRegistration","next","continueRegistration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterGeneral.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport Head from 'next/head';\nimport RingLoader from \"react-spinners/RingLoader\";\n\nclass FormRegisterGeneral extends Component {\n  state = {\n    typeOfIP: '',\n    changeForm: '',\n    loading: false\n  }\n\n  continueRegistration = e => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    var radioButtons = document.getElementsByName('ip_type');\n\n    if (!radioButtons[0].checked && !radioButtons[1].checked && !radioButtons[2].checked) {\n      this.setState({ loading: false });\n      document.getElementById(\"typeOfIP\").style.border = \"2px solid red\";\n      alert(\"ERROR! You haven't selected the type of intellectual property you want to register!\");\n    } else {\n      if (document.getElementById(\"file_upload\").value == \"\") {\n        this.setState({ loading: false });\n        document.getElementById(\"file_upload\").style.border = \"2px solid red\";\n        alert(\"ERROR! You haven't selected the file you want to register!\");\n      } else {\n        this.setState({ loading: false });\n        if (radioButtons[0].checked == true) {\n          this.props.changeForm('typeOfIP', 'Trademark');\n          this.props.nextStep(1);\n        } else if (radioButtons[1].checked == true) {\n          this.props.changeForm('typeOfIP', 'Patent');\n          this.props.nextStep(4);\n        } else if (radioButtons[2].checked == true) {\n          this.props.changeForm('typeOfIP', 'Design');\n          this.props.nextStep(7);\n        }\n      }\n    }\n  }\n\n  previousRegistration = e => {\n    e.preventDefault();\n    this.props.previousStep(1);\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    const { changeForm } = this.props;\n    this.setState({ changeForm })\n    const address = await web3.eth.getAccounts();\n    if (address == \"\") {\n      this.setState({ loading: false });\n      alert(\"Metamask has disconnected, please connect Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n    this.setState({ loading: false });\n  }\n\n  file_upload = (event) => {\n    this.setState({ loading: true });\n    const file = document.getElementById(\"file_upload\");\n    console.log(file.files);\n    if (file.files[0].size > 104857600) {\n      alert(`${file.files[0].name} is too big! Max size is 100MB`);\n      this.setState({ loading: false });\n      file.value = \"\";\n    } else {\n      const reader = new FileReader();\n      reader.onload = () => {\n        var hash = CryptoJS.MD5(CryptoJS.enc.Latin1.parse(reader.result));\n        var md5 = hash.toString(CryptoJS.enc.Hex);\n\n        this.state.changeForm('fileHash', md5);\n      }\n      reader.readAsBinaryString(file.files[0]);\n      this.setState({ loading: false });\n    }\n  }\n\n // add timeout for form\n  render() {\n    const { values } = this.props;\n    const { nextStep } = this.props;\n    const { changeForm } = this.props;\n\n    return (\n      <Layout>\n        <Head>\n          <script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/core.js\"></script>\n          <script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/md5.js\"></script>\n        </Head>\n        <form className={style.form}>\n          <h2>Intellectual Property Registration Form 1/2</h2>\n          <p className={style.dateLabel}>Date:</p>\n          <input className={style.date} type='text' value={values.currentDate} readOnly />\n          <p className={style.typeOfIPLabel}>Type of IP: </p>\n          <div className={style.typeOfIP} id=\"typeOfIP\">\n            <input type=\"radio\" id=\"trademark\" name=\"ip_type\" value=\"trademark\"/>\n            <label htmlFor=\"trademark\">Trademark</label><br/>\n            <input type=\"radio\" id=\"patent\" name=\"ip_type\" value=\"patent\"/>\n            <label htmlFor=\"patent\">Patent</label><br/>\n            <input type=\"radio\" id=\"design\" name=\"ip_type\" value=\"design\"/>\n            <label htmlFor=\"design\">Design</label>\n          </div>\n          <p className={style.fileLabel}>File: </p>\n          <input id=\"file_upload\" className={style.file} onChange={this.file_upload} type=\"file\"/>\n          <button className={style.back} type='button' onClick={ this.previousRegistration }>Back</button>\n          <button className={style.next} type='button' onClick={ this.continueRegistration }>Next</button>\n        </form>\n      </Layout>\n    );\n  }\n\n}\n\nexport default FormRegisterGeneral;\n"]},"metadata":{},"sourceType":"module"}