{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/pages/yourip.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\nexport default class YourIP extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      trademarks: [],\n      patents: [],\n      designs: []\n    });\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n    const trademarks = await factory.methods.getTrademarks(address[0]).call();\n    const patents = await factory.methods.getPatents(address[0]).call();\n    const designs = await factory.methods.getDesigns(address[0]).call();\n    this.setState({\n      trademarks\n    });\n    this.setState({\n      patents\n    });\n    this.setState({\n      designs\n    });\n  }\n\n  renderIP() {\n    const items = this.state.trademarks.map(address => {\n      return /*#__PURE__*/_jsxDEV(IntellectualPropertyItem, {\n        address: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: this.renderIP()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/pages/yourip.js"],"names":["React","Component","Layout","web3","factory","IntellectualPropertyItem","YourIP","trademarks","patents","designs","componentDidMount","address","eth","getAccounts","methods","getTrademarks","call","getPatents","getDesigns","setState","renderIP","items","state","map","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,wBAAP,MAAqC,wCAArC;AAEA,eAAe,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCAClC;AACJM,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,OAAO,EAAE,EAFL;AAGJC,MAAAA,OAAO,EAAE;AAHL,KADkC;AAAA;;AAO1C,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,OAAO,GAAG,MAAMR,IAAI,CAACS,GAAL,CAASC,WAAT,EAAtB;AACA,UAAMN,UAAU,GAAG,MAAMH,OAAO,CAACU,OAAR,CAAgBC,aAAhB,CAA8BJ,OAAO,CAAC,CAAD,CAArC,EAA0CK,IAA1C,EAAzB;AACA,UAAMR,OAAO,GAAG,MAAMJ,OAAO,CAACU,OAAR,CAAgBG,UAAhB,CAA2BN,OAAO,CAAC,CAAD,CAAlC,EAAuCK,IAAvC,EAAtB;AACA,UAAMP,OAAO,GAAG,MAAML,OAAO,CAACU,OAAR,CAAgBI,UAAhB,CAA2BP,OAAO,CAAC,CAAD,CAAlC,EAAuCK,IAAvC,EAAtB;AACA,SAAKG,QAAL,CAAc;AAAEZ,MAAAA;AAAF,KAAd;AACA,SAAKY,QAAL,CAAc;AAAEX,MAAAA;AAAF,KAAd;AACA,SAAKW,QAAL,CAAc;AAAEV,MAAAA;AAAF,KAAd;AACH;;AAEDW,EAAAA,QAAQ,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWf,UAAX,CAAsBgB,GAAtB,CAA0BZ,OAAO,IAAI;AAC/C,0BAAO,QAAC,wBAAD;AACH,QAAA,OAAO,EAAIA;AADR;AAAA;AAAA;AAAA;AAAA,cAAP;AAGH,KAJa,CAAd;AAKH;;AAEDa,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,MAAD;AAAA,gBACK,KAAKJ,QAAL;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA/ByC","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\n\nexport default class YourIP extends Component {\n    state = {\n        trademarks: [],\n        patents: [],\n        designs: []\n    }\n\n    async componentDidMount() {\n        const address = await web3.eth.getAccounts();\n        const trademarks = await factory.methods.getTrademarks(address[0]).call();\n        const patents = await factory.methods.getPatents(address[0]).call();\n        const designs = await factory.methods.getDesigns(address[0]).call();\n        this.setState({ trademarks });\n        this.setState({ patents });\n        this.setState({ designs });\n    }\n    \n    renderIP() {\n        const items = this.state.trademarks.map(address => {\n            return <IntellectualPropertyItem \n                address = {address} \n            />   \n        });\n    }\n\n    render() {\n        return (\n            <Layout>\n                {this.renderIP()}\n            </Layout>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}