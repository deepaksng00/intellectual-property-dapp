{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterDesignConfirm.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterDesignConfirm.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\n\nclass FormRegisterDesignConfirm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"continueRegistration\", async event => {\n      const {\n        values\n      } = this.props;\n      event.preventDefault();\n\n      const compiled_design = require(\"../ethereum/build/Design.json\");\n\n      alert(\"Creating IP\");\n      await factory.methods.createDesign(values.comment, values.fileHash).send({\n        from: values.address[0],\n        gasLimit: \"5000000\"\n      });\n      const designs = await factory.methods.getDesigns().call();\n      const numOfDesigns = await factory.methods.getNumOfDesigns().call();\n      const address = designs[numOfDesigns - 1];\n      const design = await new web3.eth.Contract(compiled_design.abi, address);\n      const filingDate_UNIX = await design.methods.getFilingDate().call();\n      const design_date_obj = new Date(filingDate_UNIX * 1000);\n      const filingDate = design_date_obj.getFullYear().toString() + \"-\" + (design_date_obj.getMonth() + 1).toString() + \"-\" + design_date_obj.getDate().toString();\n      const owner = await design.methods.getOwner().call();\n      const status = await design.methods.getStatus().call(); // const publicationDate_UNIX = await design.methods.getPublicationDate().call();\n      // const publicationDate_obj = new Date(publicationDate_UNIX * 1000);\n      // const publicationDate = publicationDate_obj.getFullYear().toString() + \"-\" + (publicationDate_obj.getMonth()+1).toString() + \"-\" + publicationDate_obj.getDate().toString();\n\n      const status_date_UNIX = await design.methods.getStatusDate().call();\n      const status_date_object = new Date(status_date_UNIX * 1000);\n      const status_date = status_date_object.getFullYear().toString() + \"-\" + (status_date_object.getMonth() + 1).toString() + \"-\" + status_date_object.getDate().toString();\n      const renewal_date_UNIX = await design.methods.getExpirationDate().call();\n      const renewal_date_obj = new Date(renewal_date_UNIX * 1000);\n      const renewal_date = renewal_date_obj.getFullYear().toString() + \"-\" + (renewal_date_obj.getMonth() + 1).toString() + \"-\" + renewal_date_obj.getDate().toString();\n      const comment = await design.methods.getComment().call();\n      const hash = await design.methods.getDesignHash().call();\n      console.log(\"Address: \" + address);\n      console.log(\"Owner: \" + owner);\n      console.log(\"Status: \" + status);\n      console.log(\"Status last changed: \" + status_date);\n      console.log(\"Filing date: \" + filingDate); // console.log(\"Publication date: \" + publicationDate);\n\n      console.log(\"Renewal date: \" + renewal_date);\n      console.log(\"Comment: \" + comment);\n      console.log(\"Hash: \" + hash);\n      this.props.changeForm('ip_addr', address);\n      this.props.changeForm('address', owner);\n      this.props.nextStep(1);\n    });\n\n    _defineProperty(this, \"backRegistration\", e => {\n      e.preventDefault();\n      this.props.previousStep(1);\n    });\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n  }\n\n  render() {\n    const {\n      values\n    } = this.props;\n    const {\n      nextStep\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: style.form,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Confirm your details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.addressLabel,\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.address,\n          type: \"text\",\n          value: values.address,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.dateLabel,\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.date,\n          type: \"text\",\n          value: values.currentDate,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.typeOfIPLabel,\n          children: \"Type of IP:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.typeOfIP,\n          type: \"text\",\n          value: values.typeOfIP,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.commentLabel,\n          children: \"Comment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.comment,\n          type: \"text\",\n          value: values.comment,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.designHashLabel,\n          children: \"Design hash:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.designHash,\n          type: \"text\",\n          value: values.fileHash,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.back,\n          type: \"button\",\n          onClick: this.backRegistration,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.next,\n          type: \"button\",\n          onClick: this.continueRegistration,\n          children: \"Register Design\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FormRegisterDesignConfirm;","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterDesignConfirm.js"],"names":["React","Component","Layout","style","Link","Router","web3","factory","FormRegisterDesignConfirm","event","values","props","preventDefault","compiled_design","require","alert","methods","createDesign","comment","fileHash","send","from","address","gasLimit","designs","getDesigns","call","numOfDesigns","getNumOfDesigns","design","eth","Contract","abi","filingDate_UNIX","getFilingDate","design_date_obj","Date","filingDate","getFullYear","toString","getMonth","getDate","owner","getOwner","status","getStatus","status_date_UNIX","getStatusDate","status_date_object","status_date","renewal_date_UNIX","getExpirationDate","renewal_date_obj","renewal_date","getComment","hash","getDesignHash","console","log","changeForm","nextStep","e","previousStep","componentDidMount","getAccounts","pushRoute","render","form","addressLabel","dateLabel","date","currentDate","typeOfIPLabel","typeOfIP","commentLabel","designHashLabel","designHash","back","backRegistration","next","continueRegistration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterDesignConfirm.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\n\nclass FormRegisterDesignConfirm extends Component {\n   continueRegistration = async (event) => {\n    const { values } = this.props;\n    event.preventDefault();\n    const compiled_design = require(\"../ethereum/build/Design.json\");\n    alert(\"Creating IP\");\n\n    await factory.methods.createDesign(values.comment, values.fileHash).send({\n     from: values.address[0],\n     gasLimit: \"5000000\"\n    });\n\n    const designs = await factory.methods.getDesigns().call();\n    const numOfDesigns = await factory.methods.getNumOfDesigns().call();\n    const address = designs[numOfDesigns-1];\n    const design = await new web3.eth.Contract(compiled_design.abi, address);\n\n    const filingDate_UNIX = await design.methods.getFilingDate().call();\n    const design_date_obj = new Date(filingDate_UNIX * 1000);\n    const filingDate = design_date_obj.getFullYear().toString() + \"-\" + (design_date_obj.getMonth()+1).toString() + \"-\" + design_date_obj.getDate().toString();\n    const owner = await design.methods.getOwner().call();\n    const status = await design.methods.getStatus().call();\n    // const publicationDate_UNIX = await design.methods.getPublicationDate().call();\n    // const publicationDate_obj = new Date(publicationDate_UNIX * 1000);\n    // const publicationDate = publicationDate_obj.getFullYear().toString() + \"-\" + (publicationDate_obj.getMonth()+1).toString() + \"-\" + publicationDate_obj.getDate().toString();\n    const status_date_UNIX = await design.methods.getStatusDate().call();\n    const status_date_object = new Date(status_date_UNIX * 1000);\n    const status_date = status_date_object.getFullYear().toString() + \"-\" + (status_date_object.getMonth()+1).toString() + \"-\" + status_date_object.getDate().toString();\n    const renewal_date_UNIX = await design.methods.getExpirationDate().call();\n    const renewal_date_obj = new Date(renewal_date_UNIX * 1000);\n    const renewal_date = renewal_date_obj.getFullYear().toString() + \"-\" + (renewal_date_obj.getMonth()+1).toString() + \"-\" + renewal_date_obj.getDate().toString();\n    const comment = await design.methods.getComment().call();\n    const hash = await design.methods.getDesignHash().call();\n\n    console.log(\"Address: \" + address);\n    console.log(\"Owner: \" + owner);\n    console.log(\"Status: \" + status);\n    console.log(\"Status last changed: \" + status_date)\n    console.log(\"Filing date: \" + filingDate);\n    // console.log(\"Publication date: \" + publicationDate);\n    console.log(\"Renewal date: \" + renewal_date);\n    console.log(\"Comment: \" + comment);\n    console.log(\"Hash: \" + hash);\n\n    this.props.changeForm('ip_addr', address);\n    this.props.changeForm('address', owner);\n\n    this.props.nextStep(1);\n  }\n\n  backRegistration = e => {\n    e.preventDefault();\n    this.props.previousStep(1);\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n  }\n\n  render() {\n    const { values } = this.props;\n    const { nextStep } = this.props;\n\n    return (\n      <Layout>\n        <form className={style.form}>\n          <h2>Confirm your details</h2>\n          <p className={style.addressLabel}>Address:</p>\n          <input className={style.address} type='text' value={values.address} readOnly />\n          <p className={style.dateLabel}>Date:</p>\n          <input className={style.date} type='text' value={values.currentDate} readOnly />\n          <p className={style.typeOfIPLabel}>Type of IP:</p>\n          <input className={style.typeOfIP} type='text' value={values.typeOfIP} readOnly />\n          <p className={style.commentLabel}>Comment:</p>\n          <input className={style.comment} type='text' value={values.comment} readOnly />\n          <p className={style.designHashLabel}>Design hash:</p>\n          <input className={style.designHash} type='text' value={values.fileHash} readOnly />\n          <button className={style.back} type='button' onClick={ this.backRegistration }>Back</button>\n          <button className={style.next} type='button' onClick={ this.continueRegistration }>Register Design</button>\n      </form>\n      </Layout>\n    );\n  }\n}\n\nexport default FormRegisterDesignConfirm;\n"]},"metadata":{},"sourceType":"module"}