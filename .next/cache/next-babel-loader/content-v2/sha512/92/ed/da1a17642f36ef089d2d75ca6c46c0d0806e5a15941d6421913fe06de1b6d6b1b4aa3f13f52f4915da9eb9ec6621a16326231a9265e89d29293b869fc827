{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterTrademarkConfirm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterTrademarkConfirm.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nvar FormRegisterTrademarkConfirm = /*#__PURE__*/function (_Component) {\n  _inherits(FormRegisterTrademarkConfirm, _Component);\n\n  var _super = _createSuper(FormRegisterTrademarkConfirm);\n\n  function FormRegisterTrademarkConfirm() {\n    var _this;\n\n    _classCallCheck(this, FormRegisterTrademarkConfirm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"continueRegistration\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var values, compiled_trademark, trademarks, numOfTrademarks, address;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                values = _this.props.values;\n                compiled_trademark = require(\"../ethereum/build/Trademark.json\");\n                _context.prev = 3;\n\n                _this.setState({\n                  loading: true\n                });\n\n                _context.next = 7;\n                return factory.methods.createTrademark(values.markDesc, values.fileHash).send({\n                  from: values.address[0],\n                  gasLimit: \"5000000\"\n                })[\"catch\"](function () {\n                  throw 'HashAlreadyUsed';\n                });\n\n              case 7:\n                _context.next = 9;\n                return factory.methods.getTrademarks(values.address[0]).call();\n\n              case 9:\n                trademarks = _context.sent;\n                numOfTrademarks = trademarks.length;\n                address = trademarks[numOfTrademarks - 1];\n\n                _this.props.changeForm('ip_addr', address);\n\n                _this.props.changeForm('address', values.address[0]);\n\n                _this.setState({\n                  loading: false\n                });\n\n                _this.props.nextStep(1);\n\n                _context.next = 23;\n                break;\n\n              case 18:\n                _context.prev = 18;\n                _context.t0 = _context[\"catch\"](3);\n\n                _this.setState({\n                  loading: false\n                });\n\n                alert(\"ERROR: The hash has already been registered!\");\n\n                _this.props.previousStep(2);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 18]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"backRegistration\", function (e) {\n      e.preventDefault();\n\n      _this.props.previousStep(1);\n    });\n\n    return _this;\n  }\n\n  _createClass(FormRegisterTrademarkConfirm, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var address;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                address = _context2.sent;\n\n                if (address == \"\") {\n                  alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n                  Router.pushRoute('/');\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var values = this.props.values;\n      var nextStep = this.props.nextStep;\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: [\"this.state.loading ?\", /*#__PURE__*/_jsxDEV(ClipLoader, {\n          color: color,\n          loading: this.state.loading,\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), \":\", /*#__PURE__*/_jsxDEV(\"form\", {\n          className: style.form,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Confirm your details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.addressLabel,\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.address,\n            type: \"text\",\n            value: values.address,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.dateLabel,\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.date,\n            type: \"text\",\n            value: values.currentDate,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.typeOfIPLabel,\n            children: \"Type of IP:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.typeOfIP,\n            type: \"text\",\n            value: values.typeOfIP,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.markDescLabel,\n            children: \"Mark description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.markDesc,\n            type: \"text\",\n            value: values.markDesc,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.markHashLabel,\n            children: \"Mark hash:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.markHash,\n            type: \"text\",\n            value: values.fileHash,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: style.back,\n            type: \"button\",\n            onClick: this.backRegistration,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: style.next,\n            type: \"button\",\n            onClick: this.continueRegistration,\n            children: \"Register Trademark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return FormRegisterTrademarkConfirm;\n}(Component);\n\nexport default FormRegisterTrademarkConfirm;","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterTrademarkConfirm.js"],"names":["React","Component","Layout","style","Link","Router","web3","factory","ClipLoader","FormRegisterTrademarkConfirm","loading","event","preventDefault","values","props","compiled_trademark","require","setState","methods","createTrademark","markDesc","fileHash","send","from","address","gasLimit","getTrademarks","call","trademarks","numOfTrademarks","length","changeForm","nextStep","alert","previousStep","e","eth","getAccounts","pushRoute","color","state","form","addressLabel","dateLabel","date","currentDate","typeOfIPLabel","typeOfIP","markDescLabel","markHashLabel","markHash","back","backRegistration","next","continueRegistration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterTrademarkConfirm.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nclass FormRegisterTrademarkConfirm extends Component {\n  state = {\n    loading: false\n  }\n\n  continueRegistration = async (event) => {\n    event.preventDefault();\n\n    const { values } = this.props;\n    const compiled_trademark = require(\"../ethereum/build/Trademark.json\");\n\n    try {\n      this.setState({loading: true});\n\n      await factory.methods.createTrademark(values.markDesc, values.fileHash)\n        .send({ from: values.address[0], gasLimit: \"5000000\"})\n        .catch(() => {throw 'HashAlreadyUsed';})\n\n      const trademarks = await factory.methods.getTrademarks(values.address[0]).call();\n      const numOfTrademarks = trademarks.length;\n      const address = trademarks[numOfTrademarks-1];\n\n      this.props.changeForm('ip_addr', address);\n      this.props.changeForm('address', values.address[0]);\n\n      this.setState({loading: false})\n\n      this.props.nextStep(1);\n    } catch (error) {\n      this.setState({loading: false})\n      alert(\"ERROR: The hash has already been registered!\");\n      this.props.previousStep(2);\n    }\n  }\n\n  backRegistration = e => {\n    e.preventDefault();\n    this.props.previousStep(1);\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n  }\n\n  render() {\n    const { values } = this.props;\n    const { nextStep } = this.props;\n\n    return (\n      <Layout>\n        this.state.loading ?\n\n        <ClipLoader color={color} loading={this.state.loading} size={30} />\n\n        :\n\n        <form className={style.form}>\n          <h2>Confirm your details</h2>\n          <p className={style.addressLabel}>Address:</p>\n          <input className={style.address} type='text' value={values.address} readOnly />\n          <p className={style.dateLabel}>Date:</p>\n          <input className={style.date} type='text' value={values.currentDate} readOnly />\n          <p className={style.typeOfIPLabel}>Type of IP:</p>\n          <input className={style.typeOfIP} type='text' value={values.typeOfIP} readOnly />\n          <p className={style.markDescLabel}>Mark description:</p>\n          <input className={style.markDesc} type='text' value={values.markDesc} readOnly />\n          <p className={style.markHashLabel}>Mark hash:</p>\n          <input className={style.markHash} type='text' value={values.fileHash} readOnly />\n          <button className={style.back} type='button' onClick={ this.backRegistration }>Back</button>\n          <button className={style.next} type='button' onClick={ this.continueRegistration }>Register Trademark</button>\n      </form>\n      </Layout>\n    );\n  }\n}\n\nexport default FormRegisterTrademarkConfirm;\n"]},"metadata":{},"sourceType":"module"}