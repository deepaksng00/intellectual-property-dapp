{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterTrademarkConfirm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterTrademarkConfirm.module.css';\nimport { Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport RingLoader from \"react-spinners/RingLoader\";\n\nvar contract = require(\"../ethereum/intellectualproperty\");\n\nvar FormRegisterTrademarkConfirm = /*#__PURE__*/function (_Component) {\n  _inherits(FormRegisterTrademarkConfirm, _Component);\n\n  var _super = _createSuper(FormRegisterTrademarkConfirm);\n\n  function FormRegisterTrademarkConfirm() {\n    var _this;\n\n    _classCallCheck(this, FormRegisterTrademarkConfirm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getContract\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var totalSupply;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(contract);\n              _context.next = 3;\n              return contract.methods.totalSupply().call();\n\n            case 3:\n              totalSupply = _context.sent;\n              alert(\"TOTAL SUPPdklasmkdlmmasldmasldmaskldmkasdmklasmdklasmdklasdlkasmdklasdmklasmLY: \" + totalSupply.toString());\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"continueRegistration\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var values, tokenMetadata, currentTimestamp, expirationDate;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.getContract();\n\n                values = _this.props.values;\n                tokenMetadata = {}; // const instance = await IPRegister.deployed();\n\n                currentTimestamp = new Date().getTime() / 1000;\n                expirationDate = new Date();\n                expirationDate.setFullYear(expirationDate.getFullYear() + 5);\n                expirationDate = expirationDate.getTime() / 1000; // creating metadata for NFT\n\n                tokenMetadata += \"PubDate\" + \":\" + currentTimestamp.toString() + \",\";\n                tokenMetadata += \"ExpirationDate\" + \":\" + expirationDate.toString() + \",\";\n                tokenMetadata += \"IpfsHash\" + \":\" + values.fileHash + \",\";\n                tokenMetadata += \"TypeOfIP\" + \":\" + values.typeOfIP + \",\";\n                tokenMetadata += \"MarkDesc\" + \":\" + values.markDesc;\n                console.log(tokenMetadata);\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"backRegistration\", function (e) {\n      e.preventDefault();\n\n      _this.props.previousStep(1);\n    });\n\n    return _this;\n  }\n\n  _createClass(FormRegisterTrademarkConfirm, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var address;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                address = _context3.sent;\n\n                if (address == \"\") {\n                  alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n                  Router.pushRoute('/');\n                }\n\n                this.setState({\n                  loading: false\n                });\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var values = this.props.values;\n      var nextStep = this.props.nextStep;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          \"class\": \"loadingContainer\",\n          children: /*#__PURE__*/_jsxDEV(RingLoader, {\n            color: \"#ffffff\",\n            loading: this.state.loading,\n            size: 60\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(Layout, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: style.form,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Confirm your details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.addressLabel,\n              children: \"Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: style.address,\n              type: \"text\",\n              value: values.address,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.dateLabel,\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: style.date,\n              type: \"text\",\n              value: values.currentDate,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.typeOfIPLabel,\n              children: \"Type of IP:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: style.typeOfIP,\n              type: \"text\",\n              value: values.typeOfIP,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.markDescLabel,\n              children: \"Mark description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: style.markDesc,\n              type: \"text\",\n              value: values.markDesc,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.markHashLabel,\n              children: \"Mark hash:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: style.markHash,\n              type: \"text\",\n              value: values.fileHash,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: style.back,\n              type: \"button\",\n              onClick: this.backRegistration,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: style.next,\n              type: \"button\",\n              onClick: this.continueRegistration,\n              children: \"Register Trademark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return FormRegisterTrademarkConfirm;\n}(Component);\n\nexport default FormRegisterTrademarkConfirm;","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterTrademarkConfirm.js"],"names":["React","Component","Layout","style","Router","web3","RingLoader","contract","require","FormRegisterTrademarkConfirm","loading","console","log","methods","totalSupply","call","alert","toString","event","preventDefault","getContract","values","props","tokenMetadata","currentTimestamp","Date","getTime","expirationDate","setFullYear","getFullYear","fileHash","typeOfIP","markDesc","e","previousStep","setState","eth","getAccounts","address","pushRoute","nextStep","state","form","addressLabel","dateLabel","date","currentDate","typeOfIPLabel","markDescLabel","markHashLabel","markHash","back","backRegistration","next","continueRegistration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterTrademarkConfirm.module.css';\nimport { Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport RingLoader from \"react-spinners/RingLoader\";\nconst contract = require(\"../ethereum/intellectualproperty\");\n\n\nclass FormRegisterTrademarkConfirm extends Component {\n  state = {\n    loading: false\n  }\n\n  getContract = async () => {\n    console.log(contract);\n    const totalSupply = await contract.methods.totalSupply().call();\n    alert(\"TOTAL SUPPdklasmkdlmmasldmasldmaskldmkasdmklasmdklasmdklasdlkasmdklasdmklasmLY: \" + totalSupply.toString());\n  }\n\n  continueRegistration = async (event) => {\n    event.preventDefault();\n\n    this.getContract();\n\n    const { values } = this.props;\n    var tokenMetadata = {};\n    // const instance = await IPRegister.deployed();\n\n    const currentTimestamp = new Date().getTime() / 1000;\n    var expirationDate = new Date();\n    expirationDate.setFullYear(expirationDate.getFullYear() + 5);\n    expirationDate = expirationDate.getTime() / 1000;\n\n    // creating metadata for NFT\n    tokenMetadata += (\"PubDate\"+\":\"+currentTimestamp.toString()+\",\");\n    tokenMetadata += (\"ExpirationDate\"+\":\"+expirationDate.toString()+\",\");\n    tokenMetadata += (\"IpfsHash\"+\":\"+values.fileHash+\",\");\n    tokenMetadata += (\"TypeOfIP\"+\":\"+values.typeOfIP+\",\");\n    tokenMetadata += (\"MarkDesc\"+\":\"+values.markDesc);\n\n    console.log(tokenMetadata);\n  }\n\n  backRegistration = e => {\n    e.preventDefault();\n    this.props.previousStep(1);\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    const address = await web3.eth.getAccounts();\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n    this.setState({ loading: false });\n  }\n\n  render() {\n    const { values } = this.props;\n    const { nextStep } = this.props;\n\n    return (\n      <div>\n        {\n          this.state.loading ?\n\n          <div class=\"loadingContainer\"><RingLoader color={\"#ffffff\"} loading={this.state.loading} size={60} /></div>\n\n          :\n\n          <Layout>\n            <form className={style.form}>\n              <h2>Confirm your details</h2>\n              <p className={style.addressLabel}>Address:</p>\n              <input className={style.address} type='text' value={values.address} readOnly />\n              <p className={style.dateLabel}>Date:</p>\n              <input className={style.date} type='text' value={values.currentDate} readOnly />\n              <p className={style.typeOfIPLabel}>Type of IP:</p>\n              <input className={style.typeOfIP} type='text' value={values.typeOfIP} readOnly />\n              <p className={style.markDescLabel}>Mark description:</p>\n              <input className={style.markDesc} type='text' value={values.markDesc} readOnly />\n              <p className={style.markHashLabel}>Mark hash:</p>\n              <input className={style.markHash} type='text' value={values.fileHash} readOnly />\n              <button className={style.back} type='button' onClick={ this.backRegistration }>Back</button>\n              <button className={style.next} type='button' onClick={ this.continueRegistration }>Register Trademark</button>\n            </form>\n          </Layout>\n        }\n      </div>\n    );\n  }\n}\n\nexport default FormRegisterTrademarkConfirm;\n"]},"metadata":{},"sourceType":"module"}