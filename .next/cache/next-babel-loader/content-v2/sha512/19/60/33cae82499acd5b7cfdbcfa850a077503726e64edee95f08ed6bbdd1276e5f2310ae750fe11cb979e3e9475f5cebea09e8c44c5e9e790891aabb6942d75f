{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterGeneral.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterGeneral.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport Head from 'next/head';\n\nvar FormRegisterGeneral = /*#__PURE__*/function (_Component) {\n  _inherits(FormRegisterGeneral, _Component);\n\n  var _super = _createSuper(FormRegisterGeneral);\n\n  function FormRegisterGeneral() {\n    var _this;\n\n    _classCallCheck(this, FormRegisterGeneral);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      typeOfIP: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"continueRegistration\", function (e) {\n      e.preventDefault();\n      var radioButtons = document.getElementsByName('ip_type');\n\n      if (!radioButtons[0].checked && !radioButtons[1].checked && !radioButtons[2].checked) {\n        document.getElementById(\"typeOfIP\").style.border = \"2px solid red\";\n        alert(\"ERROR! You haven't selected the type of intellectual property you want to register!\");\n      } else {\n        if (document.getElementById(\"file_upload\").value == \"\") {\n          document.getElementById(\"file_upload\").style.border = \"2px solid red\";\n          alert(\"ERROR! You haven't selected the file you want to register!\");\n        } else {\n          if (radioButtons[0].checked == true) {\n            _this.props.changeForm('typeOfIP', 'trademark');\n\n            _this.props.nextStep(1);\n          } else if (radioButtons[1].checked == true) {\n            _this.props.changeForm('typeOfIP', 'patent');\n\n            _this.props.nextStep(2);\n          } else if (radioButtons[2].checked == true) {\n            _this.props.changeForm('typeOfIP', 'design');\n\n            _this.props.nextStep(3);\n          }\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"file_upload\", function (event) {\n      var file = document.getElementById(\"file_upload\");\n      console.log(file.files);\n\n      if (file.files[0].size > 104857600) {\n        alert(\"\".concat(file.files[0].name, \" is too big! Max size is 100MB\"));\n        file.value = \"\";\n      } else {\n        var reader = new FileReader();\n\n        reader.onload = function () {\n          var hash = CryptoJS.MD5(CryptoJS.enc.Latin1.parse(reader.result));\n          var md5 = hash.toString(CryptoJS.enc.Hex);\n          var changeForm = _this.props.changeForm;\n          changeForm('hash', md5);\n        };\n\n        reader.readAsBinaryString(file.files[0]);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(FormRegisterGeneral, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var address;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                address = _context.sent;\n\n                if (address == \"\") {\n                  alert(\"Metamask has disconnected, please connect Metamask and try again!\");\n                  Router.pushRoute('/');\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    // add timeout for form\n    value: function render() {\n      var values = this.props.values;\n      var nextStep = this.props.nextStep;\n      var changeForm = this.props.changeForm;\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: [/*#__PURE__*/_jsxDEV(Head, {\n          children: [/*#__PURE__*/_jsxDEV(\"script\", {\n            src: \"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/core.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n            src: \"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/md5.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: style.form,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Intellectual Property Registration Form 1/2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.dateLabel,\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.date,\n            type: \"text\",\n            value: values.currentDate,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.typeOfIPLabel,\n            children: \"Type of IP: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.typeOfIP,\n            id: \"typeOfIP\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"trademark\",\n              name: \"ip_type\",\n              value: \"trademark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"trademark\",\n              children: \"Trademark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 57\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"patent\",\n              name: \"ip_type\",\n              value: \"patent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"patent\",\n              children: \"Patent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"design\",\n              name: \"ip_type\",\n              value: \"design\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"design\",\n              children: \"Design\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.fileLabel,\n            children: \"File: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"file_upload\",\n            className: style.file,\n            onChange: this.file_upload,\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: this.continueRegistration,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return FormRegisterGeneral;\n}(Component);\n\nexport default FormRegisterGeneral;","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterGeneral.js"],"names":["React","Component","Layout","style","Link","Router","web3","Head","FormRegisterGeneral","typeOfIP","e","preventDefault","radioButtons","document","getElementsByName","checked","getElementById","border","alert","value","props","changeForm","nextStep","event","file","console","log","files","size","name","reader","FileReader","onload","hash","CryptoJS","MD5","enc","Latin1","parse","result","md5","toString","Hex","readAsBinaryString","eth","getAccounts","address","pushRoute","values","form","dateLabel","date","currentDate","typeOfIPLabel","fileLabel","file_upload","continueRegistration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterGeneral.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport Head from 'next/head';\n\nclass FormRegisterGeneral extends Component {\n  state = {\n    typeOfIP: ''\n  }\n\n  continueRegistration = e => {\n    e.preventDefault();\n    var radioButtons = document.getElementsByName('ip_type');\n\n    if (!radioButtons[0].checked && !radioButtons[1].checked && !radioButtons[2].checked) {\n      document.getElementById(\"typeOfIP\").style.border = \"2px solid red\";\n      alert(\"ERROR! You haven't selected the type of intellectual property you want to register!\");\n    } else {\n      if (document.getElementById(\"file_upload\").value == \"\") {\n        document.getElementById(\"file_upload\").style.border = \"2px solid red\";\n        alert(\"ERROR! You haven't selected the file you want to register!\");\n      } else {\n        if (radioButtons[0].checked == true) {\n          this.props.changeForm('typeOfIP', 'trademark');\n          this.props.nextStep(1);\n        } else if (radioButtons[1].checked == true) {\n          this.props.changeForm('typeOfIP', 'patent');\n          this.props.nextStep(2);\n        } else if (radioButtons[2].checked == true) {\n          this.props.changeForm('typeOfIP', 'design');\n          this.props.nextStep(3);\n        }\n      }\n    }\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n    if (address == \"\") {\n      alert(\"Metamask has disconnected, please connect Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n  }\n\n  file_upload = (event) => {\n    const file = document.getElementById(\"file_upload\");\n    console.log(file.files);\n    if (file.files[0].size > 104857600) {\n      alert(`${file.files[0].name} is too big! Max size is 100MB`);\n      file.value = \"\";\n    } else {\n      const reader = new FileReader();\n      reader.onload = () => {\n        var hash = CryptoJS.MD5(CryptoJS.enc.Latin1.parse(reader.result));\n        var md5 = hash.toString(CryptoJS.enc.Hex);\n        const { changeForm } = this.props;\n        changeForm('hash', md5);\n      }\n      reader.readAsBinaryString(file.files[0]);\n    }\n  }\n\n // add timeout for form\n  render() {\n    const { values } = this.props;\n    const { nextStep } = this.props;\n    const { changeForm } = this.props;\n\n    return (\n      <Layout>\n        <Head>\n          <script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/core.js\"></script>\n          <script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/md5.js\"></script>\n        </Head>\n        <form className={style.form}>\n          <h2>Intellectual Property Registration Form 1/2</h2>\n          <p className={style.dateLabel}>Date:</p>\n          <input className={style.date} type='text' value={values.currentDate} readOnly />\n          <p className={style.typeOfIPLabel}>Type of IP: </p>\n          <div className={style.typeOfIP} id=\"typeOfIP\">\n            <input type=\"radio\" id=\"trademark\" name=\"ip_type\" value=\"trademark\"/>\n            <label htmlFor=\"trademark\">Trademark</label><br/>\n            <input type=\"radio\" id=\"patent\" name=\"ip_type\" value=\"patent\"/>\n            <label htmlFor=\"patent\">Patent</label><br/>\n            <input type=\"radio\" id=\"design\" name=\"ip_type\" value=\"design\"/>\n            <label htmlFor=\"design\">Design</label>\n          </div>\n          <p className={style.fileLabel}>File: </p>\n          <input id=\"file_upload\" className={style.file} onChange={this.file_upload} type=\"file\"/>\n          <button type='button' onClick={ this.continueRegistration }>Login</button>\n        </form>\n      </Layout>\n    );\n  }\n\n}\n\nexport default FormRegisterGeneral;\n"]},"metadata":{},"sourceType":"module"}