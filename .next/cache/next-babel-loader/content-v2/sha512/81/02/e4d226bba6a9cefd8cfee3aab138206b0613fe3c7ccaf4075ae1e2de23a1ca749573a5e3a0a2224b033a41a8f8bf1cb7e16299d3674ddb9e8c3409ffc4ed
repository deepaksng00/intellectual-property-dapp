{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/pages/intellectualproperty/register.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport style from '../../styles/Index.module.css';\nimport FormRegisterLogin from '../../components/FormRegisterLogin';\nimport web3 from '../../ethereum/web3';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      step: 1,\n      address: '',\n      currentDate: '',\n      typeOfIP: '',\n      markDesc: '',\n      fileHash: '',\n      patentTitle: '',\n      addressLine1_patent: '',\n      addressLine2_patent: '',\n      addressLineCity_patent: '',\n      addressLineCounty_patent: '',\n      addressLineCountry_patent: '',\n      addressLinePostcode_patent: ''\n    });\n\n    _defineProperty(this, \"nextStep\", () => {\n      const step = this.state.step;\n      this.setState({\n        step: step + 1\n      });\n    });\n\n    _defineProperty(this, \"previousStep\", () => {\n      const step = this.state.step;\n      this.setState({\n        step: step - 1\n      });\n    });\n\n    _defineProperty(this, \"formChange\", input => e => {\n      this.setState({\n        [input]: e.target.value\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n    const currentTimestamp = new Date();\n    const currentDate = ('0' + currentTimestamp.getDate()).slice(-2) + \"-\" + ('0' + (currentTimestamp.getMonth() + 1)).slice(-2) + \"-\" + currentTimestamp.getFullYear();\n    this.setState({\n      address\n    });\n    this.setState({\n      currentDate\n    });\n  }\n\n  render() {\n    const {\n      step\n    } = this.state;\n    const {\n      address,\n      currentDate,\n      typeOfIP,\n      markDesc,\n      fileHash,\n      patentTitle,\n      addressLine1_patent,\n      addressLine2_patent,\n      addressLineCity_patent,\n      addressLineCounty_patent,\n      addressLineCountry_patent,\n      addressLinePostcode_patent\n    } = this.state;\n    const values = {\n      address,\n      currentDate,\n      typeOfIP,\n      markDesc,\n      fileHash,\n      patentTitle,\n      addressLine1_patent,\n      addressLine2_patent,\n      addressLineCity_patent,\n      addressLineCounty_patent,\n      addressLineCountry_patent,\n      addressLinePostcode_patent\n    };\n\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(FormRegisterLogin, {\n          nextStep: this.nextStep,\n          changeForm: this.formChange,\n          values: values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"General Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"IP specific\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ensuring Metamask is connected correctly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/pages/intellectualproperty/register.js"],"names":["React","Component","Layout","style","FormRegisterLogin","web3","Register","step","address","currentDate","typeOfIP","markDesc","fileHash","patentTitle","addressLine1_patent","addressLine2_patent","addressLineCity_patent","addressLineCounty_patent","addressLineCountry_patent","addressLinePostcode_patent","state","setState","input","e","target","value","componentDidMount","eth","getAccounts","currentTimestamp","Date","getDate","slice","getMonth","getFullYear","render","values","nextStep","formChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport style from '../../styles/Index.module.css';\nimport FormRegisterLogin from '../../components/FormRegisterLogin';\nimport web3 from '../../ethereum/web3';\n\nclass Register extends Component {\n  state = {\n    step: 1,\n    address: '',\n    currentDate: '',\n    typeOfIP: '',\n    markDesc: '',\n    fileHash: '',\n    patentTitle: '',\n    addressLine1_patent: '',\n    addressLine2_patent: '',\n    addressLineCity_patent: '',\n    addressLineCounty_patent: '',\n    addressLineCountry_patent: '',\n    addressLinePostcode_patent: ''\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n    const currentTimestamp = new Date();\n    const currentDate = ('0' + currentTimestamp.getDate()).slice(-2) + \"-\" + ('0' + (currentTimestamp.getMonth() + 1)).slice(-2) + \"-\" + currentTimestamp.getFullYear();\n    this.setState({ address });\n    this.setState({ currentDate });\n  }\n\n  nextStep = () => {\n    const step = this.state.step;\n    this.setState({ step: step + 1 });\n  }\n\n  previousStep = () => {\n    const step = this.state.step;\n    this.setState({ step: step - 1 });\n  }\n\n  formChange = input => e => {\n    this.setState({ [input]: e.target.value });\n  }\n\n  render() {\n    const { step } = this.state;\n    const {\n      address, currentDate, typeOfIP, markDesc, fileHash, patentTitle,\n      addressLine1_patent, addressLine2_patent, addressLineCity_patent,\n      addressLineCounty_patent, addressLineCountry_patent, addressLinePostcode_patent\n    } = this.state;\n\n    const values = {\n      address, currentDate, typeOfIP, markDesc, fileHash, patentTitle,\n      addressLine1_patent, addressLine2_patent, addressLineCity_patent,\n      addressLineCounty_patent, addressLineCountry_patent, addressLinePostcode_patent\n    }\n\n    switch(step) {\n      case 1:\n        return (\n          <FormRegisterLogin\n            nextStep={ this.nextStep }\n            changeForm = { this.formChange }\n            values = { values }\n          />\n        );\n      case 2:\n        return (\n          <h2>General Details</h2>\n        );\n      case 3:\n        return(\n          <h2>IP specific</h2>\n        );\n    }\n\n    return (\n      <Layout>\n        <h3>Ensuring Metamask is connected correctly</h3>\n\n      </Layout>\n    );\n  }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}