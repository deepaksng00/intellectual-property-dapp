{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/pages/searchip.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\nimport { Link, Router } from '../routes';\nimport style from '../styles/SearchIP.module.css';\nexport default class YourIP extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      matchingTrademarks: [],\n      matchingPatents: [],\n      matchingDesigns: [],\n      searchAddress: '',\n      found: ''\n    });\n\n    _defineProperty(this, \"onSubmit\", () => {\n      const searchAddress = document.getElementById('ipAddress').value;\n      this.setState({\n        searchAddress\n      });\n      let found = '';\n\n      for (var i = 0; i < this.state.trademarks.length; i++) {\n        if (this.state.trademarks[i] == searchAddress) {\n          found = this.state.trademarks[i];\n        }\n      }\n\n      for (var i = 0; i < this.state.patents.length; i++) {\n        if (this.state.patents[i] == searchAddress) {\n          found = this.state.patents[i];\n        }\n      }\n\n      for (var i = 0; i < this.state.designs.length; i++) {\n        if (this.state.designs[i] == searchAddress) {\n          found = this.state.designs[i];\n        }\n      }\n    });\n  }\n\n  static async getInitialProps(props) {\n    const users = await factory.methods.getUsers().call();\n    let trademarks = [];\n    let patents = [];\n    let designs = [];\n\n    for (var i = 0; i < users.length; i++) {\n      trademarks.push(await factory.methods.getTrademarks(users[i]).call());\n      patents.push(await factory.methods.getPatents(users[i]).call());\n      designs.push(await factory.methods.getDesigns(users[i]).call());\n    }\n\n    return {\n      trademarks: trademarks,\n      patents: patents,\n      designs: designs\n    };\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n  }\n\n  renderIP() {\n    if (this.state.found == '') {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No results found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this);\n    } else {\n      var trademarkItems = this.state.matchingTrademarks.map(address => {\n        return /*#__PURE__*/_jsxDEV(IntellectualPropertyItem, {\n          typeOfIP: \"Trademark\",\n          address: address,\n          empty: \"False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 24\n        }, this);\n      });\n      var patentItems = this.state.matchingPatents.map(address => {\n        return /*#__PURE__*/_jsxDEV(IntellectualPropertyItem, {\n          typeOfIP: \"Patent\",\n          address: address,\n          empty: \"False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 24\n        }, this);\n      });\n      var designItems = this.state.matchingDesigns.map(address => {\n        return /*#__PURE__*/_jsxDEV(IntellectualPropertyItem, {\n          typeOfIP: \"Design\",\n          address: address,\n          empty: \"False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 24\n        }, this);\n      });\n      return new Map([trademarkItems, patentItems, designItems]);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: style.form,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search for IP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"ipAddress\",\n          className: style.ipAddressBar,\n          type: \"text\",\n          value: this.state.ipAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.next,\n          type: \"button\",\n          onClick: this.onSubmit,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.renderIP()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/pages/searchip.js"],"names":["React","Component","Layout","web3","factory","IntellectualPropertyItem","Link","Router","style","YourIP","matchingTrademarks","matchingPatents","matchingDesigns","searchAddress","found","document","getElementById","value","setState","i","state","trademarks","length","patents","designs","getInitialProps","props","users","methods","getUsers","call","push","getTrademarks","getPatents","getDesigns","componentDidMount","address","eth","getAccounts","alert","pushRoute","renderIP","trademarkItems","map","patentItems","designItems","Map","render","form","ipAddressBar","ipAddress","next","onSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\nimport { Link, Router } from '../routes';\nimport style from '../styles/SearchIP.module.css';\n\nexport default class YourIP extends Component {\n    state = {\n        matchingTrademarks: [],\n        matchingPatents: [],\n        matchingDesigns: [],\n        searchAddress: '',\n        found: ''\n    }\n\n    static async getInitialProps(props) {\n        const users = await factory.methods.getUsers().call();\n\n        let trademarks = [];\n        let patents = [];\n        let designs = [];\n\n        for (var i = 0; i < users.length; i++) {\n            trademarks.push(await factory.methods.getTrademarks(users[i]).call());\n            patents.push(await factory.methods.getPatents(users[i]).call());\n            designs.push(await factory.methods.getDesigns(users[i]).call());\n        }\n\n        return {\n            trademarks: trademarks,\n            patents: patents,\n            designs: designs\n        };\n    }\n\n    async componentDidMount() {\n        const address = await web3.eth.getAccounts();\n        if (address == \"\") {\n            alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n            Router.pushRoute('/');\n        }\n    }\n\n    onSubmit = () => {\n        const searchAddress = document.getElementById('ipAddress').value;\n        this.setState({ searchAddress });\n        let found = '';\n        for(var i = 0; i < this.state.trademarks.length; i++) {\n            if(this.state.trademarks[i] == searchAddress) {\n                found = this.state.trademarks[i];\n            }\n        }\n        for(var i = 0; i < this.state.patents.length; i++) {\n            if(this.state.patents[i] == searchAddress) {\n                found = this.state.patents[i];\n            }\n        }\n        for(var i = 0; i < this.state.designs.length; i++) {\n            if(this.state.designs[i] == searchAddress) {\n                found = this.state.designs[i];\n            }\n        }\n    }\n\n    renderIP() {\n        if(this.state.found == '') {\n           return <h1>No results found</h1> \n        } else {\n            var trademarkItems = this.state.matchingTrademarks.map(address => {\n                return <IntellectualPropertyItem\n                    typeOfIP = \"Trademark\" \n                    address = { address } \n                    empty = \"False\"\n                />   \n            });\n    \n            var patentItems = this.state.matchingPatents.map(address => {\n                return <IntellectualPropertyItem\n                    typeOfIP = \"Patent\"\n                    address = { address }\n                    empty = \"False\"\n                />\n            });\n    \n            var designItems = this.state.matchingDesigns.map(address => {\n                return <IntellectualPropertyItem\n                    typeOfIP = \"Design\"\n                    address = { address }\n                    empty = \"False\"\n                />\n            });\n    \n            return new Map([ trademarkItems, patentItems, designItems ]);\n        }\n    }\n\n    render() {\n        return (\n            <Layout>\n                <form className={style.form}>\n                    <h2>Search for IP</h2>\n                    <input id=\"ipAddress\" className={style.ipAddressBar} type='text' value={this.state.ipAddress} />\n                    <button className={style.next} type='button' onClick={ this.onSubmit }>Next</button>\n                    <h3>{ this.renderIP() }</h3>\n                </form>\n            </Layout>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}