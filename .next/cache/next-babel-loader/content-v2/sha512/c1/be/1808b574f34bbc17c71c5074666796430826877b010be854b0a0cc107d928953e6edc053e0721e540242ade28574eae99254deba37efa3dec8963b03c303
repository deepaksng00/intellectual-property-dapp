{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterTrademarkConfirm.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterTrademarkConfirm.module.css';\nimport { Router } from '../routes';\nimport RingLoader from \"react-spinners/RingLoader\";\n\nconst IntellectualProperty = artifacts.require(\"IntellectualProperty\");\n\nclass FormRegisterTrademarkConfirm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: false\n    });\n\n    _defineProperty(this, \"continueRegistration\", async event => {\n      event.preventDefault();\n      const {\n        values\n      } = this.props;\n      const tokenMetadata = {};\n      const instance = await IntellectualProperty.deployed();\n      const currentTimestamp = new Date().getTime() / 1000;\n      const expirationDate = new Date();\n      expirationDate.setFullYear(expirationDate.getFullYear() + 5);\n      expirationDate = expirationDate.getTime() / 1000; // creating metadata for NFT\n\n      tokenMetadata += \"PubDate\" + \":\" + currentTimestamp.toString() + \",\";\n      tokenMetadata += \"ExpirationDate\" + \":\" + expirationDate.toString() + \",\";\n      tokenMetadata += \"IpfsHash\" + \":\" + values.fileHash + \",\";\n      tokenMetadata += \"TypeOfIP\" + \":\" + values.typeOfIP + \",\";\n      tokenMetadata += \"MarkDesc\" + \":\" + values.markDesc;\n      console.log(tokenMetadata);\n    });\n\n    _defineProperty(this, \"backRegistration\", e => {\n      e.preventDefault();\n      this.props.previousStep(1);\n    });\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const address = await web3.eth.getAccounts();\n\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    const {\n      values\n    } = this.props;\n    const {\n      nextStep\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"loadingContainer\",\n        children: /*#__PURE__*/_jsxDEV(RingLoader, {\n          color: \"#ffffff\",\n          loading: this.state.loading,\n          size: 60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: style.form,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Confirm your details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.addressLabel,\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.address,\n            type: \"text\",\n            value: values.address,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.dateLabel,\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.date,\n            type: \"text\",\n            value: values.currentDate,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.typeOfIPLabel,\n            children: \"Type of IP:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.typeOfIP,\n            type: \"text\",\n            value: values.typeOfIP,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.markDescLabel,\n            children: \"Mark description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.markDesc,\n            type: \"text\",\n            value: values.markDesc,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.markHashLabel,\n            children: \"Mark hash:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.markHash,\n            type: \"text\",\n            value: values.fileHash,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: style.back,\n            type: \"button\",\n            onClick: this.backRegistration,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: style.next,\n            type: \"button\",\n            onClick: this.continueRegistration,\n            children: \"Register Trademark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FormRegisterTrademarkConfirm;","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterTrademarkConfirm.js"],"names":["React","Component","Layout","style","Router","RingLoader","IntellectualProperty","artifacts","require","FormRegisterTrademarkConfirm","loading","event","preventDefault","values","props","tokenMetadata","instance","deployed","currentTimestamp","Date","getTime","expirationDate","setFullYear","getFullYear","toString","fileHash","typeOfIP","markDesc","console","log","e","previousStep","componentDidMount","setState","address","web3","eth","getAccounts","alert","pushRoute","render","nextStep","state","form","addressLabel","dateLabel","date","currentDate","typeOfIPLabel","markDescLabel","markHashLabel","markHash","back","backRegistration","next","continueRegistration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterTrademarkConfirm.module.css';\nimport { Router } from '../routes';\nimport RingLoader from \"react-spinners/RingLoader\";\nconst IntellectualProperty = artifacts.require(\"IntellectualProperty\");\n\nclass FormRegisterTrademarkConfirm extends Component {\n  state = {\n    loading: false\n  }\n\n  continueRegistration = async (event) => {\n    event.preventDefault();\n\n    const { values } = this.props;\n    const tokenMetadata = {};\n    const instance = await IntellectualProperty.deployed();\n\n    const currentTimestamp = new Date().getTime() / 1000;\n    const expirationDate = new Date();\n    expirationDate.setFullYear(expirationDate.getFullYear() + 5);\n    expirationDate = expirationDate.getTime() / 1000;\n\n    // creating metadata for NFT\n    tokenMetadata += (\"PubDate\"+\":\"+currentTimestamp.toString()+\",\");\n    tokenMetadata += (\"ExpirationDate\"+\":\"+expirationDate.toString()+\",\");\n    tokenMetadata += (\"IpfsHash\"+\":\"+values.fileHash+\",\");\n    tokenMetadata += (\"TypeOfIP\"+\":\"+values.typeOfIP+\",\");\n    tokenMetadata += (\"MarkDesc\"+\":\"+values.markDesc);\n\n    console.log(tokenMetadata);\n  }\n\n  backRegistration = e => {\n    e.preventDefault();\n    this.props.previousStep(1);\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    const address = await web3.eth.getAccounts();\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n    this.setState({ loading: false });\n  }\n\n  render() {\n    const { values } = this.props;\n    const { nextStep } = this.props;\n\n    return (\n      <div>\n        {\n          this.state.loading ?\n\n          <div class=\"loadingContainer\"><RingLoader color={\"#ffffff\"} loading={this.state.loading} size={60} /></div>\n\n          :\n\n          <Layout>\n            <form className={style.form}>\n              <h2>Confirm your details</h2>\n              <p className={style.addressLabel}>Address:</p>\n              <input className={style.address} type='text' value={values.address} readOnly />\n              <p className={style.dateLabel}>Date:</p>\n              <input className={style.date} type='text' value={values.currentDate} readOnly />\n              <p className={style.typeOfIPLabel}>Type of IP:</p>\n              <input className={style.typeOfIP} type='text' value={values.typeOfIP} readOnly />\n              <p className={style.markDescLabel}>Mark description:</p>\n              <input className={style.markDesc} type='text' value={values.markDesc} readOnly />\n              <p className={style.markHashLabel}>Mark hash:</p>\n              <input className={style.markHash} type='text' value={values.fileHash} readOnly />\n              <button className={style.back} type='button' onClick={ this.backRegistration }>Back</button>\n              <button className={style.next} type='button' onClick={ this.continueRegistration }>Register Trademark</button>\n            </form>\n          </Layout>\n        }\n      </div>\n    );\n  }\n}\n\nexport default FormRegisterTrademarkConfirm;\n"]},"metadata":{},"sourceType":"module"}