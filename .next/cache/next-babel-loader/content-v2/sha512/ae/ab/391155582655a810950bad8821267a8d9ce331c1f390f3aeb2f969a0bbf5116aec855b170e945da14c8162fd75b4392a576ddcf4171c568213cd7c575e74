{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterTrademarkConfirm.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterTrademarkConfirm.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\n\nclass FormRegisterTrademarkConfirm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"continueRegistration\", async event => {\n      const {\n        values\n      } = this.props;\n      event.preventDefault();\n\n      const compiled_trademark = require(\"../ethereum/build/Trademark.json\");\n\n      alert(\"Creating IP\");\n\n      try {\n        await factory.methods.createTrademark(values.markDesc, values.fileHash).send({\n          from: values.address[0],\n          gasLimit: \"5000000\"\n        }).catch(() => {\n          alert(\"hash has already been used!\");\n          throw 'HashAlreadyUsed';\n        });\n        const trademarks = await factory.methods.getTrademarks(values.address[0]).call();\n        const numOfTrademarks = trademarks.length;\n        const address = trademarks[numOfTrademarks - 1];\n        const trademark = await new web3.eth.Contract(compiled_trademark.abi, address);\n        const filingDate_UNIX = await trademark.methods.getFilingDate().call();\n        const trademark_date_obj = new Date(filingDate_UNIX * 1000);\n        const filingDate = trademark_date_obj.getFullYear().toString() + \"-\" + (trademark_date_obj.getMonth() + 1).toString() + \"-\" + trademark_date_obj.getDate().toString();\n        const owner = await trademark.methods.getOwner().call();\n        const status = await trademark.methods.getStatus().call(); // const publicationDate_UNIX = await trademark.methods.getPublicationDate().call();\n        // const publicationDate_obj = new Date(publicationDate_UNIX * 1000);\n        // const publicationDate = publicationDate_obj.getFullYear().toString() + \"-\" + (publicationDate_obj.getMonth()+1).toString() + \"-\" + publicationDate_obj.getDate().toString();\n\n        const status_date_UNIX = await trademark.methods.getStatusDate().call();\n        const status_date_object = new Date(status_date_UNIX * 1000);\n        const status_date = status_date_object.getFullYear().toString() + \"-\" + (status_date_object.getMonth() + 1).toString() + \"-\" + status_date_object.getDate().toString();\n        const renewal_date_UNIX = await trademark.methods.getExpirationDate().call();\n        const renewal_date_obj = new Date(renewal_date_UNIX * 1000);\n        const renewal_date = renewal_date_obj.getFullYear().toString() + \"-\" + (renewal_date_obj.getMonth() + 1).toString() + \"-\" + renewal_date_obj.getDate().toString();\n        const mark_desc = await trademark.methods.getMarkDesc().call();\n        const mark_hash = await trademark.methods.getHash().call();\n        console.log(\"Address: \" + address);\n        console.log(\"Owner: \" + owner);\n        console.log(\"Status: \" + status);\n        console.log(\"Status last changed: \" + status_date);\n        console.log(\"Filing date: \" + filingDate); // console.log(\"Publication date: \" + publicationDate);\n\n        console.log(\"Renewal date: \" + renewal_date);\n        console.log(\"Mark description: \" + mark_desc);\n        console.log(\"Mark hash: \" + mark_hash);\n        this.props.changeForm('ip_addr', address);\n        this.props.changeForm('address', owner);\n        this.props.nextStep(1);\n      } catch (error) {\n        alert(\"ERROR: The hash has already been registered!\");\n        this.props.previousStep(2);\n      }\n    });\n\n    _defineProperty(this, \"backRegistration\", e => {\n      e.preventDefault();\n      this.props.previousStep(1);\n    });\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n  }\n\n  render() {\n    const {\n      values\n    } = this.props;\n    const {\n      nextStep\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: style.form,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Confirm your details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.addressLabel,\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.address,\n          type: \"text\",\n          value: values.address,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.dateLabel,\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.date,\n          type: \"text\",\n          value: values.currentDate,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.typeOfIPLabel,\n          children: \"Type of IP:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.typeOfIP,\n          type: \"text\",\n          value: values.typeOfIP,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.markDescLabel,\n          children: \"Mark description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.markDesc,\n          type: \"text\",\n          value: values.markDesc,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.markHashLabel,\n          children: \"Mark hash:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.markHash,\n          type: \"text\",\n          value: values.fileHash,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.back,\n          type: \"button\",\n          onClick: this.backRegistration,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.next,\n          type: \"button\",\n          onClick: this.continueRegistration,\n          children: \"Register Trademark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FormRegisterTrademarkConfirm;","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterTrademarkConfirm.js"],"names":["React","Component","Layout","style","Link","Router","web3","factory","FormRegisterTrademarkConfirm","event","values","props","preventDefault","compiled_trademark","require","alert","methods","createTrademark","markDesc","fileHash","send","from","address","gasLimit","catch","trademarks","getTrademarks","call","numOfTrademarks","length","trademark","eth","Contract","abi","filingDate_UNIX","getFilingDate","trademark_date_obj","Date","filingDate","getFullYear","toString","getMonth","getDate","owner","getOwner","status","getStatus","status_date_UNIX","getStatusDate","status_date_object","status_date","renewal_date_UNIX","getExpirationDate","renewal_date_obj","renewal_date","mark_desc","getMarkDesc","mark_hash","getHash","console","log","changeForm","nextStep","error","previousStep","e","componentDidMount","getAccounts","pushRoute","render","form","addressLabel","dateLabel","date","currentDate","typeOfIPLabel","typeOfIP","markDescLabel","markHashLabel","markHash","back","backRegistration","next","continueRegistration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterTrademarkConfirm.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\n\nclass FormRegisterTrademarkConfirm extends Component {\n   continueRegistration = async (event) => {\n    const { values } = this.props;\n    event.preventDefault();\n    const compiled_trademark = require(\"../ethereum/build/Trademark.json\");\n    alert(\"Creating IP\");\n\n    try {\n      await factory.methods.createTrademark(values.markDesc, values.fileHash)\n        .send({ from: values.address[0], gasLimit: \"5000000\"})\n        .catch(() => {alert(\"hash has already been used!\"); throw 'HashAlreadyUsed'; })\n\n      const trademarks = await factory.methods.getTrademarks(values.address[0]).call();\n      const numOfTrademarks = trademarks.length;\n      const address = trademarks[numOfTrademarks-1];\n      const trademark = await new web3.eth.Contract(compiled_trademark.abi, address);\n\n      const filingDate_UNIX = await trademark.methods.getFilingDate().call();\n      const trademark_date_obj = new Date(filingDate_UNIX * 1000);\n      const filingDate = trademark_date_obj.getFullYear().toString() + \"-\" + (trademark_date_obj.getMonth()+1).toString() + \"-\" + trademark_date_obj.getDate().toString();\n      const owner = await trademark.methods.getOwner().call();\n      const status = await trademark.methods.getStatus().call();\n      // const publicationDate_UNIX = await trademark.methods.getPublicationDate().call();\n      // const publicationDate_obj = new Date(publicationDate_UNIX * 1000);\n      // const publicationDate = publicationDate_obj.getFullYear().toString() + \"-\" + (publicationDate_obj.getMonth()+1).toString() + \"-\" + publicationDate_obj.getDate().toString();\n      const status_date_UNIX = await trademark.methods.getStatusDate().call();\n      const status_date_object = new Date(status_date_UNIX * 1000);\n      const status_date = status_date_object.getFullYear().toString() + \"-\" + (status_date_object.getMonth()+1).toString() + \"-\" + status_date_object.getDate().toString();\n      const renewal_date_UNIX = await trademark.methods.getExpirationDate().call();\n      const renewal_date_obj = new Date(renewal_date_UNIX * 1000);\n      const renewal_date = renewal_date_obj.getFullYear().toString() + \"-\" + (renewal_date_obj.getMonth()+1).toString() + \"-\" + renewal_date_obj.getDate().toString();\n      const mark_desc = await trademark.methods.getMarkDesc().call();\n      const mark_hash = await trademark.methods.getHash().call();\n\n      console.log(\"Address: \" + address);\n      console.log(\"Owner: \" + owner);\n      console.log(\"Status: \" + status);\n      console.log(\"Status last changed: \" + status_date)\n      console.log(\"Filing date: \" + filingDate);\n      // console.log(\"Publication date: \" + publicationDate);\n      console.log(\"Renewal date: \" + renewal_date);\n      console.log(\"Mark description: \" + mark_desc);\n      console.log(\"Mark hash: \" + mark_hash);\n\n      this.props.changeForm('ip_addr', address);\n      this.props.changeForm('address', owner);\n\n      this.props.nextStep(1);\n    } catch (error) {\n      alert(\"ERROR: The hash has already been registered!\");\n      this.props.previousStep(2);\n    }\n  }\n\n  backRegistration = e => {\n    e.preventDefault();\n    this.props.previousStep(1);\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n  }\n\n  render() {\n    const { values } = this.props;\n    const { nextStep } = this.props;\n\n    return (\n      <Layout>\n        <form className={style.form}>\n          <h2>Confirm your details</h2>\n          <p className={style.addressLabel}>Address:</p>\n          <input className={style.address} type='text' value={values.address} readOnly />\n          <p className={style.dateLabel}>Date:</p>\n          <input className={style.date} type='text' value={values.currentDate} readOnly />\n          <p className={style.typeOfIPLabel}>Type of IP:</p>\n          <input className={style.typeOfIP} type='text' value={values.typeOfIP} readOnly />\n          <p className={style.markDescLabel}>Mark description:</p>\n          <input className={style.markDesc} type='text' value={values.markDesc} readOnly />\n          <p className={style.markHashLabel}>Mark hash:</p>\n          <input className={style.markHash} type='text' value={values.fileHash} readOnly />\n          <button className={style.back} type='button' onClick={ this.backRegistration }>Back</button>\n          <button className={style.next} type='button' onClick={ this.continueRegistration }>Register Trademark</button>\n      </form>\n      </Layout>\n    );\n  }\n}\n\nexport default FormRegisterTrademarkConfirm;\n"]},"metadata":{},"sourceType":"module"}