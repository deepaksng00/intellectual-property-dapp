{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterPatentConfirm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterPatentConfirm.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\n\nvar FormRegisterPatentConfirm = /*#__PURE__*/function (_Component) {\n  _inherits(FormRegisterPatentConfirm, _Component);\n\n  var _super = _createSuper(FormRegisterPatentConfirm);\n\n  function FormRegisterPatentConfirm() {\n    var _this;\n\n    _classCallCheck(this, FormRegisterPatentConfirm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"continueRegistration\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var values, compiled_patent, inventorAddress_full, patents, numOfPatents, address;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                values = _this.props.values;\n                event.preventDefault();\n                compiled_patent = require(\"../ethereum/build/Patent.json\");\n                alert(\"Creating IP\");\n                inventorAddress_full = values.address1_patent + \", \" + values.address2_patent + \", \" + values.addressCity_patent + \", \" + values.addressCounty_patent + \", \" + values.addressPostcode_patent + \", \" + values.addressCountry_patent;\n                _context.prev = 5;\n                _context.next = 8;\n                return factory.methods.createPatent(values.patentTitle, inventorAddress_full, values.fileHash).send({\n                  from: values.address[0],\n                  gasLimit: \"5000000\"\n                })[\"catch\"](function () {\n                  throw 'HashAlreadyUsed';\n                });\n\n              case 8:\n                _context.next = 10;\n                return factory.methods.getPatents(values.address[0]).call();\n\n              case 10:\n                patents = _context.sent;\n                numOfPatents = patents.length;\n                address = trademarks[numOfTrademarks - 1];\n\n                _this.props.changeForm('ip_addr', address);\n\n                _this.props.changeForm('address', values.address[0]);\n\n                _this.props.nextStep(1);\n\n                _context.next = 22;\n                break;\n\n              case 18:\n                _context.prev = 18;\n                _context.t0 = _context[\"catch\"](5);\n                alert(\"ERROR: The hash has already been registered!\");\n\n                _this.props.previousStep(5);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[5, 18]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"backRegistration\", function (e) {\n      e.preventDefault();\n\n      _this.props.previousStep(1);\n    });\n\n    return _this;\n  }\n\n  _createClass(FormRegisterPatentConfirm, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var values = this.props.values;\n      var nextStep = this.props.nextStep;\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: style.form,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Confirm your details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.addressLabel,\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.address,\n            type: \"text\",\n            value: values.address,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.dateLabel,\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.date,\n            type: \"text\",\n            value: values.currentDate,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.typeOfIPLabel,\n            children: \"Type of IP:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.typeOfIP,\n            type: \"text\",\n            value: values.typeOfIP,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.patentTitleLabel,\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.patentTitle,\n            type: \"text\",\n            value: values.patentTitle,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.address1Label,\n            children: \"Address line 1:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"address1\",\n            className: style.address1,\n            type: \"text\",\n            value: values.address1_patent,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.address2Label,\n            children: \"Address line 2:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"address2\",\n            className: style.address2,\n            type: \"text\",\n            value: values.address2_patent,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.addressCityLabel,\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"city\",\n            className: style.city,\n            type: \"text\",\n            value: values.addressCity_patent,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.addressCountyLabel,\n            children: \"County:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"county\",\n            className: style.county,\n            type: \"text\",\n            value: values.addressCounty_patent,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.addressPostcodeLabel,\n            children: \"Postcode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"postcode\",\n            className: style.postcode,\n            type: \"text\",\n            value: values.addressPostcode_patent,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.addressCountryLabel,\n            children: \"Country:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"country\",\n            className: style.country,\n            type: \"text\",\n            value: values.addressCountry_patent,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: style.back,\n            type: \"button\",\n            onClick: this.backRegistration,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: style.next,\n            type: \"button\",\n            onClick: this.continueRegistration,\n            children: \"Register Patent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return FormRegisterPatentConfirm;\n}(Component);\n\nexport default FormRegisterPatentConfirm;","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterPatentConfirm.js"],"names":["React","Component","Layout","style","Link","Router","web3","factory","FormRegisterPatentConfirm","event","values","props","preventDefault","compiled_patent","require","alert","inventorAddress_full","address1_patent","address2_patent","addressCity_patent","addressCounty_patent","addressPostcode_patent","addressCountry_patent","methods","createPatent","patentTitle","fileHash","send","from","address","gasLimit","getPatents","call","patents","numOfPatents","length","trademarks","numOfTrademarks","changeForm","nextStep","previousStep","e","form","addressLabel","dateLabel","date","currentDate","typeOfIPLabel","typeOfIP","patentTitleLabel","address1Label","address1","address2Label","address2","addressCityLabel","city","addressCountyLabel","county","addressPostcodeLabel","postcode","addressCountryLabel","country","back","backRegistration","next","continueRegistration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterPatentConfirm.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\n\nclass FormRegisterPatentConfirm extends Component {\n  continueRegistration = async (event) => {\n    const { values } = this.props;\n    event.preventDefault();\n    const compiled_patent = require(\"../ethereum/build/Patent.json\");\n    alert(\"Creating IP\");\n\n    const inventorAddress_full = values.address1_patent + \", \" + values.address2_patent + \", \" + values.addressCity_patent + \", \" + values.addressCounty_patent + \", \" + values.addressPostcode_patent + \", \" + values.addressCountry_patent;\n\n    try {\n      await factory.methods.createPatent(values.patentTitle, inventorAddress_full, values.fileHash).send({\n        from: values.address[0],\n        gasLimit: \"5000000\"\n       })\n       .catch(() => { throw 'HashAlreadyUsed' });\n\n      const patents = await factory.methods.getPatents(values.address[0]).call();\n      const numOfPatents = patents.length;\n      const address = trademarks[numOfTrademarks-1];\n   \n      this.props.changeForm('ip_addr', address);\n      this.props.changeForm('address', values.address[0]);\n  \n      this.props.nextStep(1);   \n    } catch (err) {\n      alert(\"ERROR: The hash has already been registered!\");\n      this.props.previousStep(5);\n    }\n  }\n\n  backRegistration = e => {\n    e.preventDefault();\n    this.props.previousStep(1);\n  }\n\n  async componentDidMount() {\n    // const address = await web3.eth.getAccounts();\n    // if (address == \"\") {\n    //   alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n    //   Router.pushRoute('/');\n    // }\n  }\n\n  render() {\n    const { values } = this.props;\n    const { nextStep } = this.props;\n\n    return (\n      <Layout>\n        <form className={style.form}>\n          <h2>Confirm your details</h2>\n          <p className={style.addressLabel}>Address:</p>\n          <input className={style.address} type='text' value={values.address} readOnly />\n          <p className={style.dateLabel}>Date:</p>\n          <input className={style.date} type='text' value={values.currentDate} readOnly />\n          <p className={style.typeOfIPLabel}>Type of IP:</p>\n          <input className={style.typeOfIP} type='text' value={values.typeOfIP} readOnly />\n          <p className={style.patentTitleLabel}>Title:</p>\n          <input className={style.patentTitle} type='text' value={values.patentTitle} readOnly />\n          <p className={style.address1Label}>Address line 1:</p>\n          <input id=\"address1\" className={style.address1} type='text' value={values.address1_patent} readOnly />\n          <p className={style.address2Label}>Address line 2:</p>\n          <input id=\"address2\" className={style.address2} type='text' value={values.address2_patent} readOnly />\n          <p className={style.addressCityLabel}>City:</p>\n          <input id=\"city\" className={style.city} type='text' value={values.addressCity_patent} readOnly />\n          <p className={style.addressCountyLabel}>County:</p>\n          <input id=\"county\" className={style.county} type='text' value={values.addressCounty_patent} readOnly />\n          <p className={style.addressPostcodeLabel}>Postcode:</p>\n          <input id=\"postcode\" className={style.postcode} type='text' value={values.addressPostcode_patent} readOnly />\n          <p className={style.addressCountryLabel}>Country:</p>\n          <input id=\"country\" className={style.country} type='text' value={values.addressCountry_patent} readOnly />\n          <button className={style.back} type='button' onClick={ this.backRegistration }>Back</button>\n          <button className={style.next} type='button' onClick={ this.continueRegistration }>Register Patent</button>\n      </form>\n      </Layout>\n    );\n  }\n}\n\nexport default FormRegisterPatentConfirm;\n"]},"metadata":{},"sourceType":"module"}