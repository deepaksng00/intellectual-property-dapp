{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/pages/searchip.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\nimport { Link, Router } from '../routes';\nexport default class YourIP extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      trademarks: [],\n      patents: [],\n      designs: []\n    });\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    } else {\n      const users = await factory.methods.getUsers().call();\n      let trademarks = [];\n      let patents = [];\n      let designs = [];\n\n      for (var i = 0; i < users.length; i++) {\n        trademarks.push(await factory.methods.getTrademarks(users[i]).call());\n        patents.push(await factory.methods.getPatents(users[i]).call());\n        designs.push(await factory.methods.getDesigns(users[i]).call());\n      }\n\n      this.setState({\n        trademarks\n      });\n      this.setState({\n        patents\n      });\n      this.setState({\n        designs\n      });\n    }\n  }\n\n  searchIP() {}\n\n  renderIP() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: this.state.trademarks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/pages/searchip.js"],"names":["React","Component","Layout","web3","factory","IntellectualPropertyItem","Link","Router","YourIP","trademarks","patents","designs","componentDidMount","address","eth","getAccounts","alert","pushRoute","users","methods","getUsers","call","i","length","push","getTrademarks","getPatents","getDesigns","setState","searchIP","renderIP","render","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,wBAAP,MAAqC,wCAArC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,WAA7B;AAEA,eAAe,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCAClC;AACJQ,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,OAAO,EAAE,EAFL;AAGJC,MAAAA,OAAO,EAAE;AAHL,KADkC;AAAA;;AAO1C,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACW,GAAL,CAASC,WAAT,EAAtB;;AACA,QAAIF,OAAO,IAAI,EAAf,EAAmB;AACfG,MAAAA,KAAK,CAAC,sEAAD,CAAL;AACAT,MAAAA,MAAM,CAACU,SAAP,CAAiB,GAAjB;AACH,KAHD,MAGO;AACH,YAAMC,KAAK,GAAG,MAAMd,OAAO,CAACe,OAAR,CAAgBC,QAAhB,GAA2BC,IAA3B,EAApB;AAEA,UAAIZ,UAAU,GAAG,EAAjB;AACA,UAAIC,OAAO,GAAG,EAAd;AACA,UAAIC,OAAO,GAAG,EAAd;;AAEA,WAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCb,QAAAA,UAAU,CAACe,IAAX,CAAgB,MAAMpB,OAAO,CAACe,OAAR,CAAgBM,aAAhB,CAA8BP,KAAK,CAACI,CAAD,CAAnC,EAAwCD,IAAxC,EAAtB;AACAX,QAAAA,OAAO,CAACc,IAAR,CAAa,MAAMpB,OAAO,CAACe,OAAR,CAAgBO,UAAhB,CAA2BR,KAAK,CAACI,CAAD,CAAhC,EAAqCD,IAArC,EAAnB;AACAV,QAAAA,OAAO,CAACa,IAAR,CAAa,MAAMpB,OAAO,CAACe,OAAR,CAAgBQ,UAAhB,CAA2BT,KAAK,CAACI,CAAD,CAAhC,EAAqCD,IAArC,EAAnB;AACH;;AAED,WAAKO,QAAL,CAAc;AAAEnB,QAAAA;AAAF,OAAd;AACA,WAAKmB,QAAL,CAAc;AAAElB,QAAAA;AAAF,OAAd;AACA,WAAKkB,QAAL,CAAc;AAAEjB,QAAAA;AAAF,OAAd;AACH;AACJ;;AAEDkB,EAAAA,QAAQ,GAAG,CAEV;;AAEDC,EAAAA,QAAQ,GAAG,CAEV;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,MAAD;AAAA,gBACM,KAAKC,KAAL,CAAWvB;AADjB;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA7CyC","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\nimport { Link, Router } from '../routes';\n\nexport default class YourIP extends Component {\n    state = {\n        trademarks: [],\n        patents: [],\n        designs: []\n    }\n\n    async componentDidMount() {\n        const address = await web3.eth.getAccounts();\n        if (address == \"\") {\n            alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n            Router.pushRoute('/');\n        } else {\n            const users = await factory.methods.getUsers().call();\n\n            let trademarks = [];\n            let patents = [];\n            let designs = [];\n\n            for (var i = 0; i < users.length; i++) {\n                trademarks.push(await factory.methods.getTrademarks(users[i]).call());\n                patents.push(await factory.methods.getPatents(users[i]).call());\n                designs.push(await factory.methods.getDesigns(users[i]).call());\n            }\n\n            this.setState({ trademarks })\n            this.setState({ patents });\n            this.setState({ designs });\n        }\n    }\n\n    searchIP() {\n\n    }\n    \n    renderIP() {\n\n    }\n\n    render() {\n        return (\n            <Layout>\n                { this.state.trademarks }\n            </Layout>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}