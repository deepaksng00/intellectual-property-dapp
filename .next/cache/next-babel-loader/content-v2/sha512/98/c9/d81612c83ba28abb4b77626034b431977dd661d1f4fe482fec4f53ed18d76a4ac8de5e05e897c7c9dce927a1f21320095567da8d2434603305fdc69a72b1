{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/pages/searchip.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\nimport { Link, Router } from '../routes';\nimport style from '../styles/SearchIP.module.css';\nexport default class YourIP extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      trademarks: [],\n      patents: [],\n      designs: [],\n      matchingTrademarks: [],\n      matchingPatents: [],\n      matchingDesigns: [],\n      ipAddress: '',\n      found: ''\n    });\n\n    _defineProperty(this, \"ipAddress_change\", event => {\n      const ipAddress = document.getElementById('ipAddress').value;\n      this.setState({\n        ipAddress\n      });\n      this.searchIP();\n    });\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    } else {\n      const users = await factory.methods.getUsers().call();\n      let trademarks = [];\n      let patents = [];\n      let designs = [];\n\n      for (var i = 0; i < users.length; i++) {\n        trademarks.push(await factory.methods.getTrademarks(users[i]).call());\n        patents.push(await factory.methods.getPatents(users[i]).call());\n        designs.push(await factory.methods.getDesigns(users[i]).call());\n      }\n\n      this.setState({\n        trademarks\n      });\n      this.setState({\n        patents\n      });\n      this.setState({\n        designs\n      });\n    }\n  }\n\n  searchIP() {\n    var matchingPatents = [];\n    var matchingDesigns = [];\n    var matchingTrademarks = [];\n\n    for (var i = 0; i < this.state.trademarks.length; i++) {\n      if (this.state.trademarks[i].indexOf(this.state.ipAddress) !== -1) {\n        matchingTrademarks.push(this.state.trademarks[i]);\n        this.setState({\n          matchingTrademarks\n        });\n      }\n    }\n\n    for (var i = 0; i < this.state.patents.length; i++) {\n      if (this.state.patents[i].indexOf(this.state.ipAddress.toString()) !== -1) {\n        matchingPatents.push(this.state.patents[i]);\n        this.setState({\n          matchingPatents\n        });\n      }\n    }\n\n    for (var i = 0; i < this.state.designs.length; i++) {\n      if (this.state.designs[i].indexOf(this.state.ipAddress) !== -1) {\n        matchingDesigns.push(this.state.designs[i]);\n        this.setState({\n          matchingDesigns\n        });\n      }\n    }\n  }\n\n  renderIP(isEmpty) {\n    if (isEmpty == true) {\n      return /*#__PURE__*/_jsxDEV(IntellectualPropertyItem, {\n        empty: \"True\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 20\n      }, this);\n    } else {\n      var trademarkItems = this.state.matchingTrademarks.map(address => {\n        return /*#__PURE__*/_jsxDEV(IntellectualPropertyItem, {\n          typeOfIP: \"Trademark\",\n          address: address,\n          empty: \"False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 24\n        }, this);\n      });\n      var patentItems = this.state.matchingPatents.map(address => {\n        return /*#__PURE__*/_jsxDEV(IntellectualPropertyItem, {\n          typeOfIP: \"Patent\",\n          address: address,\n          empty: \"False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 24\n        }, this);\n      });\n      var designItems = this.state.matchingDesigns.map(address => {\n        return /*#__PURE__*/_jsxDEV(IntellectualPropertyItem, {\n          typeOfIP: \"Design\",\n          address: address,\n          empty: \"False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 24\n        }, this);\n      });\n      return new Map([trademarkItems, patentItems, designItems]);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: style.form,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search for IP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"ipAddress\",\n          className: style.ipAddressBar,\n          type: \"text\",\n          value: this.state.ipAddress,\n          onChange: this.ipAddress_change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.next,\n          type: \"button\",\n          onClick: this.continueRegistration,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [this.renderIP(false), \" \", console.log(this.state.matchingTrademarks)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/pages/searchip.js"],"names":["React","Component","Layout","web3","factory","IntellectualPropertyItem","Link","Router","style","YourIP","trademarks","patents","designs","matchingTrademarks","matchingPatents","matchingDesigns","ipAddress","found","event","document","getElementById","value","setState","searchIP","componentDidMount","address","eth","getAccounts","alert","pushRoute","users","methods","getUsers","call","i","length","push","getTrademarks","getPatents","getDesigns","state","indexOf","toString","renderIP","isEmpty","trademarkItems","map","patentItems","designItems","Map","render","form","ipAddressBar","ipAddress_change","next","continueRegistration","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,wBAAP,MAAqC,wCAArC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,WAA7B;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AAEA,eAAe,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCAClC;AACJS,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,OAAO,EAAE,EAFL;AAGJC,MAAAA,OAAO,EAAE,EAHL;AAIJC,MAAAA,kBAAkB,EAAE,EAJhB;AAKJC,MAAAA,eAAe,EAAE,EALb;AAMJC,MAAAA,eAAe,EAAE,EANb;AAOJC,MAAAA,SAAS,EAAE,EAPP;AAQJC,MAAAA,KAAK,EAAE;AARH,KADkC;;AAAA,8CA6DtBC,KAAD,IAAW;AAC1B,YAAMF,SAAS,GAAGG,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAAvD;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACA,WAAKO,QAAL;AACH,KAjEyC;AAAA;;AAY1C,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,OAAO,GAAG,MAAMtB,IAAI,CAACuB,GAAL,CAASC,WAAT,EAAtB;;AACA,QAAIF,OAAO,IAAI,EAAf,EAAmB;AACfG,MAAAA,KAAK,CAAC,sEAAD,CAAL;AACArB,MAAAA,MAAM,CAACsB,SAAP,CAAiB,GAAjB;AACH,KAHD,MAGO;AACH,YAAMC,KAAK,GAAG,MAAM1B,OAAO,CAAC2B,OAAR,CAAgBC,QAAhB,GAA2BC,IAA3B,EAApB;AAEA,UAAIvB,UAAU,GAAG,EAAjB;AACA,UAAIC,OAAO,GAAG,EAAd;AACA,UAAIC,OAAO,GAAG,EAAd;;AAEA,WAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCxB,QAAAA,UAAU,CAAC0B,IAAX,CAAgB,MAAMhC,OAAO,CAAC2B,OAAR,CAAgBM,aAAhB,CAA8BP,KAAK,CAACI,CAAD,CAAnC,EAAwCD,IAAxC,EAAtB;AACAtB,QAAAA,OAAO,CAACyB,IAAR,CAAa,MAAMhC,OAAO,CAAC2B,OAAR,CAAgBO,UAAhB,CAA2BR,KAAK,CAACI,CAAD,CAAhC,EAAqCD,IAArC,EAAnB;AACArB,QAAAA,OAAO,CAACwB,IAAR,CAAa,MAAMhC,OAAO,CAAC2B,OAAR,CAAgBQ,UAAhB,CAA2BT,KAAK,CAACI,CAAD,CAAhC,EAAqCD,IAArC,EAAnB;AACH;;AAED,WAAKX,QAAL,CAAc;AAAEZ,QAAAA;AAAF,OAAd;AACA,WAAKY,QAAL,CAAc;AAAEX,QAAAA;AAAF,OAAd;AACA,WAAKW,QAAL,CAAc;AAAEV,QAAAA;AAAF,OAAd;AACH;AACJ;;AAEDW,EAAAA,QAAQ,GAAG;AACP,QAAIT,eAAe,GAAG,EAAtB;AACA,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIF,kBAAkB,GAAG,EAAzB;;AAEA,SAAI,IAAIqB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKM,KAAL,CAAW9B,UAAX,CAAsByB,MAAzC,EAAiDD,CAAC,EAAlD,EAAsD;AAClD,UAAI,KAAKM,KAAL,CAAW9B,UAAX,CAAsBwB,CAAtB,CAAD,CAA2BO,OAA3B,CAAmC,KAAKD,KAAL,CAAWxB,SAA9C,MAA6D,CAAC,CAAjE,EAAoE;AAChEH,QAAAA,kBAAkB,CAACuB,IAAnB,CAAwB,KAAKI,KAAL,CAAW9B,UAAX,CAAsBwB,CAAtB,CAAxB;AACA,aAAKZ,QAAL,CAAc;AAAET,UAAAA;AAAF,SAAd;AACH;AACJ;;AACD,SAAI,IAAIqB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKM,KAAL,CAAW7B,OAAX,CAAmBwB,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,UAAI,KAAKM,KAAL,CAAW7B,OAAX,CAAmBuB,CAAnB,CAAD,CAAwBO,OAAxB,CAAgC,KAAKD,KAAL,CAAWxB,SAAX,CAAqB0B,QAArB,EAAhC,MAAqE,CAAC,CAAzE,EAA4E;AACxE5B,QAAAA,eAAe,CAACsB,IAAhB,CAAqB,KAAKI,KAAL,CAAW7B,OAAX,CAAmBuB,CAAnB,CAArB;AACA,aAAKZ,QAAL,CAAc;AAAER,UAAAA;AAAF,SAAd;AACH;AACJ;;AACD,SAAI,IAAIoB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKM,KAAL,CAAW5B,OAAX,CAAmBuB,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,UAAI,KAAKM,KAAL,CAAW5B,OAAX,CAAmBsB,CAAnB,CAAD,CAAwBO,OAAxB,CAAgC,KAAKD,KAAL,CAAWxB,SAA3C,MAA0D,CAAC,CAA9D,EAAiE;AAC7DD,QAAAA,eAAe,CAACqB,IAAhB,CAAqB,KAAKI,KAAL,CAAW5B,OAAX,CAAmBsB,CAAnB,CAArB;AACA,aAAKZ,QAAL,CAAc;AAAEP,UAAAA;AAAF,SAAd;AACH;AACJ;AACJ;;AAQD4B,EAAAA,QAAQ,CAACC,OAAD,EAAU;AACd,QAAIA,OAAO,IAAI,IAAf,EAAqB;AACjB,0BAAO,QAAC,wBAAD;AAA0B,QAAA,KAAK,EAAG;AAAlC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO;AACH,UAAIC,cAAc,GAAG,KAAKL,KAAL,CAAW3B,kBAAX,CAA8BiC,GAA9B,CAAkCrB,OAAO,IAAI;AAC9D,4BAAO,QAAC,wBAAD;AACH,UAAA,QAAQ,EAAG,WADR;AAEH,UAAA,OAAO,EAAKA,OAFT;AAGH,UAAA,KAAK,EAAG;AAHL;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKH,OANoB,CAArB;AAQA,UAAIsB,WAAW,GAAG,KAAKP,KAAL,CAAW1B,eAAX,CAA2BgC,GAA3B,CAA+BrB,OAAO,IAAI;AACxD,4BAAO,QAAC,wBAAD;AACH,UAAA,QAAQ,EAAG,QADR;AAEH,UAAA,OAAO,EAAKA,OAFT;AAGH,UAAA,KAAK,EAAG;AAHL;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKH,OANiB,CAAlB;AAQA,UAAIuB,WAAW,GAAG,KAAKR,KAAL,CAAWzB,eAAX,CAA2B+B,GAA3B,CAA+BrB,OAAO,IAAI;AACxD,4BAAO,QAAC,wBAAD;AACH,UAAA,QAAQ,EAAG,QADR;AAEH,UAAA,OAAO,EAAKA,OAFT;AAGH,UAAA,KAAK,EAAG;AAHL;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKH,OANiB,CAAlB;AAQA,aAAO,IAAIwB,GAAJ,CAAQ,CAAEJ,cAAF,EAAkBE,WAAlB,EAA+BC,WAA/B,CAAR,CAAP;AACH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,MAAD;AAAA,6BACI;AAAM,QAAA,SAAS,EAAE1C,KAAK,CAAC2C,IAAvB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,EAAE,EAAC,WAAV;AAAsB,UAAA,SAAS,EAAE3C,KAAK,CAAC4C,YAAvC;AAAqD,UAAA,IAAI,EAAC,MAA1D;AAAiE,UAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWxB,SAAnF;AAA8F,UAAA,QAAQ,EAAE,KAAKqC;AAA7G;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,SAAS,EAAE7C,KAAK,CAAC8C,IAAzB;AAA+B,UAAA,IAAI,EAAC,QAApC;AAA6C,UAAA,OAAO,EAAG,KAAKC,oBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,qBAAM,KAAKZ,QAAL,CAAc,KAAd,CAAN,OAA8Ba,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAW3B,kBAAvB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA9GyC","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\nimport { Link, Router } from '../routes';\nimport style from '../styles/SearchIP.module.css';\n\nexport default class YourIP extends Component {\n    state = {\n        trademarks: [],\n        patents: [],\n        designs: [],\n        matchingTrademarks: [],\n        matchingPatents: [],\n        matchingDesigns: [],\n        ipAddress: '',\n        found: ''\n    }\n\n    async componentDidMount() {\n        const address = await web3.eth.getAccounts();\n        if (address == \"\") {\n            alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n            Router.pushRoute('/');\n        } else {\n            const users = await factory.methods.getUsers().call();\n\n            let trademarks = [];\n            let patents = [];\n            let designs = [];\n\n            for (var i = 0; i < users.length; i++) {\n                trademarks.push(await factory.methods.getTrademarks(users[i]).call());\n                patents.push(await factory.methods.getPatents(users[i]).call());\n                designs.push(await factory.methods.getDesigns(users[i]).call());\n            }\n\n            this.setState({ trademarks })\n            this.setState({ patents });\n            this.setState({ designs });\n        }\n    }\n\n    searchIP() {\n        var matchingPatents = [];\n        var matchingDesigns = [];\n        var matchingTrademarks = [];\n\n        for(var i = 0; i < this.state.trademarks.length; i++) {\n            if((this.state.trademarks[i]).indexOf(this.state.ipAddress) !== -1) {\n                matchingTrademarks.push(this.state.trademarks[i]);\n                this.setState({ matchingTrademarks });\n            }\n        }\n        for(var i = 0; i < this.state.patents.length; i++) {\n            if((this.state.patents[i]).indexOf(this.state.ipAddress.toString()) !== -1) {\n                matchingPatents.push(this.state.patents[i]);\n                this.setState({ matchingPatents });\n            }\n        }\n        for(var i = 0; i < this.state.designs.length; i++) {\n            if((this.state.designs[i]).indexOf(this.state.ipAddress) !== -1) {\n                matchingDesigns.push(this.state.designs[i]);\n                this.setState({ matchingDesigns });\n            }\n        }\n    }\n\n    ipAddress_change = (event) => {\n        const ipAddress = document.getElementById('ipAddress').value;\n        this.setState({ ipAddress });\n        this.searchIP();\n    }\n\n    renderIP(isEmpty) {\n        if (isEmpty == true) {\n            return <IntellectualPropertyItem empty = \"True\" />\n        } else {\n            var trademarkItems = this.state.matchingTrademarks.map(address => {\n                return <IntellectualPropertyItem\n                    typeOfIP = \"Trademark\" \n                    address = { address } \n                    empty = \"False\"\n                />   \n            });\n    \n            var patentItems = this.state.matchingPatents.map(address => {\n                return <IntellectualPropertyItem\n                    typeOfIP = \"Patent\"\n                    address = { address }\n                    empty = \"False\"\n                />\n            });\n    \n            var designItems = this.state.matchingDesigns.map(address => {\n                return <IntellectualPropertyItem\n                    typeOfIP = \"Design\"\n                    address = { address }\n                    empty = \"False\"\n                />\n            });\n    \n            return new Map([ trademarkItems, patentItems, designItems ]);\n        }\n    }\n\n    render() {\n        return (\n            <Layout>\n                <form className={style.form}>\n                    <h2>Search for IP</h2>\n                    <input id=\"ipAddress\" className={style.ipAddressBar} type='text' value={this.state.ipAddress} onChange={this.ipAddress_change} />\n                    <button className={style.next} type='button' onClick={ this.continueRegistration }>Next</button>\n                    <h3>{ this.renderIP(false) } {console.log(this.state.matchingTrademarks) }</h3>\n                </form>\n            </Layout>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}