{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/pages/intellectualproperty/register.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport style from '../../styles/Index.module.css';\nimport FormRegisterLogin from '../../components/FormRegisterLogin';\nimport FormRegisterGeneral from '../../components/FormRegisterGeneral';\nimport FormRegisterTrademark from '../../components/FormRegisterTrademark';\nimport web3 from '../../ethereum/web3';\n\nvar Register = /*#__PURE__*/function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      step: 1,\n      address: '',\n      currentDate: '',\n      typeOfIP: '',\n      fileHash: '',\n      markDesc: '',\n      patentTitle: '',\n      addressLine1_patent: '',\n      addressLine2_patent: '',\n      addressLineCity_patent: '',\n      addressLineCounty_patent: '',\n      addressLineCountry_patent: '',\n      addressLinePostcode_patent: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"nextStep\", function (steps) {\n      var step = _this.state.step;\n\n      _this.setState({\n        step: step + steps\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"previousStep\", function (steps) {\n      var step = _this.state.step;\n\n      _this.setState({\n        step: step - steps\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formChange\", function (input, value) {\n      _this.setState(_defineProperty({}, input, value));\n    });\n\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var address, currentTimestamp, currentDate;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                address = _context.sent;\n                currentTimestamp = new Date();\n                currentDate = ('0' + currentTimestamp.getDate()).slice(-2) + \"-\" + ('0' + (currentTimestamp.getMonth() + 1)).slice(-2) + \"-\" + currentTimestamp.getFullYear();\n                this.setState({\n                  address: address\n                });\n                this.setState({\n                  currentDate: currentDate\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var step = this.state.step;\n      var _this$state = this.state,\n          address = _this$state.address,\n          currentDate = _this$state.currentDate,\n          typeOfIP = _this$state.typeOfIP,\n          markDesc = _this$state.markDesc,\n          fileHash = _this$state.fileHash,\n          patentTitle = _this$state.patentTitle,\n          addressLine1_patent = _this$state.addressLine1_patent,\n          addressLine2_patent = _this$state.addressLine2_patent,\n          addressLineCity_patent = _this$state.addressLineCity_patent,\n          addressLineCounty_patent = _this$state.addressLineCounty_patent,\n          addressLineCountry_patent = _this$state.addressLineCountry_patent,\n          addressLinePostcode_patent = _this$state.addressLinePostcode_patent;\n      var values = {\n        address: address,\n        currentDate: currentDate,\n        typeOfIP: typeOfIP,\n        markDesc: markDesc,\n        fileHash: fileHash,\n        patentTitle: patentTitle,\n        addressLine1_patent: addressLine1_patent,\n        addressLine2_patent: addressLine2_patent,\n        addressLineCity_patent: addressLineCity_patent,\n        addressLineCounty_patent: addressLineCounty_patent,\n        addressLineCountry_patent: addressLineCountry_patent,\n        addressLinePostcode_patent: addressLinePostcode_patent\n      };\n\n      switch (step) {\n        case 1:\n          return /*#__PURE__*/_jsxDEV(FormRegisterLogin, {\n            nextStep: this.nextStep,\n            previousStep: this.previousStep,\n            changeForm: this.formChange,\n            values: values\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this);\n\n        case 2:\n          return /*#__PURE__*/_jsxDEV(FormRegisterGeneral, {\n            nextStep: this.nextStep,\n            previousStep: this.previousStep,\n            changeForm: this.formChange,\n            values: values\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this);\n\n        case 3:\n          return /*#__PURE__*/_jsxDEV(FormRegisterTrademark, {\n            nextStep: this.nextStep,\n            previousStep: this.previousStep,\n            changeForm: this.formChange,\n            values: values\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, this);\n\n        case 4:\n          return /*#__PURE__*/_jsxDEV(FormRegisterTrademarkConfirm, {\n            nextStep: this.nextStep,\n            previousStep: this.previousStep,\n            changeForm: this.formChange,\n            values: values\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this);\n\n        case 5:\n          return /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Patent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this);\n\n        case 6:\n          return /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Design\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default Register;","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/pages/intellectualproperty/register.js"],"names":["React","Component","Layout","style","FormRegisterLogin","FormRegisterGeneral","FormRegisterTrademark","web3","Register","step","address","currentDate","typeOfIP","fileHash","markDesc","patentTitle","addressLine1_patent","addressLine2_patent","addressLineCity_patent","addressLineCounty_patent","addressLineCountry_patent","addressLinePostcode_patent","steps","state","setState","input","value","eth","getAccounts","currentTimestamp","Date","getDate","slice","getMonth","getFullYear","values","nextStep","previousStep","formChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport style from '../../styles/Index.module.css';\nimport FormRegisterLogin from '../../components/FormRegisterLogin';\nimport FormRegisterGeneral from '../../components/FormRegisterGeneral';\nimport FormRegisterTrademark from '../../components/FormRegisterTrademark';\n\nimport web3 from '../../ethereum/web3';\n\nclass Register extends Component {\n  state = {\n    step: 1,\n    address: '',\n    currentDate: '',\n    typeOfIP: '',\n    fileHash: '',\n    markDesc: '',\n    patentTitle: '',\n    addressLine1_patent: '',\n    addressLine2_patent: '',\n    addressLineCity_patent: '',\n    addressLineCounty_patent: '',\n    addressLineCountry_patent: '',\n    addressLinePostcode_patent: ''\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n    const currentTimestamp = new Date();\n    const currentDate = ('0' + currentTimestamp.getDate()).slice(-2) + \"-\" + ('0' + (currentTimestamp.getMonth() + 1)).slice(-2) + \"-\" + currentTimestamp.getFullYear();\n    this.setState({ address });\n    this.setState({ currentDate });\n  }\n\n  nextStep = (steps) => {\n    const step = this.state.step;\n    this.setState({ step: step + steps });\n  }\n\n  previousStep = (steps) => {\n    const step = this.state.step;\n    this.setState({ step: step - steps });\n  }\n\n  formChange = (input, value) => {\n    this.setState({ [input]: value });\n  }\n\n  render() {\n    const { step } = this.state;\n    const {\n      address, currentDate, typeOfIP, markDesc, fileHash, patentTitle,\n      addressLine1_patent, addressLine2_patent, addressLineCity_patent,\n      addressLineCounty_patent, addressLineCountry_patent, addressLinePostcode_patent\n    } = this.state;\n\n    const values = {\n      address, currentDate, typeOfIP, markDesc, fileHash, patentTitle,\n      addressLine1_patent, addressLine2_patent, addressLineCity_patent,\n      addressLineCounty_patent, addressLineCountry_patent, addressLinePostcode_patent\n    }\n\n    switch(step) {\n      case 1:\n        return (\n          <FormRegisterLogin\n            nextStep = { this.nextStep }\n            previousStep = { this.previousStep }\n            changeForm = { this.formChange }\n            values = { values }\n          />\n        );\n      case 2:\n        return (\n          <FormRegisterGeneral\n            nextStep = { this.nextStep }\n            previousStep = { this.previousStep }\n            changeForm = { this.formChange }\n            values = { values }\n          />\n        );\n      case 3:\n        return (\n          <FormRegisterTrademark\n            nextStep = { this.nextStep }\n            previousStep = { this.previousStep }\n            changeForm = { this.formChange }\n            values = { values }\n          />\n        );\n      case 4:\n        return (\n          <FormRegisterTrademarkConfirm\n            nextStep = { this.nextStep }\n            previousStep = {this.previousStep}\n            changeForm = { this.formChange }\n            values = { values }\n          />\n        );\n      case 5:\n        return (\n          <h2>Patent</h2>\n        );\n      case 6:\n        return (\n          <h2>Design</h2>\n        );\n    }\n\n    return (\n      <Layout>\n\n      </Layout>\n    );\n  }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}