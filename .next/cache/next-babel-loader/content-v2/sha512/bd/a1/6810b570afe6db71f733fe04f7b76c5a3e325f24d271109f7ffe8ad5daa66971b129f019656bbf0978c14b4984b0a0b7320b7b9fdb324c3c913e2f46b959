{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/deepaksng00/Documents/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterTrademarkConfirm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterTrademarkConfirm.module.css';\nimport { Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport RingLoader from \"react-spinners/RingLoader\";\n\nvar contract = require(\"../ethereum/intellectualproperty\");\n\nvar FormRegisterTrademarkConfirm = /*#__PURE__*/function (_Component) {\n  _inherits(FormRegisterTrademarkConfirm, _Component);\n\n  var _super = _createSuper(FormRegisterTrademarkConfirm);\n\n  function FormRegisterTrademarkConfirm() {\n    var _this;\n\n    _classCallCheck(this, FormRegisterTrademarkConfirm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"continueRegistration\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var values, tokenMetadata, currentTimestamp, expirationDate, address, ipfsHash, numOfTokens, tokenOfUser, tokenURI, JSONURI;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                values = _this.props.values;\n                tokenMetadata = ''; // const instance = await IPRegister.deployed();\n\n                currentTimestamp = new Date().getTime() / 1000;\n                expirationDate = new Date();\n                expirationDate.setFullYear(expirationDate.getFullYear() + 5);\n                expirationDate = expirationDate.getTime() / 1000; // creating metadata for NFT\n\n                tokenMetadata += \"{ \";\n                tokenMetadata += '\"PubDate\"' + ':\"' + currentTimestamp.toString() + '\", ';\n                tokenMetadata += '\"ExpirationDate\"' + ':\"' + expirationDate.toString() + '\", ';\n                tokenMetadata += '\"IpfsHash\"' + ':\"' + values.fileHash + '\", ';\n                tokenMetadata += '\"TypeOfIP\"' + ':\"' + values.typeOfIP + '\", ';\n                tokenMetadata += '\"MarkDesc\"' + ':\"' + values.markDesc + '\"';\n                tokenMetadata += \" }\";\n                address = values.address[0];\n                ipfsHash = values.fileHash;\n                console.log(tokenMetadata);\n                _context.prev = 17;\n                _context.next = 20;\n                return contract[\"default\"].methods.awardIP(address, ipfsHash, tokenMetadata).send({\n                  from: address,\n                  gasLimit: \"5000000\"\n                })[\"catch\"](console.log(\"error\"));\n\n              case 20:\n                _context.next = 22;\n                return contract[\"default\"].methods.totalSupply().call();\n\n              case 22:\n                numOfTokens = _context.sent;\n                _context.next = 25;\n                return contract[\"default\"].methods.tokenOfOwnerByIndex(address, 0).call();\n\n              case 25:\n                tokenOfUser = _context.sent;\n                _context.next = 28;\n                return contract[\"default\"].methods.tokenURI(tokenOfUser).call();\n\n              case 28:\n                tokenURI = _context.sent;\n                JSONURI = JSON.parse(tokenURI);\n                console.log(JSONURI.IpfsHash);\n                _context.next = 36;\n                break;\n\n              case 33:\n                _context.prev = 33;\n                _context.t0 = _context[\"catch\"](17);\n                console.log(_context.t0);\n\n              case 36:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[17, 33]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"backRegistration\", function (e) {\n      e.preventDefault();\n\n      _this.props.previousStep(1);\n    });\n\n    return _this;\n  }\n\n  _createClass(FormRegisterTrademarkConfirm, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var address;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                address = _context2.sent;\n\n                if (address == \"\") {\n                  alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n                  Router.pushRoute('/');\n                }\n\n                this.setState({\n                  loading: false\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var values = this.props.values;\n      var nextStep = this.props.nextStep;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          \"class\": \"loadingContainer\",\n          children: /*#__PURE__*/_jsxDEV(RingLoader, {\n            color: \"#ffffff\",\n            loading: this.state.loading,\n            size: 60\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(Layout, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: style.form,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Confirm your details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.addressLabel,\n              children: \"Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: style.address,\n              type: \"text\",\n              value: values.address,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.dateLabel,\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: style.date,\n              type: \"text\",\n              value: values.currentDate,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.typeOfIPLabel,\n              children: \"Type of IP:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: style.typeOfIP,\n              type: \"text\",\n              value: values.typeOfIP,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.markDescLabel,\n              children: \"Mark description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: style.markDesc,\n              type: \"text\",\n              value: values.markDesc,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.markHashLabel,\n              children: \"Mark hash:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: style.markHash,\n              type: \"text\",\n              value: values.fileHash,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: style.back,\n              type: \"button\",\n              onClick: this.backRegistration,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: style.next,\n              type: \"button\",\n              onClick: this.continueRegistration,\n              children: \"Register Trademark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return FormRegisterTrademarkConfirm;\n}(Component);\n\nexport default FormRegisterTrademarkConfirm;","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterTrademarkConfirm.js"],"names":["React","Component","Layout","style","Router","web3","RingLoader","contract","require","FormRegisterTrademarkConfirm","loading","event","preventDefault","values","props","tokenMetadata","currentTimestamp","Date","getTime","expirationDate","setFullYear","getFullYear","toString","fileHash","typeOfIP","markDesc","address","ipfsHash","console","log","methods","awardIP","send","from","gasLimit","totalSupply","call","numOfTokens","tokenOfOwnerByIndex","tokenOfUser","tokenURI","JSONURI","JSON","parse","IpfsHash","e","previousStep","setState","eth","getAccounts","alert","pushRoute","nextStep","state","form","addressLabel","dateLabel","date","currentDate","typeOfIPLabel","markDescLabel","markHashLabel","markHash","back","backRegistration","next","continueRegistration"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,mDAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AACA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,kCAAD,CAAxB;;IAGMC,4B;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,OAAO,EAAE;AADH,K;;;0EAIe,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBA,gBAAAA,KAAK,CAACC,cAAN;AAEQC,gBAAAA,MAHa,GAGF,MAAKC,KAHH,CAGbD,MAHa;AAIjBE,gBAAAA,aAJiB,GAID,EAJC,EAKrB;;AAEMC,gBAAAA,gBAPe,GAOI,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAP3B;AAQjBC,gBAAAA,cARiB,GAQA,IAAIF,IAAJ,EARA;AASrBE,gBAAAA,cAAc,CAACC,WAAf,CAA2BD,cAAc,CAACE,WAAf,KAA+B,CAA1D;AACAF,gBAAAA,cAAc,GAAGA,cAAc,CAACD,OAAf,KAA2B,IAA5C,CAVqB,CAYrB;;AACAH,gBAAAA,aAAa,IAAI,IAAjB;AACAA,gBAAAA,aAAa,IAAK,cAAY,IAAZ,GAAiBC,gBAAgB,CAACM,QAAjB,EAAjB,GAA6C,KAA/D;AACAP,gBAAAA,aAAa,IAAK,qBAAmB,IAAnB,GAAwBI,cAAc,CAACG,QAAf,EAAxB,GAAkD,KAApE;AACAP,gBAAAA,aAAa,IAAK,eAAa,IAAb,GAAkBF,MAAM,CAACU,QAAzB,GAAkC,KAApD;AACAR,gBAAAA,aAAa,IAAK,eAAa,IAAb,GAAkBF,MAAM,CAACW,QAAzB,GAAkC,KAApD;AACAT,gBAAAA,aAAa,IAAK,eAAa,IAAb,GAAkBF,MAAM,CAACY,QAAzB,GAAkC,GAApD;AACAV,gBAAAA,aAAa,IAAI,IAAjB;AAEMW,gBAAAA,OArBe,GAqBLb,MAAM,CAACa,OAAP,CAAe,CAAf,CArBK;AAsBfC,gBAAAA,QAtBe,GAsBJd,MAAM,CAACU,QAtBH;AAwBrBK,gBAAAA,OAAO,CAACC,GAAR,CAAYd,aAAZ;AAxBqB;AAAA;AAAA,uBA2BbR,QAAQ,WAAR,CAAiBuB,OAAjB,CAAyBC,OAAzB,CAAiCL,OAAjC,EAA0CC,QAA1C,EAAoDZ,aAApD,EAAmEiB,IAAnE,CAAwE;AAAEC,kBAAAA,IAAI,EAAEP,OAAR;AAAiBQ,kBAAAA,QAAQ,EAAE;AAA3B,iBAAxE,WAC0EN,OAAO,CAACC,GAAR,CAAY,OAAZ,CAD1E,CA3Ba;;AAAA;AAAA;AAAA,uBA6BOtB,QAAQ,WAAR,CAAiBuB,OAAjB,CAAyBK,WAAzB,GAAuCC,IAAvC,EA7BP;;AAAA;AA6BbC,gBAAAA,WA7Ba;AAAA;AAAA,uBA8BO9B,QAAQ,WAAR,CAAiBuB,OAAjB,CAAyBQ,mBAAzB,CAA6CZ,OAA7C,EAAsD,CAAtD,EAAyDU,IAAzD,EA9BP;;AAAA;AA8BbG,gBAAAA,WA9Ba;AAAA;AAAA,uBA+BIhC,QAAQ,WAAR,CAAiBuB,OAAjB,CAAyBU,QAAzB,CAAkCD,WAAlC,EAA+CH,IAA/C,EA/BJ;;AAAA;AA+BbI,gBAAAA,QA/Ba;AAiCbC,gBAAAA,OAjCa,GAiCHC,IAAI,CAACC,KAAL,CAAWH,QAAX,CAjCG;AAmCnBZ,gBAAAA,OAAO,CAACC,GAAR,CAAYY,OAAO,CAACG,QAApB;AAnCmB;AAAA;;AAAA;AAAA;AAAA;AAsCnBhB,gBAAAA,OAAO,CAACC,GAAR;;AAtCmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;uEA0CJ,UAAAgB,CAAC,EAAI;AACtBA,MAAAA,CAAC,CAACjC,cAAF;;AACA,YAAKE,KAAL,CAAWgC,YAAX,CAAwB,CAAxB;AACD,K;;;;;;;;;;;;;;AAGC,qBAAKC,QAAL,CAAc;AAAErC,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;uBACsBL,IAAI,CAAC2C,GAAL,CAASC,WAAT,E;;;AAAhBvB,gBAAAA,O;;AACN,oBAAIA,OAAO,IAAI,EAAf,EAAmB;AACjBwB,kBAAAA,KAAK,CAAC,sEAAD,CAAL;AACA9C,kBAAAA,MAAM,CAAC+C,SAAP,CAAiB,GAAjB;AACD;;AACD,qBAAKJ,QAAL,CAAc;AAAErC,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;;;;;;;;;;;;;;;;;6BAGO;AAAA,UACCG,MADD,GACY,KAAKC,KADjB,CACCD,MADD;AAAA,UAECuC,QAFD,GAEc,KAAKtC,KAFnB,CAECsC,QAFD;AAIP,0BACE;AAAA,kBAEI,KAAKC,KAAL,CAAW3C,OAAX,gBAEA;AAAK,mBAAM,kBAAX;AAAA,iCAA8B,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE,SAAnB;AAA8B,YAAA,OAAO,EAAE,KAAK2C,KAAL,CAAW3C,OAAlD;AAA2D,YAAA,IAAI,EAAE;AAAjE;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFA,gBAMA,QAAC,MAAD;AAAA,iCACE;AAAM,YAAA,SAAS,EAAEP,KAAK,CAACmD,IAAvB;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAG,cAAA,SAAS,EAAEnD,KAAK,CAACoD,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAO,cAAA,SAAS,EAAEpD,KAAK,CAACuB,OAAxB;AAAiC,cAAA,IAAI,EAAC,MAAtC;AAA6C,cAAA,KAAK,EAAEb,MAAM,CAACa,OAA3D;AAAoE,cAAA,QAAQ;AAA5E;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAG,cAAA,SAAS,EAAEvB,KAAK,CAACqD,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAO,cAAA,SAAS,EAAErD,KAAK,CAACsD,IAAxB;AAA8B,cAAA,IAAI,EAAC,MAAnC;AAA0C,cAAA,KAAK,EAAE5C,MAAM,CAAC6C,WAAxD;AAAqE,cAAA,QAAQ;AAA7E;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAG,cAAA,SAAS,EAAEvD,KAAK,CAACwD,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAO,cAAA,SAAS,EAAExD,KAAK,CAACqB,QAAxB;AAAkC,cAAA,IAAI,EAAC,MAAvC;AAA8C,cAAA,KAAK,EAAEX,MAAM,CAACW,QAA5D;AAAsE,cAAA,QAAQ;AAA9E;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE;AAAG,cAAA,SAAS,EAAErB,KAAK,CAACyD,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,eASE;AAAO,cAAA,SAAS,EAAEzD,KAAK,CAACsB,QAAxB;AAAkC,cAAA,IAAI,EAAC,MAAvC;AAA8C,cAAA,KAAK,EAAEZ,MAAM,CAACY,QAA5D;AAAsE,cAAA,QAAQ;AAA9E;AAAA;AAAA;AAAA;AAAA,oBATF,eAUE;AAAG,cAAA,SAAS,EAAEtB,KAAK,CAAC0D,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,eAWE;AAAO,cAAA,SAAS,EAAE1D,KAAK,CAAC2D,QAAxB;AAAkC,cAAA,IAAI,EAAC,MAAvC;AAA8C,cAAA,KAAK,EAAEjD,MAAM,CAACU,QAA5D;AAAsE,cAAA,QAAQ;AAA9E;AAAA;AAAA;AAAA;AAAA,oBAXF,eAYE;AAAQ,cAAA,SAAS,EAAEpB,KAAK,CAAC4D,IAAzB;AAA+B,cAAA,IAAI,EAAC,QAApC;AAA6C,cAAA,OAAO,EAAG,KAAKC,gBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,eAaE;AAAQ,cAAA,SAAS,EAAE7D,KAAK,CAAC8D,IAAzB;AAA+B,cAAA,IAAI,EAAC,QAApC;AAA6C,cAAA,OAAO,EAAG,KAAKC,oBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,cADF;AA6BD;;;;EA/FwCjE,S;;AAkG3C,eAAeQ,4BAAf","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterTrademarkConfirm.module.css';\nimport { Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport RingLoader from \"react-spinners/RingLoader\";\nconst contract = require(\"../ethereum/intellectualproperty\");\n\n\nclass FormRegisterTrademarkConfirm extends Component {\n  state = {\n    loading: false\n  }\n\n  continueRegistration = async (event) => {\n    event.preventDefault();\n\n    const { values } = this.props;\n    var tokenMetadata = '';\n    // const instance = await IPRegister.deployed();\n\n    const currentTimestamp = new Date().getTime() / 1000;\n    var expirationDate = new Date();\n    expirationDate.setFullYear(expirationDate.getFullYear() + 5);\n    expirationDate = expirationDate.getTime() / 1000;\n\n    // creating metadata for NFT\n    tokenMetadata += \"{ \";\n    tokenMetadata += ('\"PubDate\"'+':\"'+currentTimestamp.toString()+'\", ');\n    tokenMetadata += ('\"ExpirationDate\"'+':\"'+expirationDate.toString()+'\", ');\n    tokenMetadata += ('\"IpfsHash\"'+':\"'+values.fileHash+'\", ');\n    tokenMetadata += ('\"TypeOfIP\"'+':\"'+values.typeOfIP+'\", ');\n    tokenMetadata += ('\"MarkDesc\"'+':\"'+values.markDesc+'\"');\n    tokenMetadata += \" }\";\n\n    const address = values.address[0];\n    const ipfsHash = values.fileHash;\n\n    console.log(tokenMetadata);\n\n    try {\n      await contract.default.methods.awardIP(address, ipfsHash, tokenMetadata).send({ from: address, gasLimit: \"5000000\" })\n                                                                              .catch( console.log(\"error\") );\n      const numOfTokens = await contract.default.methods.totalSupply().call();\n      const tokenOfUser = await contract.default.methods.tokenOfOwnerByIndex(address, 0).call();\n      const tokenURI = await contract.default.methods.tokenURI(tokenOfUser).call();\n    \n      const JSONURI = JSON.parse(tokenURI);\n\n      console.log(JSONURI.IpfsHash);\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  backRegistration = e => {\n    e.preventDefault();\n    this.props.previousStep(1);\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    const address = await web3.eth.getAccounts();\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n    this.setState({ loading: false });\n  }\n\n  render() {\n    const { values } = this.props;\n    const { nextStep } = this.props;\n\n    return (\n      <div>\n        {\n          this.state.loading ?\n\n          <div class=\"loadingContainer\"><RingLoader color={\"#ffffff\"} loading={this.state.loading} size={60} /></div>\n\n          :\n\n          <Layout>\n            <form className={style.form}>\n              <h2>Confirm your details</h2>\n              <p className={style.addressLabel}>Address:</p>\n              <input className={style.address} type='text' value={values.address} readOnly />\n              <p className={style.dateLabel}>Date:</p>\n              <input className={style.date} type='text' value={values.currentDate} readOnly />\n              <p className={style.typeOfIPLabel}>Type of IP:</p>\n              <input className={style.typeOfIP} type='text' value={values.typeOfIP} readOnly />\n              <p className={style.markDescLabel}>Mark description:</p>\n              <input className={style.markDesc} type='text' value={values.markDesc} readOnly />\n              <p className={style.markHashLabel}>Mark hash:</p>\n              <input className={style.markHash} type='text' value={values.fileHash} readOnly />\n              <button className={style.back} type='button' onClick={ this.backRegistration }>Back</button>\n              <button className={style.next} type='button' onClick={ this.continueRegistration }>Register Trademark</button>\n            </form>\n          </Layout>\n        }\n      </div>\n    );\n  }\n}\n\nexport default FormRegisterTrademarkConfirm;\n"]},"metadata":{},"sourceType":"module"}