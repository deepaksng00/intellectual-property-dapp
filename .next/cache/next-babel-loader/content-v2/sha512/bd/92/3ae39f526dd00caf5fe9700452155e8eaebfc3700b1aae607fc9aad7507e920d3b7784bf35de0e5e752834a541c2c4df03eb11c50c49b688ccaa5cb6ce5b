{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterDesignConfirm.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterDesignConfirm.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\n\nclass FormRegisterDesignConfirm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"continueRegistration\", async event => {\n      const {\n        values\n      } = this.props;\n      event.preventDefault();\n\n      const compiled_design = require(\"../ethereum/build/Design.json\");\n\n      alert(\"Creating IP\");\n      web3.eth.handleRevert = true;\n\n      try {\n        await factory.methods.createDesign(values.comment, values.fileHash).send({\n          from: values.address[0],\n          gasLimit: \"5000000\"\n        }).catch(() => {\n          throw 'HashAlreadyUsed';\n        });\n        const designs = await factory.methods.getDesigns(values.address[0]).call();\n        const numOfDesigns = designs.length;\n        const address = designs[numOfDesigns - 1];\n        const design = await new web3.eth.Contract(compiled_design.abi, address);\n        const filingDate_UNIX = await design.methods.getFilingDate().call();\n        const design_date_obj = new Date(filingDate_UNIX * 1000);\n        const filingDate = design_date_obj.getFullYear().toString() + \"-\" + (design_date_obj.getMonth() + 1).toString() + \"-\" + design_date_obj.getDate().toString();\n        const owner = await design.methods.getOwner().call();\n        const status = await design.methods.getStatus().call(); // const publicationDate_UNIX = await design.methods.getPublicationDate().call();\n        // const publicationDate_obj = new Date(publicationDate_UNIX * 1000);\n        // const publicationDate = publicationDate_obj.getFullYear().toString() + \"-\" + (publicationDate_obj.getMonth()+1).toString() + \"-\" + publicationDate_obj.getDate().toString();\n\n        const status_date_UNIX = await design.methods.getStatusDate().call();\n        const status_date_object = new Date(status_date_UNIX * 1000);\n        const status_date = status_date_object.getFullYear().toString() + \"-\" + (status_date_object.getMonth() + 1).toString() + \"-\" + status_date_object.getDate().toString();\n        const renewal_date_UNIX = await design.methods.getExpirationDate().call();\n        const renewal_date_obj = new Date(renewal_date_UNIX * 1000);\n        const renewal_date = renewal_date_obj.getFullYear().toString() + \"-\" + (renewal_date_obj.getMonth() + 1).toString() + \"-\" + renewal_date_obj.getDate().toString();\n        const comment = await design.methods.getComment().call();\n        const hash = await design.methods.getHash().call();\n        console.log(\"Address: \" + address);\n        console.log(\"Owner: \" + owner);\n        console.log(\"Status: \" + status);\n        console.log(\"Status last changed: \" + status_date);\n        console.log(\"Filing date: \" + filingDate); // console.log(\"Publication date: \" + publicationDate);\n\n        console.log(\"Renewal date: \" + renewal_date);\n        console.log(\"Comment: \" + comment);\n        console.log(\"Hash: \" + hash);\n        this.props.changeForm('ip_addr', address);\n        this.props.changeForm('address', owner);\n        this.props.nextStep(1);\n      } catch (err) {\n        alert(\"ERROR: The hash has already been registered!\");\n        this.props.previousStep(2);\n      }\n    });\n\n    _defineProperty(this, \"backRegistration\", e => {\n      e.preventDefault();\n      this.props.previousStep(1);\n    });\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n  }\n\n  render() {\n    const {\n      values\n    } = this.props;\n    const {\n      nextStep\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: style.form,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Confirm your details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.addressLabel,\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.address,\n          type: \"text\",\n          value: values.address,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.dateLabel,\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.date,\n          type: \"text\",\n          value: values.currentDate,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.typeOfIPLabel,\n          children: \"Type of IP:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.typeOfIP,\n          type: \"text\",\n          value: values.typeOfIP,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.commentLabel,\n          children: \"Comment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.comment,\n          type: \"text\",\n          value: values.comment,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.designHashLabel,\n          children: \"Design hash:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.designHash,\n          type: \"text\",\n          value: values.fileHash,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.back,\n          type: \"button\",\n          onClick: this.backRegistration,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.next,\n          type: \"button\",\n          onClick: this.continueRegistration,\n          children: \"Register Design\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FormRegisterDesignConfirm;","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterDesignConfirm.js"],"names":["React","Component","Layout","style","Link","Router","web3","factory","FormRegisterDesignConfirm","event","values","props","preventDefault","compiled_design","require","alert","eth","handleRevert","methods","createDesign","comment","fileHash","send","from","address","gasLimit","catch","designs","getDesigns","call","numOfDesigns","length","design","Contract","abi","filingDate_UNIX","getFilingDate","design_date_obj","Date","filingDate","getFullYear","toString","getMonth","getDate","owner","getOwner","status","getStatus","status_date_UNIX","getStatusDate","status_date_object","status_date","renewal_date_UNIX","getExpirationDate","renewal_date_obj","renewal_date","getComment","hash","getHash","console","log","changeForm","nextStep","err","previousStep","e","componentDidMount","getAccounts","pushRoute","render","form","addressLabel","dateLabel","date","currentDate","typeOfIPLabel","typeOfIP","commentLabel","designHashLabel","designHash","back","backRegistration","next","continueRegistration"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,gDAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,WAA7B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,yBAAN,SAAwCP,SAAxC,CAAkD;AAAA;AAAA;;AAAA,kDACxB,MAAOQ,KAAP,IAAiB;AACvC,YAAM;AAAEC,QAAAA;AAAF,UAAa,KAAKC,KAAxB;AACAF,MAAAA,KAAK,CAACG,cAAN;;AACA,YAAMC,eAAe,GAAGC,OAAO,CAAC,+BAAD,CAA/B;;AACAC,MAAAA,KAAK,CAAC,aAAD,CAAL;AAEAT,MAAAA,IAAI,CAACU,GAAL,CAASC,YAAT,GAAwB,IAAxB;;AAEA,UAAI;AACF,cAAMV,OAAO,CAACW,OAAR,CAAgBC,YAAhB,CAA6BT,MAAM,CAACU,OAApC,EAA6CV,MAAM,CAACW,QAApD,EAA8DC,IAA9D,CAAmE;AACvEC,UAAAA,IAAI,EAAEb,MAAM,CAACc,OAAP,CAAe,CAAf,CADiE;AAEvEC,UAAAA,QAAQ,EAAE;AAF6D,SAAnE,EAILC,KAJK,CAIC,MAAM;AAAE,gBAAM,iBAAN;AAAyB,SAJlC,CAAN;AAMA,cAAMC,OAAO,GAAG,MAAMpB,OAAO,CAACW,OAAR,CAAgBU,UAAhB,CAA2BlB,MAAM,CAACc,OAAP,CAAe,CAAf,CAA3B,EAA8CK,IAA9C,EAAtB;AACA,cAAMC,YAAY,GAAGH,OAAO,CAACI,MAA7B;AACA,cAAMP,OAAO,GAAGG,OAAO,CAACG,YAAY,GAAC,CAAd,CAAvB;AACA,cAAME,MAAM,GAAG,MAAM,IAAI1B,IAAI,CAACU,GAAL,CAASiB,QAAb,CAAsBpB,eAAe,CAACqB,GAAtC,EAA2CV,OAA3C,CAArB;AAEA,cAAMW,eAAe,GAAG,MAAMH,MAAM,CAACd,OAAP,CAAekB,aAAf,GAA+BP,IAA/B,EAA9B;AACA,cAAMQ,eAAe,GAAG,IAAIC,IAAJ,CAASH,eAAe,GAAG,IAA3B,CAAxB;AACA,cAAMI,UAAU,GAAGF,eAAe,CAACG,WAAhB,GAA8BC,QAA9B,KAA2C,GAA3C,GAAiD,CAACJ,eAAe,CAACK,QAAhB,KAA2B,CAA5B,EAA+BD,QAA/B,EAAjD,GAA6F,GAA7F,GAAmGJ,eAAe,CAACM,OAAhB,GAA0BF,QAA1B,EAAtH;AACA,cAAMG,KAAK,GAAG,MAAMZ,MAAM,CAACd,OAAP,CAAe2B,QAAf,GAA0BhB,IAA1B,EAApB;AACA,cAAMiB,MAAM,GAAG,MAAMd,MAAM,CAACd,OAAP,CAAe6B,SAAf,GAA2BlB,IAA3B,EAArB,CAhBE,CAiBF;AACA;AACA;;AACA,cAAMmB,gBAAgB,GAAG,MAAMhB,MAAM,CAACd,OAAP,CAAe+B,aAAf,GAA+BpB,IAA/B,EAA/B;AACA,cAAMqB,kBAAkB,GAAG,IAAIZ,IAAJ,CAASU,gBAAgB,GAAG,IAA5B,CAA3B;AACA,cAAMG,WAAW,GAAGD,kBAAkB,CAACV,WAAnB,GAAiCC,QAAjC,KAA8C,GAA9C,GAAoD,CAACS,kBAAkB,CAACR,QAAnB,KAA8B,CAA/B,EAAkCD,QAAlC,EAApD,GAAmG,GAAnG,GAAyGS,kBAAkB,CAACP,OAAnB,GAA6BF,QAA7B,EAA7H;AACA,cAAMW,iBAAiB,GAAG,MAAMpB,MAAM,CAACd,OAAP,CAAemC,iBAAf,GAAmCxB,IAAnC,EAAhC;AACA,cAAMyB,gBAAgB,GAAG,IAAIhB,IAAJ,CAASc,iBAAiB,GAAG,IAA7B,CAAzB;AACA,cAAMG,YAAY,GAAGD,gBAAgB,CAACd,WAAjB,GAA+BC,QAA/B,KAA4C,GAA5C,GAAkD,CAACa,gBAAgB,CAACZ,QAAjB,KAA4B,CAA7B,EAAgCD,QAAhC,EAAlD,GAA+F,GAA/F,GAAqGa,gBAAgB,CAACX,OAAjB,GAA2BF,QAA3B,EAA1H;AACA,cAAMrB,OAAO,GAAG,MAAMY,MAAM,CAACd,OAAP,CAAesC,UAAf,GAA4B3B,IAA5B,EAAtB;AACA,cAAM4B,IAAI,GAAG,MAAMzB,MAAM,CAACd,OAAP,CAAewC,OAAf,GAAyB7B,IAAzB,EAAnB;AAEA8B,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAcpC,OAA1B;AACAmC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAYhB,KAAxB;AACAe,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAad,MAAzB;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BT,WAAtC;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBrB,UAA9B,EAjCE,CAkCF;;AACAoB,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBL,YAA/B;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAcxC,OAA1B;AACAuC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAWH,IAAvB;AAEA,aAAK9C,KAAL,CAAWkD,UAAX,CAAsB,SAAtB,EAAiCrC,OAAjC;AACA,aAAKb,KAAL,CAAWkD,UAAX,CAAsB,SAAtB,EAAiCjB,KAAjC;AAEA,aAAKjC,KAAL,CAAWmD,QAAX,CAAoB,CAApB;AACD,OA3CD,CA2CE,OAAOC,GAAP,EAAY;AACZhD,QAAAA,KAAK,CAAC,8CAAD,CAAL;AACA,aAAKJ,KAAL,CAAWqD,YAAX,CAAwB,CAAxB;AACD;AACF,KAxD+C;;AAAA,8CA0D7BC,CAAC,IAAI;AACtBA,MAAAA,CAAC,CAACrD,cAAF;AACA,WAAKD,KAAL,CAAWqD,YAAX,CAAwB,CAAxB;AACD,KA7D+C;AAAA;;AA+DhD,QAAME,iBAAN,GAA0B;AACxB,UAAM1C,OAAO,GAAG,MAAMlB,IAAI,CAACU,GAAL,CAASmD,WAAT,EAAtB;;AACA,QAAI3C,OAAO,IAAI,EAAf,EAAmB;AACjBT,MAAAA,KAAK,CAAC,sEAAD,CAAL;AACAV,MAAAA,MAAM,CAAC+D,SAAP,CAAiB,GAAjB;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE3D,MAAAA;AAAF,QAAa,KAAKC,KAAxB;AACA,UAAM;AAAEmD,MAAAA;AAAF,QAAe,KAAKnD,KAA1B;AAEA,wBACE,QAAC,MAAD;AAAA,6BACE;AAAM,QAAA,SAAS,EAAER,KAAK,CAACmE,IAAvB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAEnE,KAAK,CAACoE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,SAAS,EAAEpE,KAAK,CAACqB,OAAxB;AAAiC,UAAA,IAAI,EAAC,MAAtC;AAA6C,UAAA,KAAK,EAAEd,MAAM,CAACc,OAA3D;AAAoE,UAAA,QAAQ;AAA5E;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAG,UAAA,SAAS,EAAErB,KAAK,CAACqE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAO,UAAA,SAAS,EAAErE,KAAK,CAACsE,IAAxB;AAA8B,UAAA,IAAI,EAAC,MAAnC;AAA0C,UAAA,KAAK,EAAE/D,MAAM,CAACgE,WAAxD;AAAqE,UAAA,QAAQ;AAA7E;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAG,UAAA,SAAS,EAAEvE,KAAK,CAACwE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAO,UAAA,SAAS,EAAExE,KAAK,CAACyE,QAAxB;AAAkC,UAAA,IAAI,EAAC,MAAvC;AAA8C,UAAA,KAAK,EAAElE,MAAM,CAACkE,QAA5D;AAAsE,UAAA,QAAQ;AAA9E;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAG,UAAA,SAAS,EAAEzE,KAAK,CAAC0E,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAO,UAAA,SAAS,EAAE1E,KAAK,CAACiB,OAAxB;AAAiC,UAAA,IAAI,EAAC,MAAtC;AAA6C,UAAA,KAAK,EAAEV,MAAM,CAACU,OAA3D;AAAoE,UAAA,QAAQ;AAA5E;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AAAG,UAAA,SAAS,EAAEjB,KAAK,CAAC2E,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE;AAAO,UAAA,SAAS,EAAE3E,KAAK,CAAC4E,UAAxB;AAAoC,UAAA,IAAI,EAAC,MAAzC;AAAgD,UAAA,KAAK,EAAErE,MAAM,CAACW,QAA9D;AAAwE,UAAA,QAAQ;AAAhF;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE;AAAQ,UAAA,SAAS,EAAElB,KAAK,CAAC6E,IAAzB;AAA+B,UAAA,IAAI,EAAC,QAApC;AAA6C,UAAA,OAAO,EAAG,KAAKC,gBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE;AAAQ,UAAA,SAAS,EAAE9E,KAAK,CAAC+E,IAAzB;AAA+B,UAAA,IAAI,EAAC,QAApC;AAA6C,UAAA,OAAO,EAAG,KAAKC,oBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AA9F+C;;AAiGlD,eAAe3E,yBAAf","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterDesignConfirm.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\n\nclass FormRegisterDesignConfirm extends Component {\n   continueRegistration = async (event) => {\n    const { values } = this.props;\n    event.preventDefault();\n    const compiled_design = require(\"../ethereum/build/Design.json\");\n    alert(\"Creating IP\");\n\n    web3.eth.handleRevert = true;\n\n    try {\n      await factory.methods.createDesign(values.comment, values.fileHash).send({\n        from: values.address[0],\n        gasLimit: \"5000000\"\n      })\n      .catch(() => { throw 'HashAlreadyUsed' });\n  \n      const designs = await factory.methods.getDesigns(values.address[0]).call();\n      const numOfDesigns = designs.length;\n      const address = designs[numOfDesigns-1];\n      const design = await new web3.eth.Contract(compiled_design.abi, address);\n   \n      const filingDate_UNIX = await design.methods.getFilingDate().call();\n      const design_date_obj = new Date(filingDate_UNIX * 1000);\n      const filingDate = design_date_obj.getFullYear().toString() + \"-\" + (design_date_obj.getMonth()+1).toString() + \"-\" + design_date_obj.getDate().toString();\n      const owner = await design.methods.getOwner().call();\n      const status = await design.methods.getStatus().call();\n      // const publicationDate_UNIX = await design.methods.getPublicationDate().call();\n      // const publicationDate_obj = new Date(publicationDate_UNIX * 1000);\n      // const publicationDate = publicationDate_obj.getFullYear().toString() + \"-\" + (publicationDate_obj.getMonth()+1).toString() + \"-\" + publicationDate_obj.getDate().toString();\n      const status_date_UNIX = await design.methods.getStatusDate().call();\n      const status_date_object = new Date(status_date_UNIX * 1000);\n      const status_date = status_date_object.getFullYear().toString() + \"-\" + (status_date_object.getMonth()+1).toString() + \"-\" + status_date_object.getDate().toString();\n      const renewal_date_UNIX = await design.methods.getExpirationDate().call();\n      const renewal_date_obj = new Date(renewal_date_UNIX * 1000);\n      const renewal_date = renewal_date_obj.getFullYear().toString() + \"-\" + (renewal_date_obj.getMonth()+1).toString() + \"-\" + renewal_date_obj.getDate().toString();\n      const comment = await design.methods.getComment().call();\n      const hash = await design.methods.getHash().call();\n  \n      console.log(\"Address: \" + address);\n      console.log(\"Owner: \" + owner);\n      console.log(\"Status: \" + status);\n      console.log(\"Status last changed: \" + status_date)\n      console.log(\"Filing date: \" + filingDate);\n      // console.log(\"Publication date: \" + publicationDate);\n      console.log(\"Renewal date: \" + renewal_date);\n      console.log(\"Comment: \" + comment);\n      console.log(\"Hash: \" + hash);\n  \n      this.props.changeForm('ip_addr', address);\n      this.props.changeForm('address', owner);\n  \n      this.props.nextStep(1);\n    } catch (err) {\n      alert(\"ERROR: The hash has already been registered!\");\n      this.props.previousStep(2);\n    }\n  }\n\n  backRegistration = e => {\n    e.preventDefault();\n    this.props.previousStep(1);\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n  }\n\n  render() {\n    const { values } = this.props;\n    const { nextStep } = this.props;\n\n    return (\n      <Layout>\n        <form className={style.form}>\n          <h2>Confirm your details</h2>\n          <p className={style.addressLabel}>Address:</p>\n          <input className={style.address} type='text' value={values.address} readOnly />\n          <p className={style.dateLabel}>Date:</p>\n          <input className={style.date} type='text' value={values.currentDate} readOnly />\n          <p className={style.typeOfIPLabel}>Type of IP:</p>\n          <input className={style.typeOfIP} type='text' value={values.typeOfIP} readOnly />\n          <p className={style.commentLabel}>Comment:</p>\n          <input className={style.comment} type='text' value={values.comment} readOnly />\n          <p className={style.designHashLabel}>Design hash:</p>\n          <input className={style.designHash} type='text' value={values.fileHash} readOnly />\n          <button className={style.back} type='button' onClick={ this.backRegistration }>Back</button>\n          <button className={style.next} type='button' onClick={ this.continueRegistration }>Register Design</button>\n      </form>\n      </Layout>\n    );\n  }\n}\n\nexport default FormRegisterDesignConfirm;\n"]},"metadata":{},"sourceType":"module"}