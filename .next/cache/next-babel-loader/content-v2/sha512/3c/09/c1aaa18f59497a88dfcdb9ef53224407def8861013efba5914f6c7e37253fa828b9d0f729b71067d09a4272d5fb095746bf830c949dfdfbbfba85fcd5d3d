{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/pages/searchip.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\nimport { Link, Router } from '../routes';\nimport style from '../styles/SearchIP.module.css';\nexport default class YourIP extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      trademarks: [],\n      patents: [],\n      designs: [],\n      ipAddress: '',\n      found: 'False'\n    });\n\n    _defineProperty(this, \"ipAddress_change\", event => {\n      const ipAddress = document.getElementById('ipAddress').value;\n      this.setState({\n        ipAddress\n      });\n\n      if (this.searchIP()) {\n        this.setState({\n          found: 'True'\n        });\n      } else {\n        this.setState({\n          found: 'False'\n        });\n      }\n    });\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    } else {\n      const users = await factory.methods.getUsers().call();\n      let trademarks = [];\n      let patents = [];\n      let designs = [];\n\n      for (var i = 0; i < users.length; i++) {\n        trademarks.push(await factory.methods.getTrademarks(users[i]).call());\n        patents.push(await factory.methods.getPatents(users[i]).call());\n        designs.push(await factory.methods.getDesigns(users[i]).call());\n      }\n\n      this.setState({\n        trademarks\n      });\n      this.setState({\n        patents\n      });\n      this.setState({\n        designs\n      });\n    }\n  }\n\n  searchIP(addressToFind) {\n    for (var i = 0; i < this.state.trademarks.length; i++) {\n      if (this.state.trademarks[i] == addressToFind) {\n        return true;\n      }\n    }\n\n    for (var i = 0; i < this.state.patents.length; i++) {\n      if (this.state.patents[i] == addressToFind) {\n        return true;\n      }\n    }\n\n    for (var i = 0; i < this.state.designs.length; i++) {\n      if (this.state.designs[i] == addressToFind) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  renderIP() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: style.form,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search for IP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"ipAddress\",\n          className: style.ipAddressBar,\n          type: \"text\",\n          value: this.state.ipAddress,\n          onChange: this.ipAddress_change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.next,\n          type: \"button\",\n          onClick: this.continueRegistration,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/pages/searchip.js"],"names":["React","Component","Layout","web3","factory","IntellectualPropertyItem","Link","Router","style","YourIP","trademarks","patents","designs","ipAddress","found","event","document","getElementById","value","setState","searchIP","componentDidMount","address","eth","getAccounts","alert","pushRoute","users","methods","getUsers","call","i","length","push","getTrademarks","getPatents","getDesigns","addressToFind","state","renderIP","render","form","ipAddressBar","ipAddress_change","next","continueRegistration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\nimport { Link, Router } from '../routes';\nimport style from '../styles/SearchIP.module.css';\n\nexport default class YourIP extends Component {\n    state = {\n        trademarks: [],\n        patents: [],\n        designs: [],\n        ipAddress: '',\n        found: 'False'\n    }\n\n    async componentDidMount() {\n        const address = await web3.eth.getAccounts();\n        if (address == \"\") {\n            alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n            Router.pushRoute('/');\n        } else {\n            const users = await factory.methods.getUsers().call();\n\n            let trademarks = [];\n            let patents = [];\n            let designs = [];\n\n            for (var i = 0; i < users.length; i++) {\n                trademarks.push(await factory.methods.getTrademarks(users[i]).call());\n                patents.push(await factory.methods.getPatents(users[i]).call());\n                designs.push(await factory.methods.getDesigns(users[i]).call());\n            }\n\n            this.setState({ trademarks })\n            this.setState({ patents });\n            this.setState({ designs });\n        }\n    }\n\n    searchIP(addressToFind) {\n        for(var i = 0; i < this.state.trademarks.length; i++) {\n            if(this.state.trademarks[i] == addressToFind) {\n                return true;\n            }\n        }\n        for(var i = 0; i < this.state.patents.length; i++) {\n            if(this.state.patents[i] == addressToFind) {\n                return true;\n            }\n        }\n        for(var i = 0; i < this.state.designs.length; i++) {\n            if(this.state.designs[i] == addressToFind) {\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    renderIP() {\n\n    }\n\n    ipAddress_change = (event) => {\n        const ipAddress = document.getElementById('ipAddress').value;\n        this.setState({ ipAddress });\n        if(this.searchIP()) {\n            this.setState({ found: 'True' });\n        } else {\n            this.setState({ found: 'False' });\n        }\n    }\n\n    render() {\n        return (\n            <Layout>\n                <form className={style.form}>\n                    <h2>Search for IP</h2>\n                    <input id=\"ipAddress\" className={style.ipAddressBar} type='text' value={this.state.ipAddress} onChange={this.ipAddress_change} />\n                    <button className={style.next} type='button' onClick={ this.continueRegistration }>Next</button>\n                </form>\n            </Layout>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}