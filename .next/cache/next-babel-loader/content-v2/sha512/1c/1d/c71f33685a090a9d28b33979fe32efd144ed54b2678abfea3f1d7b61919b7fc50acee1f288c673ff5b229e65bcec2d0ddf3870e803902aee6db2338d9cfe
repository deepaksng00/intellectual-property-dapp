{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/pages/intellectualproperty/PatentShow.js\";\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport web3 from '../../ethereum/web3';\nexport default class PatentShow extends Component {\n  static async getInitialProps(props) {\n    const address = props.query.address;\n\n    const compiled_patent = require(\"../../ethereum/build/Patent.json\");\n\n    const patent = await new web3.eth.Contract(compiled_patent.abi, address);\n    const status = await patent.methods.getStatus().call();\n    const inventorAddress = await patent.methods.getInventorAddress().call();\n    const filingDate = await patent.methods.getFilingDate().call();\n    const publicationDate = await patent.methods.getPublicationDate().call();\n    const statusDate = await patent.methods.getStatusDate().call();\n    const expirationDate = await patent.methods.getExpirationDate().call();\n    const owners = await patent.methods.getOwner().call();\n    const fileHash = await patent.methods.getHash().call();\n    const title = await patent.methods.getTitle().call();\n    return {\n      address: address,\n      status: status,\n      inventorAddress: inventorAddress,\n      filingDate: filingDate,\n      publicationDate: publicationDate,\n      statusDate: statusDate,\n      expirationDate: expirationDate,\n      owners: owners,\n      fileHash: fileHash,\n      title: title\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [this.props.address, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 38\n      }, this), this.props.status, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 37\n      }, this), this.props.inventorAddress, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 46\n      }, this), this.props.filingDate, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 41\n      }, this), this.props.publicationDate, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 46\n      }, this), this.props.statusDate, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 41\n      }, this), this.props.expirationDate, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 45\n      }, this), this.props.owners, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 37\n      }, this), this.props.fileHash, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 39\n      }, this), this.props.title, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/pages/intellectualproperty/PatentShow.js"],"names":["React","Component","Layout","web3","PatentShow","getInitialProps","props","address","query","compiled_patent","require","patent","eth","Contract","abi","status","methods","getStatus","call","inventorAddress","getInventorAddress","filingDate","getFilingDate","publicationDate","getPublicationDate","statusDate","getStatusDate","expirationDate","getExpirationDate","owners","getOwner","fileHash","getHash","title","getTitle","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport web3 from '../../ethereum/web3';\n\nexport default class PatentShow extends Component {\n    static async getInitialProps(props) {\n        const address = props.query.address;\n        const compiled_patent = require(\"../../ethereum/build/Patent.json\");\n        const patent = await new web3.eth.Contract(compiled_patent.abi, address);\n\n        const status = await patent.methods.getStatus().call();\n        const inventorAddress = await patent.methods.getInventorAddress().call();\n        const filingDate = await patent.methods.getFilingDate().call();\n        const publicationDate = await patent.methods.getPublicationDate().call();\n        const statusDate = await patent.methods.getStatusDate().call();\n        const expirationDate = await patent.methods.getExpirationDate().call();\n        const owners = await patent.methods.getOwner().call();\n        const fileHash = await patent.methods.getHash().call();\n        const title = await patent.methods.getTitle().call();\n\n        return {\n            address: address,\n            status: status,\n            inventorAddress: inventorAddress,\n            filingDate: filingDate,\n            publicationDate: publicationDate,\n            statusDate: statusDate,\n            expirationDate: expirationDate,\n            owners: owners,\n            fileHash: fileHash,\n            title: title\n        };\n    }\n    \n    render() {\n        return (\n            <Layout>\n                {this.props.address} <br />\n                {this.props.status} <br />\n                {this.props.inventorAddress} <br />\n                {this.props.filingDate} <br />\n                {this.props.publicationDate} <br />\n                {this.props.statusDate} <br />\n                {this.props.expirationDate} <br />\n                {this.props.owners} <br />\n                {this.props.fileHash} <br />\n                {this.props.title} <br />\n            </Layout>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}