{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/pages/searchip.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\nimport { Link, Router } from '../routes';\nimport style from '../styles/SearchIP.module.css';\nexport default class YourIP extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      matchingTrademarks: [],\n      matchingPatents: [],\n      matchingDesigns: [],\n      ipAddress: '',\n      found: ''\n    });\n\n    _defineProperty(this, \"ipAddress_change\", event => {\n      const ipAddress = document.getElementById('ipAddress').value;\n      this.setState({\n        ipAddress\n      });\n      this.searchIP();\n    });\n  }\n\n  static async getInitialProps(props) {\n    const users = await factory.methods.getUsers().call();\n    let trademarks = [];\n    let patents = [];\n    let designs = [];\n\n    for (var i = 0; i < users.length; i++) {\n      trademarks.push(await factory.methods.getTrademarks(users[i]).call());\n      patents.push(await factory.methods.getPatents(users[i]).call());\n      designs.push(await factory.methods.getDesigns(users[i]).call());\n    }\n\n    return {\n      trademarks: trademarks,\n      patents: patents,\n      designs: designs\n    };\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n  }\n\n  searchIP() {\n    var matchingPatents = [];\n    var matchingDesigns = [];\n    var matchingTrademarks = [];\n\n    for (var i = 0; i < this.props.trademarks.length; i++) {\n      console.log(\"hello\");\n\n      if (this.props.trademarks[i].indexOf(this.state.ipAddress) !== -1) {\n        matchingTrademarks.push(this.props.trademarks[i]);\n      }\n    }\n\n    for (var i = 0; i < this.props.patents.length; i++) {\n      if (this.props.patents[i].indexOf(this.state.ipAddress.toString()) !== -1) {\n        matchingPatents.push(this.props.patents[i]);\n      }\n    }\n\n    for (var i = 0; i < this.props.designs.length; i++) {\n      if (this.props.designs[i].indexOf(this.state.ipAddress) !== -1) {\n        matchingDesigns.push(this.props.designs[i]);\n      }\n    }\n\n    this.setState({\n      matchingPatents\n    });\n    this.setState({\n      matchingTrademarks\n    });\n    this.setState({\n      matchingDesigns\n    });\n  }\n\n  renderIP(isEmpty) {\n    var trademarkItems = this.state.matchingTrademarks.map(address => {\n      return /*#__PURE__*/_jsxDEV(IntellectualPropertyItem, {\n        typeOfIP: \"Trademark\",\n        address: address,\n        empty: \"False\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 20\n      }, this);\n    });\n    var patentItems = this.state.matchingPatents.map(address => {\n      return /*#__PURE__*/_jsxDEV(IntellectualPropertyItem, {\n        typeOfIP: \"Patent\",\n        address: address,\n        empty: \"False\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 20\n      }, this);\n    });\n    var designItems = this.state.matchingDesigns.map(address => {\n      return /*#__PURE__*/_jsxDEV(IntellectualPropertyItem, {\n        typeOfIP: \"Design\",\n        address: address,\n        empty: \"False\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 20\n      }, this);\n    });\n    return new Map([trademarkItems, patentItems, designItems]);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: style.form,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search for IP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"ipAddress\",\n          className: style.ipAddressBar,\n          type: \"text\",\n          value: this.state.ipAddress,\n          onChange: this.ipAddress_change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.next,\n          type: \"button\",\n          onClick: this.continueRegistration,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [this.renderIP(false), \" \", console.log(this.state.matchingTrademarks), \" \", console.log(this.props.trademarks)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/pages/searchip.js"],"names":["React","Component","Layout","web3","factory","IntellectualPropertyItem","Link","Router","style","YourIP","matchingTrademarks","matchingPatents","matchingDesigns","ipAddress","found","event","document","getElementById","value","setState","searchIP","getInitialProps","props","users","methods","getUsers","call","trademarks","patents","designs","i","length","push","getTrademarks","getPatents","getDesigns","componentDidMount","address","eth","getAccounts","alert","pushRoute","console","log","indexOf","state","toString","renderIP","isEmpty","trademarkItems","map","patentItems","designItems","Map","render","form","ipAddressBar","ipAddress_change","next","continueRegistration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\nimport { Link, Router } from '../routes';\nimport style from '../styles/SearchIP.module.css';\n\nexport default class YourIP extends Component {\n    state = {\n        matchingTrademarks: [],\n        matchingPatents: [],\n        matchingDesigns: [],\n        ipAddress: '',\n        found: ''\n    }\n\n    static async getInitialProps(props) {\n        const users = await factory.methods.getUsers().call();\n\n        let trademarks = [];\n        let patents = [];\n        let designs = [];\n\n        for (var i = 0; i < users.length; i++) {\n            trademarks.push(await factory.methods.getTrademarks(users[i]).call());\n            patents.push(await factory.methods.getPatents(users[i]).call());\n            designs.push(await factory.methods.getDesigns(users[i]).call());\n        }\n\n        return {\n            trademarks: trademarks,\n            patents: patents,\n            designs: designs\n        };\n    }\n\n    async componentDidMount() {\n        const address = await web3.eth.getAccounts();\n        if (address == \"\") {\n            alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n            Router.pushRoute('/');\n        }\n    }\n\n    searchIP() {\n        var matchingPatents = [];\n        var matchingDesigns = [];\n        var matchingTrademarks = [];\n\n        for(var i = 0; i < this.props.trademarks.length; i++) {\n            console.log(\"hello\")\n            if((this.props.trademarks[i]).indexOf(this.state.ipAddress) !== -1) {\n                matchingTrademarks.push(this.props.trademarks[i]);\n            }\n        }\n        for(var i = 0; i < this.props.patents.length; i++) {\n            if((this.props.patents[i]).indexOf(this.state.ipAddress.toString()) !== -1) {\n                matchingPatents.push(this.props.patents[i]);\n            }\n        }\n        for(var i = 0; i < this.props.designs.length; i++) {\n            if((this.props.designs[i]).indexOf(this.state.ipAddress) !== -1) {\n                matchingDesigns.push(this.props.designs[i]);\n            }\n        }\n        this.setState({ matchingPatents });\n        this.setState({ matchingTrademarks });\n        this.setState({ matchingDesigns });\n    }\n\n    ipAddress_change = (event) => {\n        const ipAddress = document.getElementById('ipAddress').value;\n        this.setState({ ipAddress });\n        this.searchIP();\n    }\n\n    renderIP(isEmpty) {\n        var trademarkItems = this.state.matchingTrademarks.map(address => {\n            return <IntellectualPropertyItem\n                typeOfIP = \"Trademark\" \n                address = { address } \n                empty = \"False\"\n            />   \n        });\n\n        var patentItems = this.state.matchingPatents.map(address => {\n            return <IntellectualPropertyItem\n                typeOfIP = \"Patent\"\n                address = { address }\n                empty = \"False\"\n            />\n        });\n\n        var designItems = this.state.matchingDesigns.map(address => {\n            return <IntellectualPropertyItem\n                typeOfIP = \"Design\"\n                address = { address }\n                empty = \"False\"\n            />\n        });\n\n        return new Map([ trademarkItems, patentItems, designItems ]);\n    }\n\n    render() {\n        return (\n            <Layout>\n                <form className={style.form}>\n                    <h2>Search for IP</h2>\n                    <input id=\"ipAddress\" className={style.ipAddressBar} type='text' value={this.state.ipAddress} onChange={this.ipAddress_change} />\n                    <button className={style.next} type='button' onClick={ this.continueRegistration }>Next</button>\n                    <h3>{ this.renderIP(false) } { console.log(this.state.matchingTrademarks) } {console.log(this.props.trademarks)}</h3>\n                </form>\n            </Layout>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}