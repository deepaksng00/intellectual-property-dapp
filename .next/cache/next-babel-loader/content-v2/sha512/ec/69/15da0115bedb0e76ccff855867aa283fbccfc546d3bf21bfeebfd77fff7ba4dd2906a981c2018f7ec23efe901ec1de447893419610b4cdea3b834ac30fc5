{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Desktop/intellectual-property-dapp/pages/yourip.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\nexport default class YourIP extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      trademarks: [],\n      patents: [],\n      designs: []\n    });\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    } else {\n      const trademarks = await factory.methods.getTrademarks(address[0]).call();\n      const patents = await factory.methods.getPatents(address[0]).call();\n      const designs = await factory.methods.getDesigns(address[0]).call();\n      this.setState({\n        trademarks\n      });\n      this.setState({\n        patents\n      });\n      this.setState({\n        designs\n      });\n    }\n  }\n\n  renderIP() {\n    var trademarkItems = this.state.trademarks.map(address => {\n      return /*#__PURE__*/_jsxDEV(IntellectualPropertyItem, {\n        typeOfIP: \"Trademark\",\n        address: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }, this);\n    });\n    var patentItems = this.state.patents.map(address => {\n      return /*#__PURE__*/_jsxDEV(IntellectualPropertyItem, {\n        typeOfIP: \"Patent\",\n        address: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, this);\n    });\n    var designItems = this.state.designs.map(address => {\n      return /*#__PURE__*/_jsxDEV(IntellectualPropertyItem, {\n        typeOfIP: \"Design\",\n        address: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this);\n    });\n    return new Map([trademarkItems, patentItems, designItems]);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: this.renderIP()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/deepaksng00/Desktop/intellectual-property-dapp/pages/yourip.js"],"names":["React","Component","Layout","web3","factory","IntellectualPropertyItem","YourIP","trademarks","patents","designs","componentDidMount","address","eth","getAccounts","alert","Router","pushRoute","methods","getTrademarks","call","getPatents","getDesigns","setState","renderIP","trademarkItems","state","map","patentItems","designItems","Map","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,wBAAP,MAAqC,wCAArC;AAEA,eAAe,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCAClC;AACJM,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,OAAO,EAAE,EAFL;AAGJC,MAAAA,OAAO,EAAE;AAHL,KADkC;AAAA;;AAO1C,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,OAAO,GAAG,MAAMR,IAAI,CAACS,GAAL,CAASC,WAAT,EAAtB;;AACA,QAAIF,OAAO,IAAI,EAAf,EAAmB;AACfG,MAAAA,KAAK,CAAC,sEAAD,CAAL;AACAC,MAAAA,MAAM,CAACC,SAAP,CAAiB,GAAjB;AACH,KAHD,MAGO;AACH,YAAMT,UAAU,GAAG,MAAMH,OAAO,CAACa,OAAR,CAAgBC,aAAhB,CAA8BP,OAAO,CAAC,CAAD,CAArC,EAA0CQ,IAA1C,EAAzB;AACA,YAAMX,OAAO,GAAG,MAAMJ,OAAO,CAACa,OAAR,CAAgBG,UAAhB,CAA2BT,OAAO,CAAC,CAAD,CAAlC,EAAuCQ,IAAvC,EAAtB;AACA,YAAMV,OAAO,GAAG,MAAML,OAAO,CAACa,OAAR,CAAgBI,UAAhB,CAA2BV,OAAO,CAAC,CAAD,CAAlC,EAAuCQ,IAAvC,EAAtB;AACA,WAAKG,QAAL,CAAc;AAAEf,QAAAA;AAAF,OAAd;AACA,WAAKe,QAAL,CAAc;AAAEd,QAAAA;AAAF,OAAd;AACA,WAAKc,QAAL,CAAc;AAAEb,QAAAA;AAAF,OAAd;AACH;AACJ;;AAEDc,EAAAA,QAAQ,GAAG;AACP,QAAIC,cAAc,GAAG,KAAKC,KAAL,CAAWlB,UAAX,CAAsBmB,GAAtB,CAA0Bf,OAAO,IAAI;AACtD,0BAAO,QAAC,wBAAD;AACH,QAAA,QAAQ,EAAG,WADR;AAEH,QAAA,OAAO,EAAKA;AAFT;AAAA;AAAA;AAAA;AAAA,cAAP;AAIH,KALoB,CAArB;AAOA,QAAIgB,WAAW,GAAG,KAAKF,KAAL,CAAWjB,OAAX,CAAmBkB,GAAnB,CAAuBf,OAAO,IAAI;AAChD,0BAAO,QAAC,wBAAD;AACH,QAAA,QAAQ,EAAG,QADR;AAEH,QAAA,OAAO,EAAKA;AAFT;AAAA;AAAA;AAAA;AAAA,cAAP;AAIH,KALiB,CAAlB;AAOA,QAAIiB,WAAW,GAAG,KAAKH,KAAL,CAAWhB,OAAX,CAAmBiB,GAAnB,CAAuBf,OAAO,IAAI;AAChD,0BAAO,QAAC,wBAAD;AACH,QAAA,QAAQ,EAAG,QADR;AAEH,QAAA,OAAO,EAAKA;AAFT;AAAA;AAAA;AAAA;AAAA,cAAP;AAIH,KALiB,CAAlB;AAOA,WAAO,IAAIkB,GAAJ,CAAQ,CAAEL,cAAF,EAAkBG,WAAlB,EAA+BC,WAA/B,CAAR,CAAP;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,MAAD;AAAA,gBACM,KAAKP,QAAL;AADN;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AArDyC","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\n\nexport default class YourIP extends Component {\n    state = {\n        trademarks: [],\n        patents: [],\n        designs: []\n    }\n\n    async componentDidMount() {\n        const address = await web3.eth.getAccounts();\n        if (address == \"\") {\n            alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n            Router.pushRoute('/');\n        } else {\n            const trademarks = await factory.methods.getTrademarks(address[0]).call();\n            const patents = await factory.methods.getPatents(address[0]).call();\n            const designs = await factory.methods.getDesigns(address[0]).call();\n            this.setState({ trademarks });\n            this.setState({ patents });\n            this.setState({ designs });\n        }\n    }\n    \n    renderIP() {\n        var trademarkItems = this.state.trademarks.map(address => {\n            return <IntellectualPropertyItem\n                typeOfIP = \"Trademark\" \n                address = { address } \n            />   \n        });\n\n        var patentItems = this.state.patents.map(address => {\n            return <IntellectualPropertyItem\n                typeOfIP = \"Patent\"\n                address = { address }\n            />\n        });\n\n        var designItems = this.state.designs.map(address => {\n            return <IntellectualPropertyItem\n                typeOfIP = \"Design\"\n                address = { address }\n            />\n        });\n\n        return new Map([ trademarkItems, patentItems, designItems ]);\n    }\n\n    render() {\n        return (\n            <Layout>\n                { this.renderIP() }\n            </Layout>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}