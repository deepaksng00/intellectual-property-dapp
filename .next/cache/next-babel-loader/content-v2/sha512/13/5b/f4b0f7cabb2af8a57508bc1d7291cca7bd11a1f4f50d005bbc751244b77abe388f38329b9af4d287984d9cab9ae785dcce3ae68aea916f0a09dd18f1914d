{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/deepaksng00/Desktop/intellectual-property-dapp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/deepaksng00/Desktop/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/deepaksng00/Desktop/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/deepaksng00/Desktop/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/deepaksng00/Desktop/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/deepaksng00/Desktop/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/deepaksng00/Desktop/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/deepaksng00/Desktop/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/deepaksng00/Desktop/intellectual-property-dapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/deepaksng00/Desktop/intellectual-property-dapp/components/FormRegisterPatentConfirm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterPatentConfirm.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\n\nvar FormRegisterPatentConfirm = /*#__PURE__*/function (_Component) {\n  _inherits(FormRegisterPatentConfirm, _Component);\n\n  var _super = _createSuper(FormRegisterPatentConfirm);\n\n  function FormRegisterPatentConfirm() {\n    var _this;\n\n    _classCallCheck(this, FormRegisterPatentConfirm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"continueRegistration\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var values, compiled_patent, inventorAddress_full, patents, patent, filingDate_UNIX, patent_date_obj, filingDate, owner, status, status_date_UNIX, status_date_object, status_date, renewal_date_UNIX, renewal_date_obj, renewal_date, inventorAddress, title, patent_hash;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                values = _this.props.values;\n                event.preventDefault();\n                compiled_patent = require(\"../ethereum/build/Patent.json\");\n                alert(\"Creating IP\");\n                inventorAddress_full = values.address1_patent + \", \" + values.address2_patent + \", \" + values.addressCity_patent + \", \" + values.addressCounty_patent + \", \" + values.addressPostcode_patent + \", \" + values.addressCountry_patent;\n                _context.prev = 5;\n                _context.next = 8;\n                return factory.methods.createPatent(values.patentTitle, inventorAddress_full, values.fileHash).send({\n                  from: values.address[0],\n                  gasLimit: \"5000000\"\n                })[\"catch\"](function () {\n                  throw 'HashAlreadyUsed';\n                });\n\n              case 8:\n                _context.next = 10;\n                return factory.methods.getPatents(values.address[0]).call();\n\n              case 10:\n                patents = _context.sent;\n                _context.next = 13;\n                return new web3.eth.Contract(compiled_patent.abi, address);\n\n              case 13:\n                patent = _context.sent;\n                _context.next = 16;\n                return patent.methods.getFilingDate().call();\n\n              case 16:\n                filingDate_UNIX = _context.sent;\n                patent_date_obj = new Date(filingDate_UNIX * 1000);\n                filingDate = patent_date_obj.getFullYear().toString() + \"-\" + (patent_date_obj.getMonth() + 1).toString() + \"-\" + patent_date_obj.getDate().toString();\n                _context.next = 21;\n                return patent.methods.getOwner().call();\n\n              case 21:\n                owner = _context.sent;\n                _context.next = 24;\n                return patent.methods.getStatus().call();\n\n              case 24:\n                status = _context.sent;\n                _context.next = 27;\n                return patent.methods.getStatusDate().call();\n\n              case 27:\n                status_date_UNIX = _context.sent;\n                status_date_object = new Date(status_date_UNIX * 1000);\n                status_date = status_date_object.getFullYear().toString() + \"-\" + (status_date_object.getMonth() + 1).toString() + \"-\" + status_date_object.getDate().toString();\n                _context.next = 32;\n                return patent.methods.getExpirationDate().call();\n\n              case 32:\n                renewal_date_UNIX = _context.sent;\n                renewal_date_obj = new Date(renewal_date_UNIX * 1000);\n                renewal_date = renewal_date_obj.getFullYear().toString() + \"-\" + (renewal_date_obj.getMonth() + 1).toString() + \"-\" + renewal_date_obj.getDate().toString();\n                _context.next = 37;\n                return patent.methods.getInventorAddress().call();\n\n              case 37:\n                inventorAddress = _context.sent;\n                _context.next = 40;\n                return patent.methods.getTitle().call();\n\n              case 40:\n                title = _context.sent;\n                _context.next = 43;\n                return patent.methods.getHash().call();\n\n              case 43:\n                patent_hash = _context.sent;\n                console.log(\"Address: \" + address);\n                console.log(\"Owner: \" + owner);\n                console.log(\"Status: \" + status);\n                console.log(\"Status last changed: \" + status_date);\n                console.log(\"Filing date: \" + filingDate); // console.log(\"Publication date: \" + publicationDate);\n\n                console.log(\"Renewal date: \" + renewal_date);\n                console.log(\"Inventor address: \" + inventorAddress);\n                console.log(\"Title: \" + title);\n                console.log(\"Hash: \" + patent_hash);\n\n                _this.props.changeForm('ip_addr', address);\n\n                _this.props.changeForm('address', owner);\n\n                _this.props.nextStep(1);\n\n                _context.next = 62;\n                break;\n\n              case 58:\n                _context.prev = 58;\n                _context.t0 = _context[\"catch\"](5);\n                alert(\"ERROR: The hash has already been registered!\");\n\n                _this.props.previousStep(5);\n\n              case 62:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[5, 58]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"backRegistration\", function (e) {\n      e.preventDefault();\n\n      _this.props.previousStep(1);\n    });\n\n    return _this;\n  }\n\n  _createClass(FormRegisterPatentConfirm, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var values = this.props.values;\n      var nextStep = this.props.nextStep;\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: style.form,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Confirm your details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.addressLabel,\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.address,\n            type: \"text\",\n            value: values.address,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.dateLabel,\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.date,\n            type: \"text\",\n            value: values.currentDate,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.typeOfIPLabel,\n            children: \"Type of IP:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.typeOfIP,\n            type: \"text\",\n            value: values.typeOfIP,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.patentTitleLabel,\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.patentTitle,\n            type: \"text\",\n            value: values.patentTitle,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.address1Label,\n            children: \"Address line 1:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"address1\",\n            className: style.address1,\n            type: \"text\",\n            value: values.address1_patent,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.address2Label,\n            children: \"Address line 2:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"address2\",\n            className: style.address2,\n            type: \"text\",\n            value: values.address2_patent,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.addressCityLabel,\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"city\",\n            className: style.city,\n            type: \"text\",\n            value: values.addressCity_patent,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.addressCountyLabel,\n            children: \"County:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"county\",\n            className: style.county,\n            type: \"text\",\n            value: values.addressCounty_patent,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.addressPostcodeLabel,\n            children: \"Postcode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"postcode\",\n            className: style.postcode,\n            type: \"text\",\n            value: values.addressPostcode_patent,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.addressCountryLabel,\n            children: \"Country:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"country\",\n            className: style.country,\n            type: \"text\",\n            value: values.addressCountry_patent,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: style.back,\n            type: \"button\",\n            onClick: this.backRegistration,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: style.next,\n            type: \"button\",\n            onClick: this.continueRegistration,\n            children: \"Register Patent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return FormRegisterPatentConfirm;\n}(Component);\n\nexport default FormRegisterPatentConfirm;","map":{"version":3,"sources":["/Users/deepaksng00/Desktop/intellectual-property-dapp/components/FormRegisterPatentConfirm.js"],"names":["React","Component","Layout","style","Link","Router","web3","factory","FormRegisterPatentConfirm","event","values","props","preventDefault","compiled_patent","require","alert","inventorAddress_full","address1_patent","address2_patent","addressCity_patent","addressCounty_patent","addressPostcode_patent","addressCountry_patent","methods","createPatent","patentTitle","fileHash","send","from","address","gasLimit","getPatents","call","patents","eth","Contract","abi","patent","getFilingDate","filingDate_UNIX","patent_date_obj","Date","filingDate","getFullYear","toString","getMonth","getDate","getOwner","owner","getStatus","status","getStatusDate","status_date_UNIX","status_date_object","status_date","getExpirationDate","renewal_date_UNIX","renewal_date_obj","renewal_date","getInventorAddress","inventorAddress","getTitle","title","getHash","patent_hash","console","log","changeForm","nextStep","previousStep","e","form","addressLabel","dateLabel","date","currentDate","typeOfIPLabel","typeOfIP","patentTitleLabel","address1Label","address1","address2Label","address2","addressCityLabel","city","addressCountyLabel","county","addressPostcodeLabel","postcode","addressCountryLabel","country","back","backRegistration","next","continueRegistration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterPatentConfirm.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\n\nclass FormRegisterPatentConfirm extends Component {\n  continueRegistration = async (event) => {\n    const { values } = this.props;\n    event.preventDefault();\n    const compiled_patent = require(\"../ethereum/build/Patent.json\");\n    alert(\"Creating IP\");\n\n    const inventorAddress_full = values.address1_patent + \", \" + values.address2_patent + \", \" + values.addressCity_patent + \", \" + values.addressCounty_patent + \", \" + values.addressPostcode_patent + \", \" + values.addressCountry_patent;\n\n    try {\n      await factory.methods.createPatent(values.patentTitle, inventorAddress_full, values.fileHash).send({\n        from: values.address[0],\n        gasLimit: \"5000000\"\n       })\n       .catch(() => { throw 'HashAlreadyUsed' });\n   \n      const patents = await factory.methods.getPatents(values.address[0]).call();\n      const patent = await new web3.eth.Contract(compiled_patent.abi, address);\n   \n      const filingDate_UNIX = await patent.methods.getFilingDate().call();\n      const patent_date_obj = new Date(filingDate_UNIX * 1000);\n      const filingDate = patent_date_obj.getFullYear().toString() + \"-\" + (patent_date_obj.getMonth()+1).toString() + \"-\" + patent_date_obj.getDate().toString();\n      const owner = await patent.methods.getOwner().call();\n      const status = await patent.methods.getStatus().call();\n      // const publicationDate_UNIX = await patent.methods.getPublicationDate().call();\n      // const publicationDate_obj = new Date(publicationDate_UNIX * 1000);\n      // const publicationDate = publicationDate_obj.getFullYear().toString() + \"-\" + (publicationDate_obj.getMonth()+1).toString() + \"-\" + publicationDate_obj.getDate().toString();\n      const status_date_UNIX = await patent.methods.getStatusDate().call();\n      const status_date_object = new Date(status_date_UNIX * 1000);\n      const status_date = status_date_object.getFullYear().toString() + \"-\" + (status_date_object.getMonth()+1).toString() + \"-\" + status_date_object.getDate().toString();\n      const renewal_date_UNIX = await patent.methods.getExpirationDate().call();\n      const renewal_date_obj = new Date(renewal_date_UNIX * 1000);\n      const renewal_date = renewal_date_obj.getFullYear().toString() + \"-\" + (renewal_date_obj.getMonth()+1).toString() + \"-\" + renewal_date_obj.getDate().toString();\n      const inventorAddress = await patent.methods.getInventorAddress().call();\n      const title = await patent.methods.getTitle().call();\n      const patent_hash = await patent.methods.getHash().call();\n  \n      console.log(\"Address: \" + address);\n      console.log(\"Owner: \" + owner);\n      console.log(\"Status: \" + status);\n      console.log(\"Status last changed: \" + status_date)\n      console.log(\"Filing date: \" + filingDate);\n      // console.log(\"Publication date: \" + publicationDate);\n      console.log(\"Renewal date: \" + renewal_date);\n      console.log(\"Inventor address: \" + inventorAddress);\n      console.log(\"Title: \" + title);\n      console.log(\"Hash: \" + patent_hash);\n  \n      this.props.changeForm('ip_addr', address);\n      this.props.changeForm('address', owner);\n  \n      this.props.nextStep(1);   \n    } catch (err) {\n      alert(\"ERROR: The hash has already been registered!\");\n      this.props.previousStep(5);\n    }\n  }\n\n  backRegistration = e => {\n    e.preventDefault();\n    this.props.previousStep(1);\n  }\n\n  async componentDidMount() {\n    // const address = await web3.eth.getAccounts();\n    // if (address == \"\") {\n    //   alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n    //   Router.pushRoute('/');\n    // }\n  }\n\n  render() {\n    const { values } = this.props;\n    const { nextStep } = this.props;\n\n    return (\n      <Layout>\n        <form className={style.form}>\n          <h2>Confirm your details</h2>\n          <p className={style.addressLabel}>Address:</p>\n          <input className={style.address} type='text' value={values.address} readOnly />\n          <p className={style.dateLabel}>Date:</p>\n          <input className={style.date} type='text' value={values.currentDate} readOnly />\n          <p className={style.typeOfIPLabel}>Type of IP:</p>\n          <input className={style.typeOfIP} type='text' value={values.typeOfIP} readOnly />\n          <p className={style.patentTitleLabel}>Title:</p>\n          <input className={style.patentTitle} type='text' value={values.patentTitle} readOnly />\n          <p className={style.address1Label}>Address line 1:</p>\n          <input id=\"address1\" className={style.address1} type='text' value={values.address1_patent} readOnly />\n          <p className={style.address2Label}>Address line 2:</p>\n          <input id=\"address2\" className={style.address2} type='text' value={values.address2_patent} readOnly />\n          <p className={style.addressCityLabel}>City:</p>\n          <input id=\"city\" className={style.city} type='text' value={values.addressCity_patent} readOnly />\n          <p className={style.addressCountyLabel}>County:</p>\n          <input id=\"county\" className={style.county} type='text' value={values.addressCounty_patent} readOnly />\n          <p className={style.addressPostcodeLabel}>Postcode:</p>\n          <input id=\"postcode\" className={style.postcode} type='text' value={values.addressPostcode_patent} readOnly />\n          <p className={style.addressCountryLabel}>Country:</p>\n          <input id=\"country\" className={style.country} type='text' value={values.addressCountry_patent} readOnly />\n          <button className={style.back} type='button' onClick={ this.backRegistration }>Back</button>\n          <button className={style.next} type='button' onClick={ this.continueRegistration }>Register Patent</button>\n      </form>\n      </Layout>\n    );\n  }\n}\n\nexport default FormRegisterPatentConfirm;\n"]},"metadata":{},"sourceType":"module"}