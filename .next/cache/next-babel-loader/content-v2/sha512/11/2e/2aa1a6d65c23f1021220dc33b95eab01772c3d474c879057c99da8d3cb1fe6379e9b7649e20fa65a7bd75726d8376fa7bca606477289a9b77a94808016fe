{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterPatentConfirm.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterPatentConfirm.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\n\nclass FormRegisterPatentConfirm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: false\n    });\n\n    _defineProperty(this, \"continueRegistration\", async event => {\n      const {\n        values\n      } = this.props;\n      event.preventDefault();\n\n      const compiled_patent = require(\"../ethereum/build/Patent.json\");\n\n      alert(\"Creating IP\");\n      const inventorAddress_full = values.address1_patent + \", \" + values.address2_patent + \", \" + values.addressCity_patent + \", \" + values.addressCounty_patent + \", \" + values.addressPostcode_patent + \", \" + values.addressCountry_patent;\n\n      try {\n        await factory.methods.createPatent(values.patentTitle, inventorAddress_full, values.fileHash).send({\n          from: values.address[0],\n          gasLimit: \"5000000\"\n        }).catch(() => {\n          throw 'HashAlreadyUsed';\n        });\n        const patents = await factory.methods.getPatents(values.address[0]).call();\n        const numOfPatents = patents.length;\n        const address = trademarks[numOfTrademarks - 1];\n        this.props.changeForm('ip_addr', address);\n        this.props.changeForm('address', values.address[0]);\n        this.props.nextStep(1);\n      } catch (err) {\n        alert(\"ERROR: The hash has already been registered!\");\n        this.props.previousStep(5);\n      }\n    });\n\n    _defineProperty(this, \"backRegistration\", e => {\n      e.preventDefault();\n      this.props.previousStep(1);\n    });\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n  }\n\n  render() {\n    const {\n      values\n    } = this.props;\n    const {\n      nextStep\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: style.form,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Confirm your details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.addressLabel,\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.address,\n          type: \"text\",\n          value: values.address,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.dateLabel,\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.date,\n          type: \"text\",\n          value: values.currentDate,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.typeOfIPLabel,\n          children: \"Type of IP:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.typeOfIP,\n          type: \"text\",\n          value: values.typeOfIP,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.patentTitleLabel,\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.patentTitle,\n          type: \"text\",\n          value: values.patentTitle,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.address1Label,\n          children: \"Address line 1:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"address1\",\n          className: style.address1,\n          type: \"text\",\n          value: values.address1_patent,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.address2Label,\n          children: \"Address line 2:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"address2\",\n          className: style.address2,\n          type: \"text\",\n          value: values.address2_patent,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.addressCityLabel,\n          children: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"city\",\n          className: style.city,\n          type: \"text\",\n          value: values.addressCity_patent,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.addressCountyLabel,\n          children: \"County:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"county\",\n          className: style.county,\n          type: \"text\",\n          value: values.addressCounty_patent,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.addressPostcodeLabel,\n          children: \"Postcode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"postcode\",\n          className: style.postcode,\n          type: \"text\",\n          value: values.addressPostcode_patent,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.addressCountryLabel,\n          children: \"Country:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"country\",\n          className: style.country,\n          type: \"text\",\n          value: values.addressCountry_patent,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.back,\n          type: \"button\",\n          onClick: this.backRegistration,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.next,\n          type: \"button\",\n          onClick: this.continueRegistration,\n          children: \"Register Patent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FormRegisterPatentConfirm;","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterPatentConfirm.js"],"names":["React","Component","Layout","style","Link","Router","web3","factory","FormRegisterPatentConfirm","loading","event","values","props","preventDefault","compiled_patent","require","alert","inventorAddress_full","address1_patent","address2_patent","addressCity_patent","addressCounty_patent","addressPostcode_patent","addressCountry_patent","methods","createPatent","patentTitle","fileHash","send","from","address","gasLimit","catch","patents","getPatents","call","numOfPatents","length","trademarks","numOfTrademarks","changeForm","nextStep","err","previousStep","e","componentDidMount","eth","getAccounts","pushRoute","render","form","addressLabel","dateLabel","date","currentDate","typeOfIPLabel","typeOfIP","patentTitleLabel","address1Label","address1","address2Label","address2","addressCityLabel","city","addressCountyLabel","county","addressPostcodeLabel","postcode","addressCountryLabel","country","back","backRegistration","next","continueRegistration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterPatentConfirm.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\n\nclass FormRegisterPatentConfirm extends Component {\n  state = {\n    loading: false\n  }\n  \n  continueRegistration = async (event) => {\n    const { values } = this.props;\n    event.preventDefault();\n    const compiled_patent = require(\"../ethereum/build/Patent.json\");\n    alert(\"Creating IP\");\n\n    const inventorAddress_full = values.address1_patent + \", \" + values.address2_patent + \", \" + values.addressCity_patent + \", \" + values.addressCounty_patent + \", \" + values.addressPostcode_patent + \", \" + values.addressCountry_patent;\n\n    try {\n      await factory.methods.createPatent(values.patentTitle, inventorAddress_full, values.fileHash).send({\n        from: values.address[0],\n        gasLimit: \"5000000\"\n       })\n       .catch(() => { throw 'HashAlreadyUsed' });\n\n      const patents = await factory.methods.getPatents(values.address[0]).call();\n      const numOfPatents = patents.length;\n      const address = trademarks[numOfTrademarks-1];\n   \n      this.props.changeForm('ip_addr', address);\n      this.props.changeForm('address', values.address[0]);\n  \n      this.props.nextStep(1);   \n    } catch (err) {\n      alert(\"ERROR: The hash has already been registered!\");\n      this.props.previousStep(5);\n    }\n  }\n\n  backRegistration = e => {\n    e.preventDefault();\n    this.props.previousStep(1);\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n  }\n\n  render() {\n    const { values } = this.props;\n    const { nextStep } = this.props;\n\n    return (\n      <Layout>\n        <form className={style.form}>\n          <h2>Confirm your details</h2>\n          <p className={style.addressLabel}>Address:</p>\n          <input className={style.address} type='text' value={values.address} readOnly />\n          <p className={style.dateLabel}>Date:</p>\n          <input className={style.date} type='text' value={values.currentDate} readOnly />\n          <p className={style.typeOfIPLabel}>Type of IP:</p>\n          <input className={style.typeOfIP} type='text' value={values.typeOfIP} readOnly />\n          <p className={style.patentTitleLabel}>Title:</p>\n          <input className={style.patentTitle} type='text' value={values.patentTitle} readOnly />\n          <p className={style.address1Label}>Address line 1:</p>\n          <input id=\"address1\" className={style.address1} type='text' value={values.address1_patent} readOnly />\n          <p className={style.address2Label}>Address line 2:</p>\n          <input id=\"address2\" className={style.address2} type='text' value={values.address2_patent} readOnly />\n          <p className={style.addressCityLabel}>City:</p>\n          <input id=\"city\" className={style.city} type='text' value={values.addressCity_patent} readOnly />\n          <p className={style.addressCountyLabel}>County:</p>\n          <input id=\"county\" className={style.county} type='text' value={values.addressCounty_patent} readOnly />\n          <p className={style.addressPostcodeLabel}>Postcode:</p>\n          <input id=\"postcode\" className={style.postcode} type='text' value={values.addressPostcode_patent} readOnly />\n          <p className={style.addressCountryLabel}>Country:</p>\n          <input id=\"country\" className={style.country} type='text' value={values.addressCountry_patent} readOnly />\n          <button className={style.back} type='button' onClick={ this.backRegistration }>Back</button>\n          <button className={style.next} type='button' onClick={ this.continueRegistration }>Register Patent</button>\n      </form>\n      </Layout>\n    );\n  }\n}\n\nexport default FormRegisterPatentConfirm;\n"]},"metadata":{},"sourceType":"module"}