{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterTrademarkConfirm.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterTrademarkConfirm.module.css';\nimport { Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport RingLoader from \"react-spinners/RingLoader\";\n\nconst contract = require(\"../ethereum/intellectualproperty\");\n\nclass FormRegisterTrademarkConfirm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: false\n    });\n\n    _defineProperty(this, \"continueRegistration\", async event => {\n      event.preventDefault();\n      const {\n        values\n      } = this.props;\n      var tokenMetadata = {}; // const instance = await IPRegister.deployed();\n\n      const currentTimestamp = new Date().getTime() / 1000;\n      var expirationDate = new Date();\n      expirationDate.setFullYear(expirationDate.getFullYear() + 5);\n      expirationDate = expirationDate.getTime() / 1000; // creating metadata for NFT\n\n      tokenMetadata += \"PubDate\" + \":\" + currentTimestamp.toString() + \",\";\n      tokenMetadata += \"ExpirationDate\" + \":\" + expirationDate.toString() + \",\";\n      tokenMetadata += \"IpfsHash\" + \":\" + values.fileHash + \",\";\n      tokenMetadata += \"TypeOfIP\" + \":\" + values.typeOfIP + \",\";\n      tokenMetadata += \"MarkDesc\" + \":\" + values.markDesc;\n      console.log(tokenMetadata);\n      const address = values.address[0];\n      const ipfsHash = values.fileHash;\n      await contract.default.methods.awardIP(address, ipfsHash, tokenMetadata).send({\n        from: address,\n        gasLimit: \"5000000\"\n      });\n      const numOfTokens = await contract.default.methods.totalSupply().call();\n      console.log(numOfTokens);\n      const tokenOfUser = await contract.default.methods.tokenOfOwnerByIndex(address, 0).call();\n      const tokenURI = await contract.default.methods.tokenURI(tokenOfUser).call();\n      console.log(tokenURI);\n    });\n\n    _defineProperty(this, \"backRegistration\", e => {\n      e.preventDefault();\n      this.props.previousStep(1);\n    });\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const address = await web3.eth.getAccounts();\n\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    const {\n      values\n    } = this.props;\n    const {\n      nextStep\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"loadingContainer\",\n        children: /*#__PURE__*/_jsxDEV(RingLoader, {\n          color: \"#ffffff\",\n          loading: this.state.loading,\n          size: 60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: style.form,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Confirm your details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.addressLabel,\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.address,\n            type: \"text\",\n            value: values.address,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.dateLabel,\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.date,\n            type: \"text\",\n            value: values.currentDate,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.typeOfIPLabel,\n            children: \"Type of IP:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.typeOfIP,\n            type: \"text\",\n            value: values.typeOfIP,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.markDescLabel,\n            children: \"Mark description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.markDesc,\n            type: \"text\",\n            value: values.markDesc,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.markHashLabel,\n            children: \"Mark hash:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.markHash,\n            type: \"text\",\n            value: values.fileHash,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: style.back,\n            type: \"button\",\n            onClick: this.backRegistration,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: style.next,\n            type: \"button\",\n            onClick: this.continueRegistration,\n            children: \"Register Trademark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FormRegisterTrademarkConfirm;","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterTrademarkConfirm.js"],"names":["React","Component","Layout","style","Router","web3","RingLoader","contract","require","FormRegisterTrademarkConfirm","loading","event","preventDefault","values","props","tokenMetadata","currentTimestamp","Date","getTime","expirationDate","setFullYear","getFullYear","toString","fileHash","typeOfIP","markDesc","console","log","address","ipfsHash","default","methods","awardIP","send","from","gasLimit","numOfTokens","totalSupply","call","tokenOfUser","tokenOfOwnerByIndex","tokenURI","e","previousStep","componentDidMount","setState","eth","getAccounts","alert","pushRoute","render","nextStep","state","form","addressLabel","dateLabel","date","currentDate","typeOfIPLabel","markDescLabel","markHashLabel","markHash","back","backRegistration","next","continueRegistration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterTrademarkConfirm.module.css';\nimport { Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport RingLoader from \"react-spinners/RingLoader\";\nconst contract = require(\"../ethereum/intellectualproperty\");\n\n\nclass FormRegisterTrademarkConfirm extends Component {\n  state = {\n    loading: false\n  }\n\n  continueRegistration = async (event) => {\n    event.preventDefault();\n\n    const { values } = this.props;\n    var tokenMetadata = {};\n    // const instance = await IPRegister.deployed();\n\n    const currentTimestamp = new Date().getTime() / 1000;\n    var expirationDate = new Date();\n    expirationDate.setFullYear(expirationDate.getFullYear() + 5);\n    expirationDate = expirationDate.getTime() / 1000;\n\n    // creating metadata for NFT\n    tokenMetadata += (\"PubDate\"+\":\"+currentTimestamp.toString()+\",\");\n    tokenMetadata += (\"ExpirationDate\"+\":\"+expirationDate.toString()+\",\");\n    tokenMetadata += (\"IpfsHash\"+\":\"+values.fileHash+\",\");\n    tokenMetadata += (\"TypeOfIP\"+\":\"+values.typeOfIP+\",\");\n    tokenMetadata += (\"MarkDesc\"+\":\"+values.markDesc);\n\n    console.log(tokenMetadata);\n\n    const address = values.address[0];\n    const ipfsHash = values.fileHash;\n\n    await contract.default.methods.awardIP(address, ipfsHash, tokenMetadata).send({ from: address, gasLimit: \"5000000\" });\n    const numOfTokens = await contract.default.methods.totalSupply().call();\n    console.log(numOfTokens);\n\n    const tokenOfUser = await contract.default.methods.tokenOfOwnerByIndex(address, 0).call();\n    const tokenURI = await contract.default.methods.tokenURI(tokenOfUser).call();\n    console.log(tokenURI);\n  }\n\n  backRegistration = e => {\n    e.preventDefault();\n    this.props.previousStep(1);\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    const address = await web3.eth.getAccounts();\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n    this.setState({ loading: false });\n  }\n\n  render() {\n    const { values } = this.props;\n    const { nextStep } = this.props;\n\n    return (\n      <div>\n        {\n          this.state.loading ?\n\n          <div class=\"loadingContainer\"><RingLoader color={\"#ffffff\"} loading={this.state.loading} size={60} /></div>\n\n          :\n\n          <Layout>\n            <form className={style.form}>\n              <h2>Confirm your details</h2>\n              <p className={style.addressLabel}>Address:</p>\n              <input className={style.address} type='text' value={values.address} readOnly />\n              <p className={style.dateLabel}>Date:</p>\n              <input className={style.date} type='text' value={values.currentDate} readOnly />\n              <p className={style.typeOfIPLabel}>Type of IP:</p>\n              <input className={style.typeOfIP} type='text' value={values.typeOfIP} readOnly />\n              <p className={style.markDescLabel}>Mark description:</p>\n              <input className={style.markDesc} type='text' value={values.markDesc} readOnly />\n              <p className={style.markHashLabel}>Mark hash:</p>\n              <input className={style.markHash} type='text' value={values.fileHash} readOnly />\n              <button className={style.back} type='button' onClick={ this.backRegistration }>Back</button>\n              <button className={style.next} type='button' onClick={ this.continueRegistration }>Register Trademark</button>\n            </form>\n          </Layout>\n        }\n      </div>\n    );\n  }\n}\n\nexport default FormRegisterTrademarkConfirm;\n"]},"metadata":{},"sourceType":"module"}