{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/pages/searchip.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\nimport { Link, Router } from '../routes';\nimport style from '../styles/SearchIP.module.css';\nexport default class YourIP extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      searchAddress: ''\n    });\n\n    _defineProperty(this, \"onFormSubmit\", event => {\n      const searchAddress = document.getElementById('ipAddress').value;\n      this.setState({\n        searchAddress\n      });\n      let found = '';\n      let typeOfIP = '';\n      const trademarks = this.props.trademarks;\n      const patents = this.props.patents;\n      const designs = this.props.designs;\n\n      for (var i = 0; i < trademarks.length; i++) {\n        if (trademarks[i] == searchAddress) {\n          found = trademarks[i];\n          typeOfIP = 'trademarks';\n        }\n      }\n\n      for (var i = 0; i < patents.length; i++) {\n        if (patents[i] == searchAddress) {\n          found = patents[i];\n          typeOfIP = 'patents';\n        }\n      }\n\n      for (var i = 0; i < designs.length; i++) {\n        if (designs[i] == searchAddress) {\n          found = designs[i];\n          typeOfIP = 'designs';\n        }\n      }\n\n      if (found == '') {\n        alert(\"No results found\");\n      } else {\n        Router.pushRoute(`/intellectualproperty/${typeOfIP}/${found}`);\n      }\n    });\n  }\n\n  static async getInitialProps(props) {\n    const users = await factory.methods.getUsers().call();\n    let trademarks = [];\n    let patents = [];\n    let designs = [];\n\n    for (var i = 0; i < users.length; i++) {\n      trademarks.push(await factory.methods.getTrademarks(users[i]).call());\n      patents.push(await factory.methods.getPatents(users[i]).call());\n      designs.push(await factory.methods.getDesigns(users[i]).call());\n    }\n\n    return {\n      trademarks: trademarks,\n      patents: patents,\n      designs: designs\n    };\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: style.form,\n        onSubmit: this.onFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search for IP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"ipAddress\",\n          className: style.ipAddressBar,\n          type: \"text\",\n          value: this.state.ipAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.next,\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/pages/searchip.js"],"names":["React","Component","Layout","web3","factory","IntellectualPropertyItem","Link","Router","style","YourIP","searchAddress","event","document","getElementById","value","setState","found","typeOfIP","trademarks","props","patents","designs","i","length","alert","pushRoute","getInitialProps","users","methods","getUsers","call","push","getTrademarks","getPatents","getDesigns","componentDidMount","address","eth","getAccounts","render","form","onFormSubmit","ipAddressBar","state","ipAddress","next"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\nimport { Link, Router } from '../routes';\nimport style from '../styles/SearchIP.module.css';\n\nexport default class YourIP extends Component {\n    state = {\n        searchAddress: '',\n    }\n\n    static async getInitialProps(props) {\n        const users = await factory.methods.getUsers().call();\n\n        let trademarks = [];\n        let patents = [];\n        let designs = [];\n\n        for (var i = 0; i < users.length; i++) {\n            trademarks.push(await factory.methods.getTrademarks(users[i]).call());\n            patents.push(await factory.methods.getPatents(users[i]).call());\n            designs.push(await factory.methods.getDesigns(users[i]).call());\n        }\n\n        return {\n            trademarks: trademarks,\n            patents: patents,\n            designs: designs\n        };\n    }\n\n    async componentDidMount() {\n        const address = await web3.eth.getAccounts();\n        if (address == \"\") {\n            alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n            Router.pushRoute('/');\n        }\n    }\n\n    onFormSubmit = (event) => {\n        const searchAddress = document.getElementById('ipAddress').value;\n        this.setState({ searchAddress });\n        let found = '';\n        let typeOfIP = '';\n\n        const trademarks = this.props.trademarks;\n        const patents = this.props.patents;\n        const designs = this.props.designs;\n\n        for(var i = 0; i < trademarks.length; i++) {\n            if(trademarks[i] == searchAddress) {\n                found = trademarks[i];\n                typeOfIP = 'trademarks';\n            }\n        }\n        for(var i = 0; i < patents.length; i++) {\n            if(patents[i] == searchAddress) {\n                found = patents[i];\n                typeOfIP = 'patents';\n            }\n        }\n        for(var i = 0; i < designs.length; i++) {\n            if(designs[i] == searchAddress) {\n                found = designs[i];\n                typeOfIP = 'designs';\n            }\n        }\n\n        if(found == '') {\n            alert(\"No results found\");\n        } else {\n            Router.pushRoute(`/intellectualproperty/${typeOfIP}/${found}`);\n        }\n    }\n\n    render() {\n        return (\n            <Layout>\n                <form className={style.form} onSubmit={this.onFormSubmit}>\n                    <h2>Search for IP</h2>\n                    <input id=\"ipAddress\" className={style.ipAddressBar} type='text' value={this.state.ipAddress} />\n                    <input className={style.next} type=\"submit\" />\n                </form>\n            </Layout>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}