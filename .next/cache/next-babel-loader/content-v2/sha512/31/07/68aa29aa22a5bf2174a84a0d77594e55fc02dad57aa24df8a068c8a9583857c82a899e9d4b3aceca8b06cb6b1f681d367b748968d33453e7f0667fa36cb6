{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/pages/searchip.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\nimport { Link, Router } from '../routes';\nimport style from '../styles/SearchIP.module.css';\nexport default class YourIP extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      matchingTrademarks: [],\n      matchingPatents: [],\n      matchingDesigns: [],\n      searchAddress: '',\n      found: ''\n    });\n\n    _defineProperty(this, \"onSubmit\", event => {\n      const searchAddress = document.getElementById('ipAddress').value;\n      this.setState({\n        searchAddress\n      });\n      let found = '';\n      console.log(this.state.trademarks);\n\n      for (var i = 0; i < this.state.trademarks.length; i++) {\n        if (this.state.trademarks[i] == searchAddress) {\n          found = this.state.trademarks[i];\n        }\n      }\n\n      for (var i = 0; i < this.state.patents.length; i++) {\n        if (this.state.patents[i] == searchAddress) {\n          found = this.state.patents[i];\n        }\n      }\n\n      for (var i = 0; i < this.state.designs.length; i++) {\n        if (this.state.designs[i] == searchAddress) {\n          found = this.state.designs[i];\n        }\n      }\n\n      this.setState({\n        found\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    const users = await factory.methods.getUsers().call();\n    let trademarks = [];\n    let patents = [];\n    let designs = [];\n\n    for (var i = 0; i < users.length; i++) {\n      trademarks.push(await factory.methods.getTrademarks(users[i]).call());\n      patents.push(await factory.methods.getPatents(users[i]).call());\n      designs.push(await factory.methods.getDesigns(users[i]).call());\n    }\n\n    return {\n      trademarks: trademarks,\n      patents: patents,\n      designs: designs\n    };\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n  }\n\n  searchIP() {}\n\n  renderIP() {\n    if (this.state.found == '') {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No results found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this);\n    } else {\n      var trademarkItems = this.state.matchingTrademarks.map(address => {\n        return /*#__PURE__*/_jsxDEV(IntellectualPropertyItem, {\n          typeOfIP: \"Trademark\",\n          address: address,\n          empty: \"False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }, this);\n      });\n      var patentItems = this.state.matchingPatents.map(address => {\n        return /*#__PURE__*/_jsxDEV(IntellectualPropertyItem, {\n          typeOfIP: \"Patent\",\n          address: address,\n          empty: \"False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 24\n        }, this);\n      });\n      var designItems = this.state.matchingDesigns.map(address => {\n        return /*#__PURE__*/_jsxDEV(IntellectualPropertyItem, {\n          typeOfIP: \"Design\",\n          address: address,\n          empty: \"False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 24\n        }, this);\n      });\n      return new Map([trademarkItems, patentItems, designItems]);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: style.form,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search for IP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"ipAddress\",\n          className: style.ipAddressBar,\n          type: \"text\",\n          value: this.state.ipAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.next,\n          type: \"button\",\n          onClick: this.onSubmit,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.renderIP()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/pages/searchip.js"],"names":["React","Component","Layout","web3","factory","IntellectualPropertyItem","Link","Router","style","YourIP","matchingTrademarks","matchingPatents","matchingDesigns","searchAddress","found","event","document","getElementById","value","setState","console","log","state","trademarks","i","length","patents","designs","getInitialProps","props","users","methods","getUsers","call","push","getTrademarks","getPatents","getDesigns","componentDidMount","address","eth","getAccounts","alert","pushRoute","searchIP","renderIP","trademarkItems","map","patentItems","designItems","Map","render","form","ipAddressBar","ipAddress","next","onSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport IntellectualPropertyItem from '../components/IntellectualPropertyItem';\nimport { Link, Router } from '../routes';\nimport style from '../styles/SearchIP.module.css';\n\nexport default class YourIP extends Component {\n    state = {\n        matchingTrademarks: [],\n        matchingPatents: [],\n        matchingDesigns: [],\n        searchAddress: '',\n        found: ''\n    }\n\n    static async getInitialProps(props) {\n        const users = await factory.methods.getUsers().call();\n\n        let trademarks = [];\n        let patents = [];\n        let designs = [];\n\n        for (var i = 0; i < users.length; i++) {\n            trademarks.push(await factory.methods.getTrademarks(users[i]).call());\n            patents.push(await factory.methods.getPatents(users[i]).call());\n            designs.push(await factory.methods.getDesigns(users[i]).call());\n        }\n\n        return {\n            trademarks: trademarks,\n            patents: patents,\n            designs: designs\n        };\n    }\n\n    async componentDidMount() {\n        const address = await web3.eth.getAccounts();\n        if (address == \"\") {\n            alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n            Router.pushRoute('/');\n        }\n    }\n\n    searchIP() {\n\n    }\n\n    onSubmit = (event) => {\n        const searchAddress = document.getElementById('ipAddress').value;\n        this.setState({ searchAddress });\n        let found = '';\n        console.log(this.state.trademarks);\n        for(var i = 0; i < this.state.trademarks.length; i++) {\n            if(this.state.trademarks[i] == searchAddress) {\n                found = this.state.trademarks[i];\n            }\n        }\n        for(var i = 0; i < this.state.patents.length; i++) {\n            if(this.state.patents[i] == searchAddress) {\n                found = this.state.patents[i];\n            }\n        }\n        for(var i = 0; i < this.state.designs.length; i++) {\n            if(this.state.designs[i] == searchAddress) {\n                found = this.state.designs[i];\n            }\n        }\n        this.setState({ found });\n    }\n\n    renderIP() {\n        if(this.state.found == '') {\n           return <h1>No results found</h1> \n        } else {\n            var trademarkItems = this.state.matchingTrademarks.map(address => {\n                return <IntellectualPropertyItem\n                    typeOfIP = \"Trademark\" \n                    address = { address } \n                    empty = \"False\"\n                />   \n            });\n    \n            var patentItems = this.state.matchingPatents.map(address => {\n                return <IntellectualPropertyItem\n                    typeOfIP = \"Patent\"\n                    address = { address }\n                    empty = \"False\"\n                />\n            });\n    \n            var designItems = this.state.matchingDesigns.map(address => {\n                return <IntellectualPropertyItem\n                    typeOfIP = \"Design\"\n                    address = { address }\n                    empty = \"False\"\n                />\n            });\n    \n            return new Map([ trademarkItems, patentItems, designItems ]);\n        }\n    }\n\n    render() {\n        return (\n            <Layout>\n                <form className={style.form}>\n                    <h2>Search for IP</h2>\n                    <input id=\"ipAddress\" className={style.ipAddressBar} type='text' value={this.state.ipAddress} />\n                    <button className={style.next} type='button' onClick={ this.onSubmit }>Next</button>\n                    <h3>{ this.renderIP() }</h3>\n                </form>\n            </Layout>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}