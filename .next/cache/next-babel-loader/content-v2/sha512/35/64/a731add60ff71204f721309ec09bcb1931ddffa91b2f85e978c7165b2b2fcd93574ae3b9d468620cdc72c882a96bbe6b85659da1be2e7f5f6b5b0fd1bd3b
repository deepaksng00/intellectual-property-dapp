{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterTrademarkConfirm.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterTrademarkConfirm.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nclass FormRegisterTrademarkConfirm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: false\n    });\n\n    _defineProperty(this, \"continueRegistration\", async event => {\n      event.preventDefault();\n      const {\n        values\n      } = this.props;\n\n      const compiled_trademark = require(\"../ethereum/build/Trademark.json\");\n\n      try {\n        this.setState({\n          loading: true\n        });\n        await factory.methods.createTrademark(values.markDesc, values.fileHash).send({\n          from: values.address[0],\n          gasLimit: \"5000000\"\n        }).catch(() => {\n          throw 'HashAlreadyUsed';\n        });\n        const trademarks = await factory.methods.getTrademarks(values.address[0]).call();\n        const numOfTrademarks = trademarks.length;\n        const address = trademarks[numOfTrademarks - 1];\n        this.props.changeForm('ip_addr', address);\n        this.props.changeForm('address', values.address[0]);\n        this.setState({\n          loading: false\n        });\n        this.props.nextStep(1);\n      } catch (error) {\n        this.setState({\n          loading: false\n        });\n        alert(\"ERROR: The hash has already been registered!\");\n        this.props.previousStep(2);\n      }\n    });\n\n    _defineProperty(this, \"backRegistration\", e => {\n      e.preventDefault();\n      this.props.previousStep(1);\n    });\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n  }\n\n  render() {\n    const {\n      values\n    } = this.props;\n    const {\n      nextStep\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [\"this.state.loading ?\", /*#__PURE__*/_jsxDEV(ClipLoader, {\n        color: color,\n        loading: this.state.loading,\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"form\", {\n        className: style.form,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Confirm your details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.addressLabel,\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.address,\n          type: \"text\",\n          value: values.address,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.dateLabel,\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.date,\n          type: \"text\",\n          value: values.currentDate,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.typeOfIPLabel,\n          children: \"Type of IP:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.typeOfIP,\n          type: \"text\",\n          value: values.typeOfIP,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.markDescLabel,\n          children: \"Mark description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.markDesc,\n          type: \"text\",\n          value: values.markDesc,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.markHashLabel,\n          children: \"Mark hash:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: style.markHash,\n          type: \"text\",\n          value: values.fileHash,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.back,\n          type: \"button\",\n          onClick: this.backRegistration,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.next,\n          type: \"button\",\n          onClick: this.continueRegistration,\n          children: \"Register Trademark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FormRegisterTrademarkConfirm;","map":{"version":3,"sources":["/Users/deepaksng00/Documents/intellectual-property-dapp/components/FormRegisterTrademarkConfirm.js"],"names":["React","Component","Layout","style","Link","Router","web3","factory","ClipLoader","FormRegisterTrademarkConfirm","loading","event","preventDefault","values","props","compiled_trademark","require","setState","methods","createTrademark","markDesc","fileHash","send","from","address","gasLimit","catch","trademarks","getTrademarks","call","numOfTrademarks","length","changeForm","nextStep","error","alert","previousStep","e","componentDidMount","eth","getAccounts","pushRoute","render","color","state","form","addressLabel","dateLabel","date","currentDate","typeOfIPLabel","typeOfIP","markDescLabel","markHashLabel","markHash","back","backRegistration","next","continueRegistration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from './Layout';\nimport style from '../styles/FormRegisterTrademarkConfirm.module.css';\nimport { Link, Router } from '../routes';\nimport web3 from '../ethereum/web3';\nimport factory from '../ethereum/factory';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nclass FormRegisterTrademarkConfirm extends Component {\n  state = {\n    loading: false\n  }\n\n  continueRegistration = async (event) => {\n    event.preventDefault();\n\n    const { values } = this.props;\n    const compiled_trademark = require(\"../ethereum/build/Trademark.json\");\n\n    try {\n      this.setState({loading: true});\n\n      await factory.methods.createTrademark(values.markDesc, values.fileHash)\n        .send({ from: values.address[0], gasLimit: \"5000000\"})\n        .catch(() => {throw 'HashAlreadyUsed';})\n\n      const trademarks = await factory.methods.getTrademarks(values.address[0]).call();\n      const numOfTrademarks = trademarks.length;\n      const address = trademarks[numOfTrademarks-1];\n\n      this.props.changeForm('ip_addr', address);\n      this.props.changeForm('address', values.address[0]);\n\n      this.setState({loading: false})\n\n      this.props.nextStep(1);\n    } catch (error) {\n      this.setState({loading: false})\n      alert(\"ERROR: The hash has already been registered!\");\n      this.props.previousStep(2);\n    }\n  }\n\n  backRegistration = e => {\n    e.preventDefault();\n    this.props.previousStep(1);\n  }\n\n  async componentDidMount() {\n    const address = await web3.eth.getAccounts();\n    if (address == \"\") {\n      alert(\"Metamask is not setup correctly, please load Metamask and try again!\");\n      Router.pushRoute('/');\n    }\n  }\n\n  render() {\n    const { values } = this.props;\n    const { nextStep } = this.props;\n\n    return (\n      <Layout>\n        this.state.loading ?\n\n        <ClipLoader color={color} loading={this.state.loading} size={30} />\n\n        :\n\n        <form className={style.form}>\n          <h2>Confirm your details</h2>\n          <p className={style.addressLabel}>Address:</p>\n          <input className={style.address} type='text' value={values.address} readOnly />\n          <p className={style.dateLabel}>Date:</p>\n          <input className={style.date} type='text' value={values.currentDate} readOnly />\n          <p className={style.typeOfIPLabel}>Type of IP:</p>\n          <input className={style.typeOfIP} type='text' value={values.typeOfIP} readOnly />\n          <p className={style.markDescLabel}>Mark description:</p>\n          <input className={style.markDesc} type='text' value={values.markDesc} readOnly />\n          <p className={style.markHashLabel}>Mark hash:</p>\n          <input className={style.markHash} type='text' value={values.fileHash} readOnly />\n          <button className={style.back} type='button' onClick={ this.backRegistration }>Back</button>\n          <button className={style.next} type='button' onClick={ this.continueRegistration }>Register Trademark</button>\n      </form>\n      </Layout>\n    );\n  }\n}\n\nexport default FormRegisterTrademarkConfirm;\n"]},"metadata":{},"sourceType":"module"}